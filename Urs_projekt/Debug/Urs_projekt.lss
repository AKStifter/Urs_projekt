
Urs_projekt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000017ba  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000180e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000180e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001840  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000248  00000000  00000000  00001880  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00005dde  00000000  00000000  00001ac8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ca7  00000000  00000000  000078a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001a84  00000000  00000000  0000854d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000968  00000000  00000000  00009fd4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000c53  00000000  00000000  0000a93c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00003c17  00000000  00000000  0000b58f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001e0  00000000  00000000  0000f1a6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 1c 06 	jmp	0xc38	; 0xc38 <__ctors_end>
       4:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
       8:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
       c:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      10:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      14:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      18:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      1c:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      20:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      24:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      28:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      2c:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      30:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      34:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      38:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      3c:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      40:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      44:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      48:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      4c:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      50:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>

00000054 <BigFont>:
      54:	10 10 20 5f 00 00 00 00 00 00 00 00 00 00 00 00     .. _............
	...
      7c:	07 00 0f 80 0f 80 0f 80 0f 80 0f 80 07 00 07 00     ................
      8c:	00 00 00 00 07 00 07 00 07 00 00 00 00 00 0e 38     ...............8
      9c:	0e 38 0e 38 0e 38 06 30 00 00 00 00 00 00 00 00     .8.8.8.0........
	...
      b8:	00 00 0c 30 0c 30 0c 30 7f fe 7f fe 0c 30 0c 30     ...0.0.0.....0.0
      c8:	0c 30 0c 30 7f fe 7f fe 0c 30 0c 30 0c 30 00 00     .0.0.....0.0.0..
      d8:	00 00 02 40 02 40 0f f8 1f f8 1a 40 1a 40 1f f0     ...@.@.....@.@..
      e8:	0f f8 02 58 02 58 1f f8 1f f0 02 40 02 40 00 00     ...X.X.....@.@..
      f8:	00 00 00 00 00 00 0e 10 0e 30 0e 70 00 e0 01 c0     .........0.p....
     108:	03 80 07 00 0e 70 0c 70 08 70 00 00 00 00 00 00     .....p.p.p......
     118:	00 00 00 00 0f 00 19 80 19 80 19 80 0f 00 0f 08     ................
     128:	0f 98 19 f8 18 f0 18 e0 19 f0 0f 98 00 00 00 00     ................
     138:	00 00 00 00 07 00 07 00 07 00 0e 00 00 00 00 00     ................
	...
     15c:	00 f0 01 c0 03 80 07 00 0e 00 0e 00 0e 00 0e 00     ................
     16c:	07 00 03 80 01 c0 00 f0 00 00 00 00 00 00 00 00     ................
     17c:	0f 00 03 80 01 c0 00 e0 00 70 00 70 00 70 00 70     .........p.p.p.p
     18c:	00 e0 01 c0 03 80 0f 00 00 00 00 00 00 00 00 00     ................
     19c:	01 80 11 88 09 90 07 e0 07 e0 3f fc 3f fc 07 e0     ..........?.?...
     1ac:	07 e0 09 90 11 88 01 80 00 00 00 00 00 00 00 00     ................
     1bc:	00 00 00 00 01 80 01 80 01 80 0f f0 0f f0 01 80     ................
     1cc:	01 80 01 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     1ec:	00 00 07 00 07 00 07 00 0e 00 00 00 00 00 00 00     ................
	...
     204:	00 00 1f f8 1f f8 00 00 00 00 00 00 00 00 00 00     ................
	...
     22c:	00 00 07 00 07 00 07 00 00 00 00 00 00 00 00 00     ................
     23c:	00 02 00 06 00 0e 00 1c 00 38 00 70 00 e0 01 c0     .........8.p....
     24c:	03 80 07 00 0e 00 1c 00 00 00 00 00 00 00 00 00     ................
     25c:	0f f0 1c 38 1c 78 1c f8 1c f8 1d b8 1d b8 1f 38     ...8.x.........8
     26c:	1f 38 1e 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     27c:	01 80 01 80 03 80 1f 80 1f 80 03 80 03 80 03 80     ................
     28c:	03 80 03 80 03 80 1f f0 00 00 00 00 00 00 00 00     ................
     29c:	0f e0 1c 70 1c 38 00 38 00 70 00 e0 01 c0 03 80     ...p.8.8.p......
     2ac:	07 00 0e 38 1c 38 1f f8 00 00 00 00 00 00 00 00     ...8.8..........
     2bc:	0f e0 1c 70 1c 38 00 38 00 70 03 c0 03 c0 00 70     ...p.8.8.p.....p
     2cc:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     2dc:	00 e0 01 e0 03 e0 06 e0 0c e0 18 e0 1f f8 1f f8     ................
     2ec:	00 e0 00 e0 00 e0 03 f8 00 00 00 00 00 00 00 00     ................
     2fc:	1f f8 1c 00 1c 00 1c 00 1c 00 1f e0 1f f0 00 78     ...............x
     30c:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     31c:	03 e0 07 00 0e 00 1c 00 1c 00 1f f0 1f f8 1c 38     ...............8
     32c:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     33c:	1f fc 1c 1c 1c 1c 1c 1c 00 1c 00 38 00 70 00 e0     ...........8.p..
     34c:	01 c0 03 80 03 80 03 80 00 00 00 00 00 00 00 00     ................
     35c:	0f f0 1c 38 1c 38 1c 38 1f 38 07 e0 07 e0 1c f8     ...8.8.8.8......
     36c:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     37c:	0f f0 1c 38 1c 38 1c 38 1c 38 1f f8 0f f8 00 38     ...8.8.8.8.....8
     38c:	00 38 00 70 00 e0 07 c0 00 00 00 00 00 00 00 00     .8.p............
     39c:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3ac:	03 80 03 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     3bc:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3cc:	03 80 03 80 07 00 00 00 00 00 00 00 00 00 00 70     ...............p
     3dc:	00 e0 01 c0 03 80 07 00 0e 00 1c 00 1c 00 0e 00     ................
     3ec:	07 00 03 80 01 c0 00 e0 00 70 00 00 00 00 00 00     .........p......
     3fc:	00 00 00 00 00 00 3f fc 3f fc 00 00 00 00 3f fc     ......?.?.....?.
     40c:	3f fc 00 00 00 00 00 00 00 00 00 00 00 00 1c 00     ?...............
     41c:	0e 00 07 00 03 80 01 c0 00 e0 00 70 00 70 00 e0     ...........p.p..
     42c:	01 c0 03 80 07 00 0e 00 1c 00 00 00 00 00 03 c0     ................
     43c:	0f f0 1e 78 18 38 00 38 00 70 00 e0 01 c0 01 c0     ...x.8.8.p......
     44c:	00 00 00 00 01 c0 01 c0 01 c0 00 00 00 00 0f f8     ................
     45c:	1c 1c 1c 1c 1c 1c 1c 1c 1c fc 1c fc 1c fc 1c fc     ................
     46c:	1c 00 1c 00 1c 00 1f f0 07 f8 00 00 00 00 00 00     ................
     47c:	03 c0 07 e0 0e 70 1c 38 1c 38 1c 38 1c 38 1f f8     .....p.8.8.8.8..
     48c:	1c 38 1c 38 1c 38 1c 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     49c:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 38     ...8.8.8.8.....8
     4ac:	0e 38 0e 38 0e 38 1f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     4bc:	07 f0 0e 38 1c 38 1c 00 1c 00 1c 00 1c 00 1c 00     ...8.8..........
     4cc:	1c 00 1c 38 0e 38 07 f0 00 00 00 00 00 00 00 00     ...8.8..........
     4dc:	1f e0 0e 70 0e 38 0e 38 0e 38 0e 38 0e 38 0e 38     ...p.8.8.8.8.8.8
     4ec:	0e 38 0e 38 0e 70 1f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     4fc:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     50c:	0e 00 0e 08 0e 18 1f f8 00 00 00 00 00 00 00 00     ................
     51c:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     52c:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     53c:	07 f0 0e 38 1c 38 1c 38 1c 00 1c 00 1c 00 1c f8     ...8.8.8........
     54c:	1c 38 1c 38 0e 38 07 f8 00 00 00 00 00 00 00 00     .8.8.8..........
     55c:	1c 70 1c 70 1c 70 1c 70 1c 70 1f f0 1f f0 1c 70     .p.p.p.p.p.....p
     56c:	1c 70 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     .p.p.p.p........
     57c:	0f e0 03 80 03 80 03 80 03 80 03 80 03 80 03 80     ................
     58c:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     59c:	01 fc 00 70 00 70 00 70 00 70 00 70 00 70 38 70     ...p.p.p.p.p.p8p
     5ac:	38 70 38 70 38 70 0f e0 00 00 00 00 00 00 00 00     8p8p8p..........
     5bc:	1e 38 0e 38 0e 70 0e e0 0f c0 0f 80 0f 80 0f c0     .8.8.p..........
     5cc:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     5dc:	1f 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00     ................
     5ec:	0e 08 0e 18 0e 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     5fc:	1c 1c 1e 3c 1f 7c 1f fc 1f fc 1d dc 1c 9c 1c 1c     ...<.|..........
     60c:	1c 1c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     ................
     61c:	1c 1c 1c 1c 1e 1c 1f 1c 1f 9c 1d dc 1c fc 1c 7c     ...............|
     62c:	1c 3c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     .<..............
     63c:	03 e0 07 f0 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     .....8..........
     64c:	1c 1c 0e 38 07 f0 03 e0 00 00 00 00 00 00 00 00     ...8............
     65c:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 00     ...8.8.8.8......
     66c:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     67c:	03 e0 0f 78 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 7c     ...x.8.........|
     68c:	1c fc 0f f8 0f f8 00 38 00 fc 00 00 00 00 00 00     .......8........
     69c:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 70     ...8.8.8.8.....p
     6ac:	0e 38 0e 38 0e 38 1e 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     6bc:	0f f0 1c 38 1c 38 1c 38 1c 00 0f e0 07 f0 00 38     ...8.8.8.......8
     6cc:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     6dc:	1f fc 19 cc 11 c4 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     6ec:	01 c0 01 c0 01 c0 07 f0 00 00 00 00 00 00 00 00     ................
     6fc:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     70c:	1c 70 1c 70 1c 70 0f e0 00 00 00 00 00 00 00 00     .p.p.p..........
     71c:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     72c:	1c 70 0e e0 07 c0 03 80 00 00 00 00 00 00 00 00     .p..............
     73c:	1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 1c 9c     ................
     74c:	0f f8 0f f8 07 70 07 70 00 00 00 00 00 00 00 00     .....p.p........
     75c:	1c 70 1c 70 1c 70 0e e0 07 c0 03 80 03 80 07 c0     .p.p.p..........
     76c:	0e e0 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     ...p.p.p........
     77c:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
     78c:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     79c:	1f f8 1c 38 18 38 10 70 00 e0 01 c0 03 80 07 00     ...8.8.p........
     7ac:	0e 08 1c 18 1c 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     7bc:	07 f0 07 00 07 00 07 00 07 00 07 00 07 00 07 00     ................
     7cc:	07 00 07 00 07 00 07 f0 00 00 00 00 00 00 00 00     ................
     7dc:	10 00 18 00 1c 00 0e 00 07 00 03 80 01 c0 00 e0     ................
     7ec:	00 70 00 38 00 1c 00 07 00 00 00 00 00 00 00 00     .p.8............
     7fc:	07 f0 00 70 00 70 00 70 00 70 00 70 00 70 00 70     ...p.p.p.p.p.p.p
     80c:	00 70 00 70 00 70 07 f0 00 00 00 00 00 00 01 80     .p.p.p..........
     81c:	03 c0 07 e0 0e 70 1c 38 00 00 00 00 00 00 00 00     .....p.8........
	...
     854:	7f ff 7f ff 00 00 00 00 1c 00 1c 00 07 00 07 00     ................
	...
     884:	0f e0 00 70 00 70 0f f0 1c 70 1c 70 1c 70 0f d8     ...p.p...p.p.p..
	...
     89c:	1e 00 0e 00 0e 00 0e 00 0f f0 0e 38 0e 38 0e 38     ...........8.8.8
     8ac:	0e 38 0e 38 0e 38 1b f0 00 00 00 00 00 00 00 00     .8.8.8..........
	...
     8c4:	0f e0 1c 70 1c 70 1c 00 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     8dc:	00 f8 00 70 00 70 00 70 0f f0 1c 70 1c 70 1c 70     ...p.p.p...p.p.p
     8ec:	1c 70 1c 70 1c 70 0f d8 00 00 00 00 00 00 00 00     .p.p.p..........
	...
     904:	0f e0 1c 70 1c 70 1f f0 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     91c:	03 e0 07 70 07 70 07 00 07 00 1f e0 1f e0 07 00     ...p.p..........
     92c:	07 00 07 00 07 00 1f c0 00 00 00 00 00 00 00 00     ................
	...
     944:	0f d8 1c 70 1c 70 1c 70 1c 70 0f f0 07 f0 00 70     ...p.p.p.p.....p
     954:	1c 70 0f e0 00 00 00 00 1e 00 0e 00 0e 00 0e 00     .p..............
     964:	0e f0 0f 38 0f 38 0e 38 0e 38 0e 38 0e 38 1e 38     ...8.8.8.8.8.8.8
	...
     97c:	01 c0 01 c0 01 c0 00 00 0f c0 01 c0 01 c0 01 c0     ................
     98c:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
     99c:	00 70 00 70 00 70 00 00 03 f0 00 70 00 70 00 70     .p.p.p.....p.p.p
     9ac:	00 70 00 70 00 70 1c 70 0c f0 07 e0 00 00 00 00     .p.p.p.p........
     9bc:	1e 00 0e 00 0e 00 0e 00 0e 38 0e 70 0e e0 0f c0     .........8.p....
     9cc:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     9dc:	0f c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     9ec:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
	...
     a04:	1f f8 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c     ................
	...
     a24:	1f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     ...p.p.p.p.p.p.p
	...
     a44:	0f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f e0     ...p.p.p.p.p.p..
	...
     a64:	1b f0 0e 38 0e 38 0e 38 0e 38 0e 38 0f f0 0e 00     ...8.8.8.8.8....
     a74:	0e 00 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     a84:	1f b0 38 e0 38 e0 38 e0 38 e0 38 e0 1f e0 00 e0     ..8.8.8.8.8.....
     a94:	00 e0 01 f0 00 00 00 00 00 00 00 00 00 00 00 00     ................
     aa4:	1e f0 0f f8 0f 38 0e 00 0e 00 0e 00 0e 00 1f 00     .....8..........
	...
     ac4:	0f e0 1c 30 1c 30 0f 80 03 e0 18 70 18 70 0f e0     ...0.0.....p.p..
	...
     adc:	00 00 01 00 03 00 07 00 1f f0 07 00 07 00 07 00     ................
     aec:	07 00 07 70 07 70 03 e0 00 00 00 00 00 00 00 00     ...p.p..........
	...
     b04:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f d8     .p.p.p.p.p.p.p..
	...
     b24:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
	...
     b44:	1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 0f f8 07 70 07 70     .............p.p
	...
     b64:	1c e0 1c e0 0f c0 07 80 07 80 0f c0 1c e0 1c e0     ................
	...
     b84:	0e 38 0e 38 0e 38 0e 38 0e 38 07 f0 03 e0 00 e0     .8.8.8.8.8......
     b94:	01 c0 1f 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ba4:	1f e0 18 e0 11 c0 03 80 07 00 0e 20 1c 60 1f e0     ........... .`..
	...
     bbc:	01 f8 03 80 03 80 03 80 07 00 1c 00 1c 00 07 00     ................
     bcc:	03 80 03 80 03 80 01 f8 00 00 00 00 00 00 01 c0     ................
     bdc:	01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     bec:	01 c0 01 c0 01 c0 01 c0 01 c0 00 00 00 00 00 00     ................
     bfc:	1f 80 01 c0 01 c0 01 c0 00 e0 00 38 00 38 00 e0     ...........8.8..
     c0c:	01 c0 01 c0 01 c0 1f 80 00 00 00 00 00 00 00 00     ................
     c1c:	1f 1c 3b 9c 39 dc 38 f8 00 00 00 00 00 00 00 00     ..;.9.8.........
	...

00000c38 <__ctors_end>:
     c38:	11 24       	eor	r1, r1
     c3a:	1f be       	out	0x3f, r1	; 63
     c3c:	cf e5       	ldi	r28, 0x5F	; 95
     c3e:	d4 e0       	ldi	r29, 0x04	; 4
     c40:	de bf       	out	0x3e, r29	; 62
     c42:	cd bf       	out	0x3d, r28	; 61
     c44:	0e 94 0f 07 	call	0xe1e	; 0xe1e <main>
     c48:	0c 94 db 0b 	jmp	0x17b6	; 0x17b6 <_exit>

00000c4c <__bad_interrupt>:
     c4c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000c50 <fastfill>:
// r22-r25 unsigned 32 bit number of pixels to set.
// note that only 17 bits of this are used, so max pixels
// is 131071, which is fine since we only have 320 * 240 pixels or 76800 loops
fastfill:

	clr r18
     c50:	22 27       	eor	r18, r18

	// devide by 2
	// no need for register 25 it has no bits we care about.
	lsr r24
     c52:	86 95       	lsr	r24
	ror r23
     c54:	77 95       	ror	r23
	ror r22
     c56:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
     c58:	27 95       	ror	r18

	// devide by 4
	// no need for register 24, it had a max of 1 bit we care about.
	lsr r23
     c5a:	76 95       	lsr	r23
	ror r22
     c5c:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
     c5e:	27 95       	ror	r18

	// devide by 8
	//lsr r24
	lsr r23
     c60:	76 95       	lsr	r23
	ror r22
     c62:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
     c64:	27 95       	ror	r18

	// devide by 16		
	// lsr r24
	lsr r23
     c66:	76 95       	lsr	r23
	ror r22
     c68:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
     c6a:	27 95       	ror	r18

	// finish rolling a full 8 bits aka swap nibbles
	swap r18
     c6c:	22 95       	swap	r18

	movw r24, r22
     c6e:	cb 01       	movw	r24, r22

00000c70 <fastfill2>:
// r24 + r25 hold 16 bit unsigned number of 16xloops.
// r18 holds 8 bit unsigned numner of single loops
fastfill2:

	// prepare the out port registers
	in r30, _SFR_IO_ADDR(WR_PORT)
     c70:	e5 b3       	in	r30, 0x15	; 21
	mov r31, r30
     c72:	fe 2f       	mov	r31, r30
	set
     c74:	68 94       	set
	bld r30,WR_PIN
     c76:	e6 f9       	bld	r30, 6
	clt
     c78:	e8 94       	clt
	bld r31,WR_PIN
     c7a:	f6 f9       	bld	r31, 6

	sbiw r24,0 // subtract zero and test if zero	
     c7c:	00 97       	sbiw	r24, 0x00	; 0
	breq exitloop16
     c7e:	11 f1       	breq	.+68     	; 0xcc4 <exitloop16>

00000c80 <loop16>:
loop16:
		
	TOGGLE_WR_FAST r31,r30
     c80:	f5 bb       	out	0x15, r31	; 21
     c82:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     c84:	f5 bb       	out	0x15, r31	; 21
     c86:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     c88:	f5 bb       	out	0x15, r31	; 21
     c8a:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     c8c:	f5 bb       	out	0x15, r31	; 21
     c8e:	e5 bb       	out	0x15, r30	; 21
		
	TOGGLE_WR_FAST r31,r30
     c90:	f5 bb       	out	0x15, r31	; 21
     c92:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     c94:	f5 bb       	out	0x15, r31	; 21
     c96:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     c98:	f5 bb       	out	0x15, r31	; 21
     c9a:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     c9c:	f5 bb       	out	0x15, r31	; 21
     c9e:	e5 bb       	out	0x15, r30	; 21
		
	TOGGLE_WR_FAST r31,r30
     ca0:	f5 bb       	out	0x15, r31	; 21
     ca2:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     ca4:	f5 bb       	out	0x15, r31	; 21
     ca6:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     ca8:	f5 bb       	out	0x15, r31	; 21
     caa:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     cac:	f5 bb       	out	0x15, r31	; 21
     cae:	e5 bb       	out	0x15, r30	; 21
		
	TOGGLE_WR_FAST r31,r30
     cb0:	f5 bb       	out	0x15, r31	; 21
     cb2:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     cb4:	f5 bb       	out	0x15, r31	; 21
     cb6:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     cb8:	f5 bb       	out	0x15, r31	; 21
     cba:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     cbc:	f5 bb       	out	0x15, r31	; 21
     cbe:	e5 bb       	out	0x15, r30	; 21

	sbiw r24,1	
     cc0:	01 97       	sbiw	r24, 0x01	; 1
	brne loop16
     cc2:	f1 f6       	brne	.-68     	; 0xc80 <loop16>

00000cc4 <exitloop16>:

exitloop16:

	cpi r18,0
     cc4:	20 30       	cpi	r18, 0x00	; 0
	breq exitsingleloop
     cc6:	21 f0       	breq	.+8      	; 0xcd0 <exitsingleloop>

00000cc8 <singleloop>:
singleloop:			
	TOGGLE_WR_FAST r31,r30
     cc8:	f5 bb       	out	0x15, r31	; 21
     cca:	e5 bb       	out	0x15, r30	; 21
	dec r18
     ccc:	2a 95       	dec	r18
	brne singleloop
     cce:	e1 f7       	brne	.-8      	; 0xcc8 <singleloop>

00000cd0 <exitsingleloop>:

exitsingleloop:
	ret 
     cd0:	08 95       	ret

00000cd2 <fastfill3>:

// r22-r25 unsigned 32 bit number of pixels to set.
// note that only 17 bits of this are used, so max pixels
// is 131071, which is fine since we only have 320 * 240 pixels or 76800 loops
fastfill3:
	TOGGLE_WR
     cd2:	ae 98       	cbi	0x15, 6	; 21
     cd4:	ae 9a       	sbi	0x15, 6	; 21
	SUB32 r22,r23,r24,r25,1
     cd6:	61 50       	subi	r22, 0x01	; 1
     cd8:	70 40       	sbci	r23, 0x00	; 0
     cda:	80 40       	sbci	r24, 0x00	; 0
     cdc:	90 40       	sbci	r25, 0x00	; 0
	brne fastfill3
     cde:	c9 f7       	brne	.-14     	; 0xcd2 <fastfill3>

     ce0:	08 95       	ret

00000ce2 <LCD_Write_COM>:
#include "as_macros.h"


.global LCD_Write_COM
LCD_Write_COM:
	BUS_START_REG
     ce2:	af 98       	cbi	0x15, 7	; 21
	clr r1
     ce4:	11 24       	eor	r1, r1
	out DPLIO, r24
     ce6:	82 bb       	out	0x12, r24	; 18
	out DPHIO, r1
     ce8:	1b ba       	out	0x1b, r1	; 27
	TOGGLE_WR
     cea:	ae 98       	cbi	0x15, 6	; 21
     cec:	ae 9a       	sbi	0x15, 6	; 21
	ret
     cee:	08 95       	ret

00000cf0 <LCD_Write_DATA>:

.global LCD_Write_DATA
LCD_Write_DATA:
	BUS_START_DATA	
     cf0:	af 9a       	sbi	0x15, 7	; 21
	out DPLIO, r22
     cf2:	62 bb       	out	0x12, r22	; 18
	out DPHIO, r24
     cf4:	8b bb       	out	0x1b, r24	; 27
	TOGGLE_WR
     cf6:	ae 98       	cbi	0x15, 6	; 21
     cf8:	ae 9a       	sbi	0x15, 6	; 21
	ret
     cfa:	08 95       	ret

00000cfc <LCD_Write_DATA2>:

.global LCD_Write_DATA2
LCD_Write_DATA2:
	BUS_START_DATA	
     cfc:	af 9a       	sbi	0x15, 7	; 21
	clr r1
     cfe:	11 24       	eor	r1, r1
	out DPLIO, r24
     d00:	82 bb       	out	0x12, r24	; 18
	out DPHIO, r1
     d02:	1b ba       	out	0x1b, r1	; 27
	TOGGLE_WR
     d04:	ae 98       	cbi	0x15, 6	; 21
     d06:	ae 9a       	sbi	0x15, 6	; 21
	ret
     d08:	08 95       	ret

00000d0a <LCD_Write_COM_DATA>:


.global LCD_Write_COM_DATA
LCD_Write_COM_DATA:
	
	BUS_START_REG
     d0a:	af 98       	cbi	0x15, 7	; 21
	clr r1
     d0c:	11 24       	eor	r1, r1
	out DPLIO, r24
     d0e:	82 bb       	out	0x12, r24	; 18
	out DPHIO, r1
     d10:	1b ba       	out	0x1b, r1	; 27
	TOGGLE_WR
     d12:	ae 98       	cbi	0x15, 6	; 21
     d14:	ae 9a       	sbi	0x15, 6	; 21

	BUS_START_DATA	
     d16:	af 9a       	sbi	0x15, 7	; 21
	out DPLIO, r22
     d18:	62 bb       	out	0x12, r22	; 18
	out DPHIO, r23
     d1a:	7b bb       	out	0x1b, r23	; 27
	TOGGLE_WR
     d1c:	ae 98       	cbi	0x15, 6	; 21
     d1e:	ae 9a       	sbi	0x15, 6	; 21

	ret
     d20:	08 95       	ret

00000d22 <LCD_Writ_Bus>:


.global LCD_Writ_Bus
	LCD_Writ_Bus:

	out DPHIO, r24
     d22:	8b bb       	out	0x1b, r24	; 27
	out DPLIO, r22
     d24:	62 bb       	out	0x12, r22	; 18
	TOGGLE_WR
     d26:	ae 98       	cbi	0x15, 6	; 21
     d28:	ae 9a       	sbi	0x15, 6	; 21

     d2a:	08 95       	ret

00000d2c <_Z7Touchedv>:
#include "UTFT/DefaultFonts.h"
#include "SPI_Master_H_file.h"

bool Touched() {
	// PINB3(T-IRQ) nizak pri dodiru
	if (bit_is_clear(PINB, T_IRQ)){
     d2c:	b3 99       	sbic	0x16, 3	; 22
     d2e:	02 c0       	rjmp	.+4      	; 0xd34 <_Z7Touchedv+0x8>
		return true;
     d30:	81 e0       	ldi	r24, 0x01	; 1
     d32:	08 95       	ret
		} else {
		return false;
     d34:	80 e0       	ldi	r24, 0x00	; 0
	}
}
     d36:	08 95       	ret

00000d38 <_Z4getXv>:

int getX() {
     d38:	cf 92       	push	r12
     d3a:	df 92       	push	r13
     d3c:	ef 92       	push	r14
     d3e:	ff 92       	push	r15
	SPI_Write(0X90);
     d40:	80 e9       	ldi	r24, 0x90	; 144
     d42:	0e 94 61 07 	call	0xec2	; 0xec2 <SPI_Write>
	float x = SPI_Read() / 120.0 * 320 - 15;
     d46:	0e 94 66 07 	call	0xecc	; 0xecc <SPI_Read>
     d4a:	68 2f       	mov	r22, r24
     d4c:	70 e0       	ldi	r23, 0x00	; 0
     d4e:	80 e0       	ldi	r24, 0x00	; 0
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	0e 94 be 0a 	call	0x157c	; 0x157c <__floatsisf>
     d56:	20 e0       	ldi	r18, 0x00	; 0
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	40 ef       	ldi	r20, 0xF0	; 240
     d5c:	52 e4       	ldi	r21, 0x42	; 66
     d5e:	0e 94 14 0a 	call	0x1428	; 0x1428 <__divsf3>
     d62:	20 e0       	ldi	r18, 0x00	; 0
     d64:	30 e0       	ldi	r19, 0x00	; 0
     d66:	40 ea       	ldi	r20, 0xA0	; 160
     d68:	53 e4       	ldi	r21, 0x43	; 67
     d6a:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__mulsf3>
     d6e:	20 e0       	ldi	r18, 0x00	; 0
     d70:	30 e0       	ldi	r19, 0x00	; 0
     d72:	40 e7       	ldi	r20, 0x70	; 112
     d74:	51 e4       	ldi	r21, 0x41	; 65
     d76:	0e 94 a2 09 	call	0x1344	; 0x1344 <__subsf3>
     d7a:	6b 01       	movw	r12, r22
     d7c:	7c 01       	movw	r14, r24
	SPI_Write(0);
     d7e:	80 e0       	ldi	r24, 0x00	; 0
     d80:	0e 94 61 07 	call	0xec2	; 0xec2 <SPI_Write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     d84:	8f ef       	ldi	r24, 0xFF	; 255
     d86:	97 e4       	ldi	r25, 0x47	; 71
     d88:	01 97       	sbiw	r24, 0x01	; 1
     d8a:	f1 f7       	brne	.-4      	; 0xd88 <_Z4getXv+0x50>
     d8c:	00 c0       	rjmp	.+0      	; 0xd8e <_Z4getXv+0x56>
     d8e:	00 00       	nop
	_delay_ms(10);
	return (int) x;
     d90:	c7 01       	movw	r24, r14
     d92:	b6 01       	movw	r22, r12
     d94:	0e 94 86 0a 	call	0x150c	; 0x150c <__fixsfsi>
}
     d98:	cb 01       	movw	r24, r22
     d9a:	ff 90       	pop	r15
     d9c:	ef 90       	pop	r14
     d9e:	df 90       	pop	r13
     da0:	cf 90       	pop	r12
     da2:	08 95       	ret

00000da4 <_Z4getYv>:

int getY() {
     da4:	cf 92       	push	r12
     da6:	df 92       	push	r13
     da8:	ef 92       	push	r14
     daa:	ff 92       	push	r15
	float y = 0;
     dac:	c1 2c       	mov	r12, r1
     dae:	d1 2c       	mov	r13, r1
     db0:	76 01       	movw	r14, r12
	while(y <= 0 ){
     db2:	20 e0       	ldi	r18, 0x00	; 0
     db4:	30 e0       	ldi	r19, 0x00	; 0
     db6:	a9 01       	movw	r20, r18
     db8:	c7 01       	movw	r24, r14
     dba:	b6 01       	movw	r22, r12
     dbc:	0e 94 0f 0a 	call	0x141e	; 0x141e <__cmpsf2>
     dc0:	18 16       	cp	r1, r24
     dc2:	ec f0       	brlt	.+58     	; 0xdfe <_Z4getYv+0x5a>
		SPI_Write(0XD0);
     dc4:	80 ed       	ldi	r24, 0xD0	; 208
     dc6:	0e 94 61 07 	call	0xec2	; 0xec2 <SPI_Write>
		y = SPI_Read() / 120.0 * 240;
     dca:	0e 94 66 07 	call	0xecc	; 0xecc <SPI_Read>
     dce:	68 2f       	mov	r22, r24
     dd0:	70 e0       	ldi	r23, 0x00	; 0
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	0e 94 be 0a 	call	0x157c	; 0x157c <__floatsisf>
     dda:	20 e0       	ldi	r18, 0x00	; 0
     ddc:	30 e0       	ldi	r19, 0x00	; 0
     dde:	40 ef       	ldi	r20, 0xF0	; 240
     de0:	52 e4       	ldi	r21, 0x42	; 66
     de2:	0e 94 14 0a 	call	0x1428	; 0x1428 <__divsf3>
     de6:	20 e0       	ldi	r18, 0x00	; 0
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	40 e7       	ldi	r20, 0x70	; 112
     dec:	53 e4       	ldi	r21, 0x43	; 67
     dee:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__mulsf3>
     df2:	6b 01       	movw	r12, r22
     df4:	7c 01       	movw	r14, r24
		SPI_Write(0);
     df6:	80 e0       	ldi	r24, 0x00	; 0
     df8:	0e 94 61 07 	call	0xec2	; 0xec2 <SPI_Write>
	return (int) x;
}

int getY() {
	float y = 0;
	while(y <= 0 ){
     dfc:	da cf       	rjmp	.-76     	; 0xdb2 <_Z4getYv+0xe>
     dfe:	8f ef       	ldi	r24, 0xFF	; 255
     e00:	97 e4       	ldi	r25, 0x47	; 71
     e02:	01 97       	sbiw	r24, 0x01	; 1
     e04:	f1 f7       	brne	.-4      	; 0xe02 <_Z4getYv+0x5e>
     e06:	00 c0       	rjmp	.+0      	; 0xe08 <_Z4getYv+0x64>
     e08:	00 00       	nop
		y = SPI_Read() / 120.0 * 240;
		SPI_Write(0);
	}
	_delay_ms(10);
	
	return (int) y;
     e0a:	c7 01       	movw	r24, r14
     e0c:	b6 01       	movw	r22, r12
     e0e:	0e 94 86 0a 	call	0x150c	; 0x150c <__fixsfsi>
}
     e12:	cb 01       	movw	r24, r22
     e14:	ff 90       	pop	r15
     e16:	ef 90       	pop	r14
     e18:	df 90       	pop	r13
     e1a:	cf 90       	pop	r12
     e1c:	08 95       	ret

00000e1e <main>:


int main(void) {	
     e1e:	cf 93       	push	r28
     e20:	df 93       	push	r29
     e22:	cd b7       	in	r28, 0x3d	; 61
     e24:	de b7       	in	r29, 0x3e	; 62
     e26:	63 97       	sbiw	r28, 0x13	; 19
     e28:	0f b6       	in	r0, 0x3f	; 63
     e2a:	f8 94       	cli
     e2c:	de bf       	out	0x3e, r29	; 62
     e2e:	0f be       	out	0x3f, r0	; 63
     e30:	cd bf       	out	0x3d, r28	; 61
	UTFT display;
     e32:	ce 01       	movw	r24, r28
     e34:	01 96       	adiw	r24, 0x01	; 1
     e36:	0e 94 79 08 	call	0x10f2	; 0x10f2 <_ZN4UTFTC1Ev>
	display.InitLCD(LANDSCAPE);
     e3a:	61 e0       	ldi	r22, 0x01	; 1
     e3c:	ce 01       	movw	r24, r28
     e3e:	01 96       	adiw	r24, 0x01	; 1
     e40:	0e 94 51 09 	call	0x12a2	; 0x12a2 <_ZN4UTFT7InitLCDEh>
	display.setFont(BigFont);
     e44:	64 e5       	ldi	r22, 0x54	; 84
     e46:	70 e0       	ldi	r23, 0x00	; 0
     e48:	ce 01       	movw	r24, r28
     e4a:	01 96       	adiw	r24, 0x01	; 1
     e4c:	0e 94 87 09 	call	0x130e	; 0x130e <_ZN4UTFT7setFontEPKh>
	display.clrScr();
     e50:	ce 01       	movw	r24, r28
     e52:	01 96       	adiw	r24, 0x01	; 1
     e54:	0e 94 d3 08 	call	0x11a6	; 0x11a6 <_ZN4UTFT6clrScrEv>
	
	//T-IRQ spojen na PINB3 kao ulazni te je nizak samo pri dodiru, inace visok
	DDRB &= ~_BV(T_IRQ);
     e58:	87 b3       	in	r24, 0x17	; 23
     e5a:	87 7f       	andi	r24, 0xF7	; 247
     e5c:	87 bb       	out	0x17, r24	; 23

	SPI_Init();
     e5e:	0e 94 52 07 	call	0xea4	; 0xea4 <SPI_Init>
	SS_Enable;
     e62:	88 b3       	in	r24, 0x18	; 24
     e64:	8f 7e       	andi	r24, 0xEF	; 239
     e66:	88 bb       	out	0x18, r24	; 24
	display.fillRect(110, 140, 220, 200);
	
	display.setBackColor(255, 125, 0);
	display.setColor(0, 0, 0);
	display.print("Radi!", 125, 160,0);*/
	display.setColor(255, 125, 0);
     e68:	20 e0       	ldi	r18, 0x00	; 0
     e6a:	4d e7       	ldi	r20, 0x7D	; 125
     e6c:	6f ef       	ldi	r22, 0xFF	; 255
     e6e:	ce 01       	movw	r24, r28
     e70:	01 96       	adiw	r24, 0x01	; 1
     e72:	0e 94 09 09 	call	0x1212	; 0x1212 <_ZN4UTFT8setColorEhhh>
	display.setBackColor(255, 125, 0);
     e76:	20 e0       	ldi	r18, 0x00	; 0
     e78:	4d e7       	ldi	r20, 0x7D	; 125
     e7a:	6f ef       	ldi	r22, 0xFF	; 255
     e7c:	ce 01       	movw	r24, r28
     e7e:	01 96       	adiw	r24, 0x01	; 1
     e80:	0e 94 2c 09 	call	0x1258	; 0x1258 <_ZN4UTFT12setBackColorEhhh>
	uint16_t x,y = 0;
	
	while (1) {
		if(Touched())
     e84:	0e 94 96 06 	call	0xd2c	; 0xd2c <_Z7Touchedv>
     e88:	88 23       	and	r24, r24
     e8a:	e1 f3       	breq	.-8      	; 0xe84 <main+0x66>
		{
			x = getX();
     e8c:	0e 94 9c 06 	call	0xd38	; 0xd38 <_Z4getXv>
     e90:	8c 01       	movw	r16, r24
			y = getY();
     e92:	0e 94 d2 06 	call	0xda4	; 0xda4 <_Z4getYv>
			display.drawPixel(x, y);
     e96:	ac 01       	movw	r20, r24
     e98:	b8 01       	movw	r22, r16
     e9a:	ce 01       	movw	r24, r28
     e9c:	01 96       	adiw	r24, 0x01	; 1
     e9e:	0e 94 69 09 	call	0x12d2	; 0x12d2 <_ZN4UTFT9drawPixelEii>
     ea2:	f0 cf       	rjmp	.-32     	; 0xe84 <main+0x66>

00000ea4 <SPI_Init>:
#include "SPI_Master_H_file.h"				/* Include SPI Master header file */


void SPI_Init()								/* SPI Initialize function */
{
	DDRB |= (1<<MOSI)|(1<<SCK)|(1<<SS);		/* Make MOSI, SCK, 0th pin direction as output pins */
     ea4:	87 b3       	in	r24, 0x17	; 23
     ea6:	80 6b       	ori	r24, 0xB0	; 176
     ea8:	87 bb       	out	0x17, r24	; 23
	DDRB &= ~(1<<MISO);						/* Make MISO pin as input pin */
     eaa:	87 b3       	in	r24, 0x17	; 23
     eac:	8f 7b       	andi	r24, 0xBF	; 191
     eae:	87 bb       	out	0x17, r24	; 23
	PORTB |= (1<<SS);						/* Disable slave initially by making high on SS pin */
     eb0:	88 b3       	in	r24, 0x18	; 24
     eb2:	80 61       	ori	r24, 0x10	; 16
     eb4:	88 bb       	out	0x18, r24	; 24
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);	/* Enable SPI, Enable in master mode, with Fosc/16 SCK frequency */
     eb6:	81 e5       	ldi	r24, 0x51	; 81
     eb8:	8d b9       	out	0x0d, r24	; 13
	SPSR &= ~(1<<SPI2X);					/* Disable speed doubler */
     eba:	8e b1       	in	r24, 0x0e	; 14
     ebc:	8e 7f       	andi	r24, 0xFE	; 254
     ebe:	8e b9       	out	0x0e, r24	; 14
     ec0:	08 95       	ret

00000ec2 <SPI_Write>:
}

void SPI_Write(char data)					/* SPI write data function */
{
	char flush_buffer;
	SPDR = data;							/* Write data to SPI data register */
     ec2:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));				/* Wait till transmission complete */
     ec4:	77 9b       	sbis	0x0e, 7	; 14
     ec6:	fe cf       	rjmp	.-4      	; 0xec4 <SPI_Write+0x2>
	flush_buffer = SPDR;					/* Flush received data */
     ec8:	8f b1       	in	r24, 0x0f	; 15
     eca:	08 95       	ret

00000ecc <SPI_Read>:
/* Note: SPIF flag is cleared by first reading SPSR (with SPIF set) and then accessing SPDR hence flush buffer used here to access SPDR after SPSR read */
}

char SPI_Read()								/* SPI read data function */
{
	SPDR = 0xFF;
     ecc:	8f ef       	ldi	r24, 0xFF	; 255
     ece:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));				/* Wait till reception complete */
     ed0:	77 9b       	sbis	0x0e, 7	; 14
     ed2:	fe cf       	rjmp	.-4      	; 0xed0 <SPI_Read+0x4>
	return(SPDR);							/* return received data */
     ed4:	8f b1       	in	r24, 0x0f	; 15
}
     ed6:	08 95       	ret

00000ed8 <SSD1289_init>:



void SSD1289_init()
{	
	DATA_PORT_LOW_DDR = 0xff;
     ed8:	8f ef       	ldi	r24, 0xFF	; 255
     eda:	81 bb       	out	0x11, r24	; 17
	DATA_PORT_HIGH_DDR = 0xff;
     edc:	8a bb       	out	0x1a, r24	; 26
			
	RS_PORT_DDR |= _BV( RS_PIN);
     ede:	84 b3       	in	r24, 0x14	; 20
     ee0:	80 68       	ori	r24, 0x80	; 128
     ee2:	84 bb       	out	0x14, r24	; 20
				
	WR_PORT_DDR |= _BV(WR_PIN);
     ee4:	84 b3       	in	r24, 0x14	; 20
     ee6:	80 64       	ori	r24, 0x40	; 64
     ee8:	84 bb       	out	0x14, r24	; 20

	CS_PORT_DDR |= _BV(CS_PIN);
     eea:	84 b3       	in	r24, 0x14	; 20
     eec:	81 60       	ori	r24, 0x01	; 1
     eee:	84 bb       	out	0x14, r24	; 20
		
	RD_PORT_DDR |= _BV(RD_PIN);
     ef0:	87 b3       	in	r24, 0x17	; 23
     ef2:	81 60       	ori	r24, 0x01	; 1
     ef4:	87 bb       	out	0x17, r24	; 23
	RD_PORT |= _BV(RD_PIN);
     ef6:	88 b3       	in	r24, 0x18	; 24
     ef8:	81 60       	ori	r24, 0x01	; 1
     efa:	88 bb       	out	0x18, r24	; 24
		
	RESET_PORT_DDR |= _BV(RESET_PIN);
     efc:	84 b3       	in	r24, 0x14	; 20
     efe:	82 60       	ori	r24, 0x02	; 2
     f00:	84 bb       	out	0x14, r24	; 20
		
	BACK_LIGHT_PORT |= _BV(BACK_LIGHT_PIN);
     f02:	88 b3       	in	r24, 0x18	; 24
     f04:	82 60       	ori	r24, 0x02	; 2
     f06:	88 bb       	out	0x18, r24	; 24
	
	BACK_LIGHT_DDR |= _BV(BACK_LIGHT_PIN);			
     f08:	87 b3       	in	r24, 0x17	; 23
     f0a:	82 60       	ori	r24, 0x02	; 2
     f0c:	87 bb       	out	0x17, r24	; 23
	
	sbi(RESET_PORT, RESET_PIN);
     f0e:	85 b3       	in	r24, 0x15	; 21
     f10:	82 60       	ori	r24, 0x02	; 2
     f12:	85 bb       	out	0x15, r24	; 21
     f14:	8f ef       	ldi	r24, 0xFF	; 255
     f16:	93 e2       	ldi	r25, 0x23	; 35
     f18:	01 97       	sbiw	r24, 0x01	; 1
     f1a:	f1 f7       	brne	.-4      	; 0xf18 <SSD1289_init+0x40>
     f1c:	00 c0       	rjmp	.+0      	; 0xf1e <SSD1289_init+0x46>
     f1e:	00 00       	nop
	_delay_ms(5);
	cbi(RESET_PORT, RESET_PIN);
     f20:	85 b3       	in	r24, 0x15	; 21
     f22:	8d 7f       	andi	r24, 0xFD	; 253
     f24:	85 bb       	out	0x15, r24	; 21
     f26:	8f ef       	ldi	r24, 0xFF	; 255
     f28:	9b e6       	ldi	r25, 0x6B	; 107
     f2a:	01 97       	sbiw	r24, 0x01	; 1
     f2c:	f1 f7       	brne	.-4      	; 0xf2a <SSD1289_init+0x52>
     f2e:	00 c0       	rjmp	.+0      	; 0xf30 <SSD1289_init+0x58>
     f30:	00 00       	nop
	_delay_ms(15);
	sbi(RESET_PORT, RESET_PIN);
     f32:	85 b3       	in	r24, 0x15	; 21
     f34:	82 60       	ori	r24, 0x02	; 2
     f36:	85 bb       	out	0x15, r24	; 21
     f38:	8f ef       	ldi	r24, 0xFF	; 255
     f3a:	9b e6       	ldi	r25, 0x6B	; 107
     f3c:	01 97       	sbiw	r24, 0x01	; 1
     f3e:	f1 f7       	brne	.-4      	; 0xf3c <SSD1289_init+0x64>
     f40:	00 c0       	rjmp	.+0      	; 0xf42 <SSD1289_init+0x6a>
     f42:	00 00       	nop
	_delay_ms(15);

	cbi(CS_PORT, CS_PIN);
     f44:	85 b3       	in	r24, 0x15	; 21
     f46:	8e 7f       	andi	r24, 0xFE	; 254
     f48:	85 bb       	out	0x15, r24	; 21

	LCD_Write_COM_DATA(0x00,0x0001);
     f4a:	61 e0       	ldi	r22, 0x01	; 1
     f4c:	70 e0       	ldi	r23, 0x00	; 0
     f4e:	80 e0       	ldi	r24, 0x00	; 0
     f50:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x03,0xA8A4);
     f54:	64 ea       	ldi	r22, 0xA4	; 164
     f56:	78 ea       	ldi	r23, 0xA8	; 168
     f58:	83 e0       	ldi	r24, 0x03	; 3
     f5a:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0C,0x0000);
     f5e:	60 e0       	ldi	r22, 0x00	; 0
     f60:	70 e0       	ldi	r23, 0x00	; 0
     f62:	8c e0       	ldi	r24, 0x0C	; 12
     f64:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0D,0x080C);
     f68:	6c e0       	ldi	r22, 0x0C	; 12
     f6a:	78 e0       	ldi	r23, 0x08	; 8
     f6c:	8d e0       	ldi	r24, 0x0D	; 13
     f6e:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0E,0x2B00);
     f72:	60 e0       	ldi	r22, 0x00	; 0
     f74:	7b e2       	ldi	r23, 0x2B	; 43
     f76:	8e e0       	ldi	r24, 0x0E	; 14
     f78:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x1E,0x00B7);
     f7c:	67 eb       	ldi	r22, 0xB7	; 183
     f7e:	70 e0       	ldi	r23, 0x00	; 0
     f80:	8e e1       	ldi	r24, 0x1E	; 30
     f82:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x01,0x2B3F);
     f86:	6f e3       	ldi	r22, 0x3F	; 63
     f88:	7b e2       	ldi	r23, 0x2B	; 43
     f8a:	81 e0       	ldi	r24, 0x01	; 1
     f8c:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x02,0x0600);
     f90:	60 e0       	ldi	r22, 0x00	; 0
     f92:	76 e0       	ldi	r23, 0x06	; 6
     f94:	82 e0       	ldi	r24, 0x02	; 2
     f96:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x10,0x0000);
     f9a:	60 e0       	ldi	r22, 0x00	; 0
     f9c:	70 e0       	ldi	r23, 0x00	; 0
     f9e:	80 e1       	ldi	r24, 0x10	; 16
     fa0:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x11,0x6070);
     fa4:	60 e7       	ldi	r22, 0x70	; 112
     fa6:	70 e6       	ldi	r23, 0x60	; 96
     fa8:	81 e1       	ldi	r24, 0x11	; 17
     faa:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x05,0x0000);
     fae:	60 e0       	ldi	r22, 0x00	; 0
     fb0:	70 e0       	ldi	r23, 0x00	; 0
     fb2:	85 e0       	ldi	r24, 0x05	; 5
     fb4:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x06,0x0000);
     fb8:	60 e0       	ldi	r22, 0x00	; 0
     fba:	70 e0       	ldi	r23, 0x00	; 0
     fbc:	86 e0       	ldi	r24, 0x06	; 6
     fbe:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x16,0xEF1C);
     fc2:	6c e1       	ldi	r22, 0x1C	; 28
     fc4:	7f ee       	ldi	r23, 0xEF	; 239
     fc6:	86 e1       	ldi	r24, 0x16	; 22
     fc8:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x17,0x0003);
     fcc:	63 e0       	ldi	r22, 0x03	; 3
     fce:	70 e0       	ldi	r23, 0x00	; 0
     fd0:	87 e1       	ldi	r24, 0x17	; 23
     fd2:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x07,0x0233);
     fd6:	63 e3       	ldi	r22, 0x33	; 51
     fd8:	72 e0       	ldi	r23, 0x02	; 2
     fda:	87 e0       	ldi	r24, 0x07	; 7
     fdc:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0B,0x0000);
     fe0:	60 e0       	ldi	r22, 0x00	; 0
     fe2:	70 e0       	ldi	r23, 0x00	; 0
     fe4:	8b e0       	ldi	r24, 0x0B	; 11
     fe6:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0F,0x0000);
     fea:	60 e0       	ldi	r22, 0x00	; 0
     fec:	70 e0       	ldi	r23, 0x00	; 0
     fee:	8f e0       	ldi	r24, 0x0F	; 15
     ff0:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x41,0x0000);
     ff4:	60 e0       	ldi	r22, 0x00	; 0
     ff6:	70 e0       	ldi	r23, 0x00	; 0
     ff8:	81 e4       	ldi	r24, 0x41	; 65
     ffa:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x42,0x0000);
     ffe:	60 e0       	ldi	r22, 0x00	; 0
    1000:	70 e0       	ldi	r23, 0x00	; 0
    1002:	82 e4       	ldi	r24, 0x42	; 66
    1004:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x48,0x0000);
    1008:	60 e0       	ldi	r22, 0x00	; 0
    100a:	70 e0       	ldi	r23, 0x00	; 0
    100c:	88 e4       	ldi	r24, 0x48	; 72
    100e:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x49,0x013F);
    1012:	6f e3       	ldi	r22, 0x3F	; 63
    1014:	71 e0       	ldi	r23, 0x01	; 1
    1016:	89 e4       	ldi	r24, 0x49	; 73
    1018:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4A,0x0000);
    101c:	60 e0       	ldi	r22, 0x00	; 0
    101e:	70 e0       	ldi	r23, 0x00	; 0
    1020:	8a e4       	ldi	r24, 0x4A	; 74
    1022:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4B,0x0000);
    1026:	60 e0       	ldi	r22, 0x00	; 0
    1028:	70 e0       	ldi	r23, 0x00	; 0
    102a:	8b e4       	ldi	r24, 0x4B	; 75
    102c:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x44,0xEF00);
    1030:	60 e0       	ldi	r22, 0x00	; 0
    1032:	7f ee       	ldi	r23, 0xEF	; 239
    1034:	84 e4       	ldi	r24, 0x44	; 68
    1036:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x45,0x0000);
    103a:	60 e0       	ldi	r22, 0x00	; 0
    103c:	70 e0       	ldi	r23, 0x00	; 0
    103e:	85 e4       	ldi	r24, 0x45	; 69
    1040:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x46,0x013F);
    1044:	6f e3       	ldi	r22, 0x3F	; 63
    1046:	71 e0       	ldi	r23, 0x01	; 1
    1048:	86 e4       	ldi	r24, 0x46	; 70
    104a:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x30,0x0707);
    104e:	67 e0       	ldi	r22, 0x07	; 7
    1050:	77 e0       	ldi	r23, 0x07	; 7
    1052:	80 e3       	ldi	r24, 0x30	; 48
    1054:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x31,0x0204);
    1058:	64 e0       	ldi	r22, 0x04	; 4
    105a:	72 e0       	ldi	r23, 0x02	; 2
    105c:	81 e3       	ldi	r24, 0x31	; 49
    105e:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x32,0x0204);
    1062:	64 e0       	ldi	r22, 0x04	; 4
    1064:	72 e0       	ldi	r23, 0x02	; 2
    1066:	82 e3       	ldi	r24, 0x32	; 50
    1068:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x33,0x0502);
    106c:	62 e0       	ldi	r22, 0x02	; 2
    106e:	75 e0       	ldi	r23, 0x05	; 5
    1070:	83 e3       	ldi	r24, 0x33	; 51
    1072:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x34,0x0507);
    1076:	67 e0       	ldi	r22, 0x07	; 7
    1078:	75 e0       	ldi	r23, 0x05	; 5
    107a:	84 e3       	ldi	r24, 0x34	; 52
    107c:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x35,0x0204);
    1080:	64 e0       	ldi	r22, 0x04	; 4
    1082:	72 e0       	ldi	r23, 0x02	; 2
    1084:	85 e3       	ldi	r24, 0x35	; 53
    1086:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x36,0x0204);
    108a:	64 e0       	ldi	r22, 0x04	; 4
    108c:	72 e0       	ldi	r23, 0x02	; 2
    108e:	86 e3       	ldi	r24, 0x36	; 54
    1090:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x37,0x0502);
    1094:	62 e0       	ldi	r22, 0x02	; 2
    1096:	75 e0       	ldi	r23, 0x05	; 5
    1098:	87 e3       	ldi	r24, 0x37	; 55
    109a:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x3A,0x0302);
    109e:	62 e0       	ldi	r22, 0x02	; 2
    10a0:	73 e0       	ldi	r23, 0x03	; 3
    10a2:	8a e3       	ldi	r24, 0x3A	; 58
    10a4:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x3B,0x0302);
    10a8:	62 e0       	ldi	r22, 0x02	; 2
    10aa:	73 e0       	ldi	r23, 0x03	; 3
    10ac:	8b e3       	ldi	r24, 0x3B	; 59
    10ae:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x23,0x0000);
    10b2:	60 e0       	ldi	r22, 0x00	; 0
    10b4:	70 e0       	ldi	r23, 0x00	; 0
    10b6:	83 e2       	ldi	r24, 0x23	; 35
    10b8:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x24,0x0000);
    10bc:	60 e0       	ldi	r22, 0x00	; 0
    10be:	70 e0       	ldi	r23, 0x00	; 0
    10c0:	84 e2       	ldi	r24, 0x24	; 36
    10c2:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x25,0x8000);
    10c6:	60 e0       	ldi	r22, 0x00	; 0
    10c8:	70 e8       	ldi	r23, 0x80	; 128
    10ca:	85 e2       	ldi	r24, 0x25	; 37
    10cc:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4f,0x0000);
    10d0:	60 e0       	ldi	r22, 0x00	; 0
    10d2:	70 e0       	ldi	r23, 0x00	; 0
    10d4:	8f e4       	ldi	r24, 0x4F	; 79
    10d6:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4e,0x0000);
    10da:	60 e0       	ldi	r22, 0x00	; 0
    10dc:	70 e0       	ldi	r23, 0x00	; 0
    10de:	8e e4       	ldi	r24, 0x4E	; 78
    10e0:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM(0x22);
    10e4:	82 e2       	ldi	r24, 0x22	; 34
    10e6:	0e 94 71 06 	call	0xce2	; 0xce2 <LCD_Write_COM>


	sbi(CS_PORT, CS_PIN);
    10ea:	85 b3       	in	r24, 0x15	; 21
    10ec:	81 60       	ori	r24, 0x01	; 1
    10ee:	85 bb       	out	0x15, r24	; 21
    10f0:	08 95       	ret

000010f2 <_ZN4UTFTC1Ev>:
		}
		st[c2+f]=0;
	}

	print(st,x,y);
}
    10f2:	4f ee       	ldi	r20, 0xEF	; 239
    10f4:	50 e0       	ldi	r21, 0x00	; 0
    10f6:	60 e0       	ldi	r22, 0x00	; 0
    10f8:	70 e0       	ldi	r23, 0x00	; 0
    10fa:	fc 01       	movw	r30, r24
    10fc:	45 83       	std	Z+5, r20	; 0x05
    10fe:	56 83       	std	Z+6, r21	; 0x06
    1100:	67 83       	std	Z+7, r22	; 0x07
    1102:	70 87       	std	Z+8, r23	; 0x08
    1104:	4f e3       	ldi	r20, 0x3F	; 63
    1106:	51 e0       	ldi	r21, 0x01	; 1
    1108:	60 e0       	ldi	r22, 0x00	; 0
    110a:	70 e0       	ldi	r23, 0x00	; 0
    110c:	41 87       	std	Z+9, r20	; 0x09
    110e:	52 87       	std	Z+10, r21	; 0x0a
    1110:	63 87       	std	Z+11, r22	; 0x0b
    1112:	74 87       	std	Z+12, r23	; 0x0c
    1114:	0e 94 6c 07 	call	0xed8	; 0xed8 <SSD1289_init>
    1118:	08 95       	ret

0000111a <_ZN4UTFT5setXYEjjjj>:
    111a:	ef 92       	push	r14
    111c:	ff 92       	push	r15
    111e:	0f 93       	push	r16
    1120:	1f 93       	push	r17
    1122:	cf 93       	push	r28
    1124:	df 93       	push	r29
    1126:	eb 01       	movw	r28, r22
    1128:	e4 2e       	mov	r14, r20
    112a:	f5 2e       	mov	r15, r21
    112c:	fc 01       	movw	r30, r24
    112e:	44 81       	ldd	r20, Z+4	; 0x04
    1130:	41 30       	cpi	r20, 0x01	; 1
    1132:	89 f4       	brne	.+34     	; 0x1156 <_ZN4UTFT5setXYEjjjj+0x3c>
    1134:	81 85       	ldd	r24, Z+9	; 0x09
    1136:	92 85       	ldd	r25, Z+10	; 0x0a
    1138:	a3 85       	ldd	r26, Z+11	; 0x0b
    113a:	b4 85       	ldd	r27, Z+12	; 0x0c
    113c:	ac 01       	movw	r20, r24
    113e:	46 1b       	sub	r20, r22
    1140:	57 0b       	sbc	r21, r23
    1142:	82 1b       	sub	r24, r18
    1144:	93 0b       	sbc	r25, r19
    1146:	20 2f       	mov	r18, r16
    1148:	31 2f       	mov	r19, r17
    114a:	04 2f       	mov	r16, r20
    114c:	15 2f       	mov	r17, r21
    114e:	ce 2d       	mov	r28, r14
    1150:	df 2d       	mov	r29, r15
    1152:	e8 2e       	mov	r14, r24
    1154:	f9 2e       	mov	r15, r25
    1156:	32 2f       	mov	r19, r18
    1158:	22 27       	eor	r18, r18
    115a:	be 01       	movw	r22, r28
    115c:	62 0f       	add	r22, r18
    115e:	73 1f       	adc	r23, r19
    1160:	84 e4       	ldi	r24, 0x44	; 68
    1162:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    1166:	6e 2d       	mov	r22, r14
    1168:	7f 2d       	mov	r23, r15
    116a:	85 e4       	ldi	r24, 0x45	; 69
    116c:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    1170:	60 2f       	mov	r22, r16
    1172:	71 2f       	mov	r23, r17
    1174:	86 e4       	ldi	r24, 0x46	; 70
    1176:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    117a:	be 01       	movw	r22, r28
    117c:	8e e4       	ldi	r24, 0x4E	; 78
    117e:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    1182:	6e 2d       	mov	r22, r14
    1184:	7f 2d       	mov	r23, r15
    1186:	8f e4       	ldi	r24, 0x4F	; 79
    1188:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    118c:	82 e2       	ldi	r24, 0x22	; 34
    118e:	0e 94 71 06 	call	0xce2	; 0xce2 <LCD_Write_COM>
    1192:	85 b3       	in	r24, 0x15	; 21
    1194:	80 68       	ori	r24, 0x80	; 128
    1196:	85 bb       	out	0x15, r24	; 21
    1198:	df 91       	pop	r29
    119a:	cf 91       	pop	r28
    119c:	1f 91       	pop	r17
    119e:	0f 91       	pop	r16
    11a0:	ff 90       	pop	r15
    11a2:	ef 90       	pop	r14
    11a4:	08 95       	ret

000011a6 <_ZN4UTFT6clrScrEv>:
    11a6:	85 b3       	in	r24, 0x15	; 21
    11a8:	8e 7f       	andi	r24, 0xFE	; 254
    11aa:	85 bb       	out	0x15, r24	; 21
    11ac:	60 e0       	ldi	r22, 0x00	; 0
    11ae:	7f ee       	ldi	r23, 0xEF	; 239
    11b0:	84 e4       	ldi	r24, 0x44	; 68
    11b2:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    11b6:	60 e0       	ldi	r22, 0x00	; 0
    11b8:	70 e0       	ldi	r23, 0x00	; 0
    11ba:	85 e4       	ldi	r24, 0x45	; 69
    11bc:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    11c0:	6f e3       	ldi	r22, 0x3F	; 63
    11c2:	71 e0       	ldi	r23, 0x01	; 1
    11c4:	86 e4       	ldi	r24, 0x46	; 70
    11c6:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    11ca:	60 e0       	ldi	r22, 0x00	; 0
    11cc:	70 e0       	ldi	r23, 0x00	; 0
    11ce:	8e e4       	ldi	r24, 0x4E	; 78
    11d0:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    11d4:	60 e0       	ldi	r22, 0x00	; 0
    11d6:	70 e0       	ldi	r23, 0x00	; 0
    11d8:	8f e4       	ldi	r24, 0x4F	; 79
    11da:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    11de:	68 e7       	ldi	r22, 0x78	; 120
    11e0:	70 e6       	ldi	r23, 0x60	; 96
    11e2:	81 e1       	ldi	r24, 0x11	; 17
    11e4:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    11e8:	82 e2       	ldi	r24, 0x22	; 34
    11ea:	0e 94 71 06 	call	0xce2	; 0xce2 <LCD_Write_COM>
    11ee:	85 b3       	in	r24, 0x15	; 21
    11f0:	80 68       	ori	r24, 0x80	; 128
    11f2:	85 bb       	out	0x15, r24	; 21
    11f4:	12 ba       	out	0x12, r1	; 18
    11f6:	1b ba       	out	0x1b, r1	; 27
    11f8:	60 e0       	ldi	r22, 0x00	; 0
    11fa:	7c e2       	ldi	r23, 0x2C	; 44
    11fc:	81 e0       	ldi	r24, 0x01	; 1
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	0e 94 28 06 	call	0xc50	; 0xc50 <fastfill>
    1204:	8f ef       	ldi	r24, 0xFF	; 255
    1206:	82 bb       	out	0x12, r24	; 18
    1208:	8b bb       	out	0x1b, r24	; 27
    120a:	85 b3       	in	r24, 0x15	; 21
    120c:	8e 7f       	andi	r24, 0xFE	; 254
    120e:	85 bb       	out	0x15, r24	; 21
    1210:	08 95       	ret

00001212 <_ZN4UTFT8setColorEhhh>:
    1212:	e4 2f       	mov	r30, r20
    1214:	f0 e0       	ldi	r31, 0x00	; 0
    1216:	f5 95       	asr	r31
    1218:	e7 95       	ror	r30
    121a:	f5 95       	asr	r31
    121c:	e7 95       	ror	r30
    121e:	f5 95       	asr	r31
    1220:	e7 95       	ror	r30
    1222:	f5 95       	asr	r31
    1224:	e7 95       	ror	r30
    1226:	f5 95       	asr	r31
    1228:	e7 95       	ror	r30
    122a:	68 7f       	andi	r22, 0xF8	; 248
    122c:	e6 2b       	or	r30, r22
    122e:	dc 01       	movw	r26, r24
    1230:	ec 93       	st	X, r30
    1232:	4c 71       	andi	r20, 0x1C	; 28
    1234:	50 e0       	ldi	r21, 0x00	; 0
    1236:	44 0f       	add	r20, r20
    1238:	55 1f       	adc	r21, r21
    123a:	44 0f       	add	r20, r20
    123c:	55 1f       	adc	r21, r21
    123e:	44 0f       	add	r20, r20
    1240:	55 1f       	adc	r21, r21
    1242:	30 e0       	ldi	r19, 0x00	; 0
    1244:	35 95       	asr	r19
    1246:	27 95       	ror	r18
    1248:	35 95       	asr	r19
    124a:	27 95       	ror	r18
    124c:	35 95       	asr	r19
    124e:	27 95       	ror	r18
    1250:	42 2b       	or	r20, r18
    1252:	11 96       	adiw	r26, 0x01	; 1
    1254:	4c 93       	st	X, r20
    1256:	08 95       	ret

00001258 <_ZN4UTFT12setBackColorEhhh>:
    1258:	e4 2f       	mov	r30, r20
    125a:	f0 e0       	ldi	r31, 0x00	; 0
    125c:	f5 95       	asr	r31
    125e:	e7 95       	ror	r30
    1260:	f5 95       	asr	r31
    1262:	e7 95       	ror	r30
    1264:	f5 95       	asr	r31
    1266:	e7 95       	ror	r30
    1268:	f5 95       	asr	r31
    126a:	e7 95       	ror	r30
    126c:	f5 95       	asr	r31
    126e:	e7 95       	ror	r30
    1270:	68 7f       	andi	r22, 0xF8	; 248
    1272:	e6 2b       	or	r30, r22
    1274:	dc 01       	movw	r26, r24
    1276:	12 96       	adiw	r26, 0x02	; 2
    1278:	ec 93       	st	X, r30
    127a:	12 97       	sbiw	r26, 0x02	; 2
    127c:	4c 71       	andi	r20, 0x1C	; 28
    127e:	50 e0       	ldi	r21, 0x00	; 0
    1280:	44 0f       	add	r20, r20
    1282:	55 1f       	adc	r21, r21
    1284:	44 0f       	add	r20, r20
    1286:	55 1f       	adc	r21, r21
    1288:	44 0f       	add	r20, r20
    128a:	55 1f       	adc	r21, r21
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	35 95       	asr	r19
    1290:	27 95       	ror	r18
    1292:	35 95       	asr	r19
    1294:	27 95       	ror	r18
    1296:	35 95       	asr	r19
    1298:	27 95       	ror	r18
    129a:	42 2b       	or	r20, r18
    129c:	13 96       	adiw	r26, 0x03	; 3
    129e:	4c 93       	st	X, r20
    12a0:	08 95       	ret

000012a2 <_ZN4UTFT7InitLCDEh>:
    12a2:	cf 93       	push	r28
    12a4:	df 93       	push	r29
    12a6:	ec 01       	movw	r28, r24
    12a8:	6c 83       	std	Y+4, r22	; 0x04
    12aa:	2f ef       	ldi	r18, 0xFF	; 255
    12ac:	4f ef       	ldi	r20, 0xFF	; 255
    12ae:	6f ef       	ldi	r22, 0xFF	; 255
    12b0:	0e 94 09 09 	call	0x1212	; 0x1212 <_ZN4UTFT8setColorEhhh>
    12b4:	20 e0       	ldi	r18, 0x00	; 0
    12b6:	40 e0       	ldi	r20, 0x00	; 0
    12b8:	60 e0       	ldi	r22, 0x00	; 0
    12ba:	ce 01       	movw	r24, r28
    12bc:	0e 94 2c 09 	call	0x1258	; 0x1258 <_ZN4UTFT12setBackColorEhhh>
    12c0:	1e 86       	std	Y+14, r1	; 0x0e
    12c2:	1d 86       	std	Y+13, r1	; 0x0d
    12c4:	df 91       	pop	r29
    12c6:	cf 91       	pop	r28
    12c8:	08 95       	ret

000012ca <_ZN4UTFT8setPixelEj>:
    12ca:	87 2f       	mov	r24, r23
    12cc:	0e 94 78 06 	call	0xcf0	; 0xcf0 <LCD_Write_DATA>
    12d0:	08 95       	ret

000012d2 <_ZN4UTFT9drawPixelEii>:
    12d2:	0f 93       	push	r16
    12d4:	1f 93       	push	r17
    12d6:	cf 93       	push	r28
    12d8:	df 93       	push	r29
    12da:	ec 01       	movw	r28, r24
    12dc:	85 b3       	in	r24, 0x15	; 21
    12de:	8e 7f       	andi	r24, 0xFE	; 254
    12e0:	85 bb       	out	0x15, r24	; 21
    12e2:	8a 01       	movw	r16, r20
    12e4:	9b 01       	movw	r18, r22
    12e6:	ce 01       	movw	r24, r28
    12e8:	0e 94 8d 08 	call	0x111a	; 0x111a <_ZN4UTFT5setXYEjjjj>
    12ec:	68 81       	ld	r22, Y
    12ee:	70 e0       	ldi	r23, 0x00	; 0
    12f0:	76 2f       	mov	r23, r22
    12f2:	66 27       	eor	r22, r22
    12f4:	89 81       	ldd	r24, Y+1	; 0x01
    12f6:	68 2b       	or	r22, r24
    12f8:	ce 01       	movw	r24, r28
    12fa:	0e 94 65 09 	call	0x12ca	; 0x12ca <_ZN4UTFT8setPixelEj>
    12fe:	85 b3       	in	r24, 0x15	; 21
    1300:	81 60       	ori	r24, 0x01	; 1
    1302:	85 bb       	out	0x15, r24	; 21
    1304:	df 91       	pop	r29
    1306:	cf 91       	pop	r28
    1308:	1f 91       	pop	r17
    130a:	0f 91       	pop	r16
    130c:	08 95       	ret

0000130e <_ZN4UTFT7setFontEPKh>:

void UTFT::setFont(const uint8_t* font)
{
    130e:	dc 01       	movw	r26, r24
	cfont.font=font;
    1310:	1e 96       	adiw	r26, 0x0e	; 14
    1312:	7c 93       	st	X, r23
    1314:	6e 93       	st	-X, r22
    1316:	1d 97       	sbiw	r26, 0x0d	; 13
	cfont.x_size=fontbyte(0);
    1318:	fb 01       	movw	r30, r22
    131a:	84 91       	lpm	r24, Z
    131c:	1f 96       	adiw	r26, 0x0f	; 15
    131e:	8c 93       	st	X, r24
    1320:	1f 97       	sbiw	r26, 0x0f	; 15
	cfont.y_size=fontbyte(1);
    1322:	31 96       	adiw	r30, 0x01	; 1
    1324:	e4 91       	lpm	r30, Z
    1326:	50 96       	adiw	r26, 0x10	; 16
    1328:	ec 93       	st	X, r30
    132a:	50 97       	sbiw	r26, 0x10	; 16
	cfont.offset=fontbyte(2);
    132c:	fb 01       	movw	r30, r22
    132e:	32 96       	adiw	r30, 0x02	; 2
    1330:	e4 91       	lpm	r30, Z
    1332:	51 96       	adiw	r26, 0x11	; 17
    1334:	ec 93       	st	X, r30
    1336:	51 97       	sbiw	r26, 0x11	; 17
	cfont.numchars=fontbyte(3);
    1338:	fb 01       	movw	r30, r22
    133a:	33 96       	adiw	r30, 0x03	; 3
    133c:	64 91       	lpm	r22, Z
    133e:	52 96       	adiw	r26, 0x12	; 18
    1340:	6c 93       	st	X, r22
    1342:	08 95       	ret

00001344 <__subsf3>:
    1344:	50 58       	subi	r21, 0x80	; 128

00001346 <__addsf3>:
    1346:	bb 27       	eor	r27, r27
    1348:	aa 27       	eor	r26, r26
    134a:	0e 94 ba 09 	call	0x1374	; 0x1374 <__addsf3x>
    134e:	0c 94 34 0b 	jmp	0x1668	; 0x1668 <__fp_round>
    1352:	0e 94 26 0b 	call	0x164c	; 0x164c <__fp_pscA>
    1356:	38 f0       	brcs	.+14     	; 0x1366 <__addsf3+0x20>
    1358:	0e 94 2d 0b 	call	0x165a	; 0x165a <__fp_pscB>
    135c:	20 f0       	brcs	.+8      	; 0x1366 <__addsf3+0x20>
    135e:	39 f4       	brne	.+14     	; 0x136e <__addsf3+0x28>
    1360:	9f 3f       	cpi	r25, 0xFF	; 255
    1362:	19 f4       	brne	.+6      	; 0x136a <__addsf3+0x24>
    1364:	26 f4       	brtc	.+8      	; 0x136e <__addsf3+0x28>
    1366:	0c 94 23 0b 	jmp	0x1646	; 0x1646 <__fp_nan>
    136a:	0e f4       	brtc	.+2      	; 0x136e <__addsf3+0x28>
    136c:	e0 95       	com	r30
    136e:	e7 fb       	bst	r30, 7
    1370:	0c 94 1d 0b 	jmp	0x163a	; 0x163a <__fp_inf>

00001374 <__addsf3x>:
    1374:	e9 2f       	mov	r30, r25
    1376:	0e 94 45 0b 	call	0x168a	; 0x168a <__fp_split3>
    137a:	58 f3       	brcs	.-42     	; 0x1352 <__addsf3+0xc>
    137c:	ba 17       	cp	r27, r26
    137e:	62 07       	cpc	r22, r18
    1380:	73 07       	cpc	r23, r19
    1382:	84 07       	cpc	r24, r20
    1384:	95 07       	cpc	r25, r21
    1386:	20 f0       	brcs	.+8      	; 0x1390 <__addsf3x+0x1c>
    1388:	79 f4       	brne	.+30     	; 0x13a8 <__addsf3x+0x34>
    138a:	a6 f5       	brtc	.+104    	; 0x13f4 <__addsf3x+0x80>
    138c:	0c 94 67 0b 	jmp	0x16ce	; 0x16ce <__fp_zero>
    1390:	0e f4       	brtc	.+2      	; 0x1394 <__addsf3x+0x20>
    1392:	e0 95       	com	r30
    1394:	0b 2e       	mov	r0, r27
    1396:	ba 2f       	mov	r27, r26
    1398:	a0 2d       	mov	r26, r0
    139a:	0b 01       	movw	r0, r22
    139c:	b9 01       	movw	r22, r18
    139e:	90 01       	movw	r18, r0
    13a0:	0c 01       	movw	r0, r24
    13a2:	ca 01       	movw	r24, r20
    13a4:	a0 01       	movw	r20, r0
    13a6:	11 24       	eor	r1, r1
    13a8:	ff 27       	eor	r31, r31
    13aa:	59 1b       	sub	r21, r25
    13ac:	99 f0       	breq	.+38     	; 0x13d4 <__addsf3x+0x60>
    13ae:	59 3f       	cpi	r21, 0xF9	; 249
    13b0:	50 f4       	brcc	.+20     	; 0x13c6 <__addsf3x+0x52>
    13b2:	50 3e       	cpi	r21, 0xE0	; 224
    13b4:	68 f1       	brcs	.+90     	; 0x1410 <__addsf3x+0x9c>
    13b6:	1a 16       	cp	r1, r26
    13b8:	f0 40       	sbci	r31, 0x00	; 0
    13ba:	a2 2f       	mov	r26, r18
    13bc:	23 2f       	mov	r18, r19
    13be:	34 2f       	mov	r19, r20
    13c0:	44 27       	eor	r20, r20
    13c2:	58 5f       	subi	r21, 0xF8	; 248
    13c4:	f3 cf       	rjmp	.-26     	; 0x13ac <__addsf3x+0x38>
    13c6:	46 95       	lsr	r20
    13c8:	37 95       	ror	r19
    13ca:	27 95       	ror	r18
    13cc:	a7 95       	ror	r26
    13ce:	f0 40       	sbci	r31, 0x00	; 0
    13d0:	53 95       	inc	r21
    13d2:	c9 f7       	brne	.-14     	; 0x13c6 <__addsf3x+0x52>
    13d4:	7e f4       	brtc	.+30     	; 0x13f4 <__addsf3x+0x80>
    13d6:	1f 16       	cp	r1, r31
    13d8:	ba 0b       	sbc	r27, r26
    13da:	62 0b       	sbc	r22, r18
    13dc:	73 0b       	sbc	r23, r19
    13de:	84 0b       	sbc	r24, r20
    13e0:	ba f0       	brmi	.+46     	; 0x1410 <__addsf3x+0x9c>
    13e2:	91 50       	subi	r25, 0x01	; 1
    13e4:	a1 f0       	breq	.+40     	; 0x140e <__addsf3x+0x9a>
    13e6:	ff 0f       	add	r31, r31
    13e8:	bb 1f       	adc	r27, r27
    13ea:	66 1f       	adc	r22, r22
    13ec:	77 1f       	adc	r23, r23
    13ee:	88 1f       	adc	r24, r24
    13f0:	c2 f7       	brpl	.-16     	; 0x13e2 <__addsf3x+0x6e>
    13f2:	0e c0       	rjmp	.+28     	; 0x1410 <__addsf3x+0x9c>
    13f4:	ba 0f       	add	r27, r26
    13f6:	62 1f       	adc	r22, r18
    13f8:	73 1f       	adc	r23, r19
    13fa:	84 1f       	adc	r24, r20
    13fc:	48 f4       	brcc	.+18     	; 0x1410 <__addsf3x+0x9c>
    13fe:	87 95       	ror	r24
    1400:	77 95       	ror	r23
    1402:	67 95       	ror	r22
    1404:	b7 95       	ror	r27
    1406:	f7 95       	ror	r31
    1408:	9e 3f       	cpi	r25, 0xFE	; 254
    140a:	08 f0       	brcs	.+2      	; 0x140e <__addsf3x+0x9a>
    140c:	b0 cf       	rjmp	.-160    	; 0x136e <__addsf3+0x28>
    140e:	93 95       	inc	r25
    1410:	88 0f       	add	r24, r24
    1412:	08 f0       	brcs	.+2      	; 0x1416 <__addsf3x+0xa2>
    1414:	99 27       	eor	r25, r25
    1416:	ee 0f       	add	r30, r30
    1418:	97 95       	ror	r25
    141a:	87 95       	ror	r24
    141c:	08 95       	ret

0000141e <__cmpsf2>:
    141e:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <__fp_cmp>
    1422:	08 f4       	brcc	.+2      	; 0x1426 <__cmpsf2+0x8>
    1424:	81 e0       	ldi	r24, 0x01	; 1
    1426:	08 95       	ret

00001428 <__divsf3>:
    1428:	0e 94 28 0a 	call	0x1450	; 0x1450 <__divsf3x>
    142c:	0c 94 34 0b 	jmp	0x1668	; 0x1668 <__fp_round>
    1430:	0e 94 2d 0b 	call	0x165a	; 0x165a <__fp_pscB>
    1434:	58 f0       	brcs	.+22     	; 0x144c <__divsf3+0x24>
    1436:	0e 94 26 0b 	call	0x164c	; 0x164c <__fp_pscA>
    143a:	40 f0       	brcs	.+16     	; 0x144c <__divsf3+0x24>
    143c:	29 f4       	brne	.+10     	; 0x1448 <__divsf3+0x20>
    143e:	5f 3f       	cpi	r21, 0xFF	; 255
    1440:	29 f0       	breq	.+10     	; 0x144c <__divsf3+0x24>
    1442:	0c 94 1d 0b 	jmp	0x163a	; 0x163a <__fp_inf>
    1446:	51 11       	cpse	r21, r1
    1448:	0c 94 68 0b 	jmp	0x16d0	; 0x16d0 <__fp_szero>
    144c:	0c 94 23 0b 	jmp	0x1646	; 0x1646 <__fp_nan>

00001450 <__divsf3x>:
    1450:	0e 94 45 0b 	call	0x168a	; 0x168a <__fp_split3>
    1454:	68 f3       	brcs	.-38     	; 0x1430 <__divsf3+0x8>

00001456 <__divsf3_pse>:
    1456:	99 23       	and	r25, r25
    1458:	b1 f3       	breq	.-20     	; 0x1446 <__divsf3+0x1e>
    145a:	55 23       	and	r21, r21
    145c:	91 f3       	breq	.-28     	; 0x1442 <__divsf3+0x1a>
    145e:	95 1b       	sub	r25, r21
    1460:	55 0b       	sbc	r21, r21
    1462:	bb 27       	eor	r27, r27
    1464:	aa 27       	eor	r26, r26
    1466:	62 17       	cp	r22, r18
    1468:	73 07       	cpc	r23, r19
    146a:	84 07       	cpc	r24, r20
    146c:	38 f0       	brcs	.+14     	; 0x147c <__divsf3_pse+0x26>
    146e:	9f 5f       	subi	r25, 0xFF	; 255
    1470:	5f 4f       	sbci	r21, 0xFF	; 255
    1472:	22 0f       	add	r18, r18
    1474:	33 1f       	adc	r19, r19
    1476:	44 1f       	adc	r20, r20
    1478:	aa 1f       	adc	r26, r26
    147a:	a9 f3       	breq	.-22     	; 0x1466 <__divsf3_pse+0x10>
    147c:	35 d0       	rcall	.+106    	; 0x14e8 <__divsf3_pse+0x92>
    147e:	0e 2e       	mov	r0, r30
    1480:	3a f0       	brmi	.+14     	; 0x1490 <__divsf3_pse+0x3a>
    1482:	e0 e8       	ldi	r30, 0x80	; 128
    1484:	32 d0       	rcall	.+100    	; 0x14ea <__divsf3_pse+0x94>
    1486:	91 50       	subi	r25, 0x01	; 1
    1488:	50 40       	sbci	r21, 0x00	; 0
    148a:	e6 95       	lsr	r30
    148c:	00 1c       	adc	r0, r0
    148e:	ca f7       	brpl	.-14     	; 0x1482 <__divsf3_pse+0x2c>
    1490:	2b d0       	rcall	.+86     	; 0x14e8 <__divsf3_pse+0x92>
    1492:	fe 2f       	mov	r31, r30
    1494:	29 d0       	rcall	.+82     	; 0x14e8 <__divsf3_pse+0x92>
    1496:	66 0f       	add	r22, r22
    1498:	77 1f       	adc	r23, r23
    149a:	88 1f       	adc	r24, r24
    149c:	bb 1f       	adc	r27, r27
    149e:	26 17       	cp	r18, r22
    14a0:	37 07       	cpc	r19, r23
    14a2:	48 07       	cpc	r20, r24
    14a4:	ab 07       	cpc	r26, r27
    14a6:	b0 e8       	ldi	r27, 0x80	; 128
    14a8:	09 f0       	breq	.+2      	; 0x14ac <__divsf3_pse+0x56>
    14aa:	bb 0b       	sbc	r27, r27
    14ac:	80 2d       	mov	r24, r0
    14ae:	bf 01       	movw	r22, r30
    14b0:	ff 27       	eor	r31, r31
    14b2:	93 58       	subi	r25, 0x83	; 131
    14b4:	5f 4f       	sbci	r21, 0xFF	; 255
    14b6:	3a f0       	brmi	.+14     	; 0x14c6 <__divsf3_pse+0x70>
    14b8:	9e 3f       	cpi	r25, 0xFE	; 254
    14ba:	51 05       	cpc	r21, r1
    14bc:	78 f0       	brcs	.+30     	; 0x14dc <__divsf3_pse+0x86>
    14be:	0c 94 1d 0b 	jmp	0x163a	; 0x163a <__fp_inf>
    14c2:	0c 94 68 0b 	jmp	0x16d0	; 0x16d0 <__fp_szero>
    14c6:	5f 3f       	cpi	r21, 0xFF	; 255
    14c8:	e4 f3       	brlt	.-8      	; 0x14c2 <__divsf3_pse+0x6c>
    14ca:	98 3e       	cpi	r25, 0xE8	; 232
    14cc:	d4 f3       	brlt	.-12     	; 0x14c2 <__divsf3_pse+0x6c>
    14ce:	86 95       	lsr	r24
    14d0:	77 95       	ror	r23
    14d2:	67 95       	ror	r22
    14d4:	b7 95       	ror	r27
    14d6:	f7 95       	ror	r31
    14d8:	9f 5f       	subi	r25, 0xFF	; 255
    14da:	c9 f7       	brne	.-14     	; 0x14ce <__divsf3_pse+0x78>
    14dc:	88 0f       	add	r24, r24
    14de:	91 1d       	adc	r25, r1
    14e0:	96 95       	lsr	r25
    14e2:	87 95       	ror	r24
    14e4:	97 f9       	bld	r25, 7
    14e6:	08 95       	ret
    14e8:	e1 e0       	ldi	r30, 0x01	; 1
    14ea:	66 0f       	add	r22, r22
    14ec:	77 1f       	adc	r23, r23
    14ee:	88 1f       	adc	r24, r24
    14f0:	bb 1f       	adc	r27, r27
    14f2:	62 17       	cp	r22, r18
    14f4:	73 07       	cpc	r23, r19
    14f6:	84 07       	cpc	r24, r20
    14f8:	ba 07       	cpc	r27, r26
    14fa:	20 f0       	brcs	.+8      	; 0x1504 <__divsf3_pse+0xae>
    14fc:	62 1b       	sub	r22, r18
    14fe:	73 0b       	sbc	r23, r19
    1500:	84 0b       	sbc	r24, r20
    1502:	ba 0b       	sbc	r27, r26
    1504:	ee 1f       	adc	r30, r30
    1506:	88 f7       	brcc	.-30     	; 0x14ea <__divsf3_pse+0x94>
    1508:	e0 95       	com	r30
    150a:	08 95       	ret

0000150c <__fixsfsi>:
    150c:	0e 94 8d 0a 	call	0x151a	; 0x151a <__fixunssfsi>
    1510:	68 94       	set
    1512:	b1 11       	cpse	r27, r1
    1514:	0c 94 68 0b 	jmp	0x16d0	; 0x16d0 <__fp_szero>
    1518:	08 95       	ret

0000151a <__fixunssfsi>:
    151a:	0e 94 4d 0b 	call	0x169a	; 0x169a <__fp_splitA>
    151e:	88 f0       	brcs	.+34     	; 0x1542 <__fixunssfsi+0x28>
    1520:	9f 57       	subi	r25, 0x7F	; 127
    1522:	98 f0       	brcs	.+38     	; 0x154a <__fixunssfsi+0x30>
    1524:	b9 2f       	mov	r27, r25
    1526:	99 27       	eor	r25, r25
    1528:	b7 51       	subi	r27, 0x17	; 23
    152a:	b0 f0       	brcs	.+44     	; 0x1558 <__fixunssfsi+0x3e>
    152c:	e1 f0       	breq	.+56     	; 0x1566 <__fixunssfsi+0x4c>
    152e:	66 0f       	add	r22, r22
    1530:	77 1f       	adc	r23, r23
    1532:	88 1f       	adc	r24, r24
    1534:	99 1f       	adc	r25, r25
    1536:	1a f0       	brmi	.+6      	; 0x153e <__fixunssfsi+0x24>
    1538:	ba 95       	dec	r27
    153a:	c9 f7       	brne	.-14     	; 0x152e <__fixunssfsi+0x14>
    153c:	14 c0       	rjmp	.+40     	; 0x1566 <__fixunssfsi+0x4c>
    153e:	b1 30       	cpi	r27, 0x01	; 1
    1540:	91 f0       	breq	.+36     	; 0x1566 <__fixunssfsi+0x4c>
    1542:	0e 94 67 0b 	call	0x16ce	; 0x16ce <__fp_zero>
    1546:	b1 e0       	ldi	r27, 0x01	; 1
    1548:	08 95       	ret
    154a:	0c 94 67 0b 	jmp	0x16ce	; 0x16ce <__fp_zero>
    154e:	67 2f       	mov	r22, r23
    1550:	78 2f       	mov	r23, r24
    1552:	88 27       	eor	r24, r24
    1554:	b8 5f       	subi	r27, 0xF8	; 248
    1556:	39 f0       	breq	.+14     	; 0x1566 <__fixunssfsi+0x4c>
    1558:	b9 3f       	cpi	r27, 0xF9	; 249
    155a:	cc f3       	brlt	.-14     	; 0x154e <__fixunssfsi+0x34>
    155c:	86 95       	lsr	r24
    155e:	77 95       	ror	r23
    1560:	67 95       	ror	r22
    1562:	b3 95       	inc	r27
    1564:	d9 f7       	brne	.-10     	; 0x155c <__fixunssfsi+0x42>
    1566:	3e f4       	brtc	.+14     	; 0x1576 <__fixunssfsi+0x5c>
    1568:	90 95       	com	r25
    156a:	80 95       	com	r24
    156c:	70 95       	com	r23
    156e:	61 95       	neg	r22
    1570:	7f 4f       	sbci	r23, 0xFF	; 255
    1572:	8f 4f       	sbci	r24, 0xFF	; 255
    1574:	9f 4f       	sbci	r25, 0xFF	; 255
    1576:	08 95       	ret

00001578 <__floatunsisf>:
    1578:	e8 94       	clt
    157a:	09 c0       	rjmp	.+18     	; 0x158e <__floatsisf+0x12>

0000157c <__floatsisf>:
    157c:	97 fb       	bst	r25, 7
    157e:	3e f4       	brtc	.+14     	; 0x158e <__floatsisf+0x12>
    1580:	90 95       	com	r25
    1582:	80 95       	com	r24
    1584:	70 95       	com	r23
    1586:	61 95       	neg	r22
    1588:	7f 4f       	sbci	r23, 0xFF	; 255
    158a:	8f 4f       	sbci	r24, 0xFF	; 255
    158c:	9f 4f       	sbci	r25, 0xFF	; 255
    158e:	99 23       	and	r25, r25
    1590:	a9 f0       	breq	.+42     	; 0x15bc <__floatsisf+0x40>
    1592:	f9 2f       	mov	r31, r25
    1594:	96 e9       	ldi	r25, 0x96	; 150
    1596:	bb 27       	eor	r27, r27
    1598:	93 95       	inc	r25
    159a:	f6 95       	lsr	r31
    159c:	87 95       	ror	r24
    159e:	77 95       	ror	r23
    15a0:	67 95       	ror	r22
    15a2:	b7 95       	ror	r27
    15a4:	f1 11       	cpse	r31, r1
    15a6:	f8 cf       	rjmp	.-16     	; 0x1598 <__floatsisf+0x1c>
    15a8:	fa f4       	brpl	.+62     	; 0x15e8 <__floatsisf+0x6c>
    15aa:	bb 0f       	add	r27, r27
    15ac:	11 f4       	brne	.+4      	; 0x15b2 <__floatsisf+0x36>
    15ae:	60 ff       	sbrs	r22, 0
    15b0:	1b c0       	rjmp	.+54     	; 0x15e8 <__floatsisf+0x6c>
    15b2:	6f 5f       	subi	r22, 0xFF	; 255
    15b4:	7f 4f       	sbci	r23, 0xFF	; 255
    15b6:	8f 4f       	sbci	r24, 0xFF	; 255
    15b8:	9f 4f       	sbci	r25, 0xFF	; 255
    15ba:	16 c0       	rjmp	.+44     	; 0x15e8 <__floatsisf+0x6c>
    15bc:	88 23       	and	r24, r24
    15be:	11 f0       	breq	.+4      	; 0x15c4 <__floatsisf+0x48>
    15c0:	96 e9       	ldi	r25, 0x96	; 150
    15c2:	11 c0       	rjmp	.+34     	; 0x15e6 <__floatsisf+0x6a>
    15c4:	77 23       	and	r23, r23
    15c6:	21 f0       	breq	.+8      	; 0x15d0 <__floatsisf+0x54>
    15c8:	9e e8       	ldi	r25, 0x8E	; 142
    15ca:	87 2f       	mov	r24, r23
    15cc:	76 2f       	mov	r23, r22
    15ce:	05 c0       	rjmp	.+10     	; 0x15da <__floatsisf+0x5e>
    15d0:	66 23       	and	r22, r22
    15d2:	71 f0       	breq	.+28     	; 0x15f0 <__floatsisf+0x74>
    15d4:	96 e8       	ldi	r25, 0x86	; 134
    15d6:	86 2f       	mov	r24, r22
    15d8:	70 e0       	ldi	r23, 0x00	; 0
    15da:	60 e0       	ldi	r22, 0x00	; 0
    15dc:	2a f0       	brmi	.+10     	; 0x15e8 <__floatsisf+0x6c>
    15de:	9a 95       	dec	r25
    15e0:	66 0f       	add	r22, r22
    15e2:	77 1f       	adc	r23, r23
    15e4:	88 1f       	adc	r24, r24
    15e6:	da f7       	brpl	.-10     	; 0x15de <__floatsisf+0x62>
    15e8:	88 0f       	add	r24, r24
    15ea:	96 95       	lsr	r25
    15ec:	87 95       	ror	r24
    15ee:	97 f9       	bld	r25, 7
    15f0:	08 95       	ret

000015f2 <__fp_cmp>:
    15f2:	99 0f       	add	r25, r25
    15f4:	00 08       	sbc	r0, r0
    15f6:	55 0f       	add	r21, r21
    15f8:	aa 0b       	sbc	r26, r26
    15fa:	e0 e8       	ldi	r30, 0x80	; 128
    15fc:	fe ef       	ldi	r31, 0xFE	; 254
    15fe:	16 16       	cp	r1, r22
    1600:	17 06       	cpc	r1, r23
    1602:	e8 07       	cpc	r30, r24
    1604:	f9 07       	cpc	r31, r25
    1606:	c0 f0       	brcs	.+48     	; 0x1638 <__fp_cmp+0x46>
    1608:	12 16       	cp	r1, r18
    160a:	13 06       	cpc	r1, r19
    160c:	e4 07       	cpc	r30, r20
    160e:	f5 07       	cpc	r31, r21
    1610:	98 f0       	brcs	.+38     	; 0x1638 <__fp_cmp+0x46>
    1612:	62 1b       	sub	r22, r18
    1614:	73 0b       	sbc	r23, r19
    1616:	84 0b       	sbc	r24, r20
    1618:	95 0b       	sbc	r25, r21
    161a:	39 f4       	brne	.+14     	; 0x162a <__fp_cmp+0x38>
    161c:	0a 26       	eor	r0, r26
    161e:	61 f0       	breq	.+24     	; 0x1638 <__fp_cmp+0x46>
    1620:	23 2b       	or	r18, r19
    1622:	24 2b       	or	r18, r20
    1624:	25 2b       	or	r18, r21
    1626:	21 f4       	brne	.+8      	; 0x1630 <__fp_cmp+0x3e>
    1628:	08 95       	ret
    162a:	0a 26       	eor	r0, r26
    162c:	09 f4       	brne	.+2      	; 0x1630 <__fp_cmp+0x3e>
    162e:	a1 40       	sbci	r26, 0x01	; 1
    1630:	a6 95       	lsr	r26
    1632:	8f ef       	ldi	r24, 0xFF	; 255
    1634:	81 1d       	adc	r24, r1
    1636:	81 1d       	adc	r24, r1
    1638:	08 95       	ret

0000163a <__fp_inf>:
    163a:	97 f9       	bld	r25, 7
    163c:	9f 67       	ori	r25, 0x7F	; 127
    163e:	80 e8       	ldi	r24, 0x80	; 128
    1640:	70 e0       	ldi	r23, 0x00	; 0
    1642:	60 e0       	ldi	r22, 0x00	; 0
    1644:	08 95       	ret

00001646 <__fp_nan>:
    1646:	9f ef       	ldi	r25, 0xFF	; 255
    1648:	80 ec       	ldi	r24, 0xC0	; 192
    164a:	08 95       	ret

0000164c <__fp_pscA>:
    164c:	00 24       	eor	r0, r0
    164e:	0a 94       	dec	r0
    1650:	16 16       	cp	r1, r22
    1652:	17 06       	cpc	r1, r23
    1654:	18 06       	cpc	r1, r24
    1656:	09 06       	cpc	r0, r25
    1658:	08 95       	ret

0000165a <__fp_pscB>:
    165a:	00 24       	eor	r0, r0
    165c:	0a 94       	dec	r0
    165e:	12 16       	cp	r1, r18
    1660:	13 06       	cpc	r1, r19
    1662:	14 06       	cpc	r1, r20
    1664:	05 06       	cpc	r0, r21
    1666:	08 95       	ret

00001668 <__fp_round>:
    1668:	09 2e       	mov	r0, r25
    166a:	03 94       	inc	r0
    166c:	00 0c       	add	r0, r0
    166e:	11 f4       	brne	.+4      	; 0x1674 <__fp_round+0xc>
    1670:	88 23       	and	r24, r24
    1672:	52 f0       	brmi	.+20     	; 0x1688 <__fp_round+0x20>
    1674:	bb 0f       	add	r27, r27
    1676:	40 f4       	brcc	.+16     	; 0x1688 <__fp_round+0x20>
    1678:	bf 2b       	or	r27, r31
    167a:	11 f4       	brne	.+4      	; 0x1680 <__fp_round+0x18>
    167c:	60 ff       	sbrs	r22, 0
    167e:	04 c0       	rjmp	.+8      	; 0x1688 <__fp_round+0x20>
    1680:	6f 5f       	subi	r22, 0xFF	; 255
    1682:	7f 4f       	sbci	r23, 0xFF	; 255
    1684:	8f 4f       	sbci	r24, 0xFF	; 255
    1686:	9f 4f       	sbci	r25, 0xFF	; 255
    1688:	08 95       	ret

0000168a <__fp_split3>:
    168a:	57 fd       	sbrc	r21, 7
    168c:	90 58       	subi	r25, 0x80	; 128
    168e:	44 0f       	add	r20, r20
    1690:	55 1f       	adc	r21, r21
    1692:	59 f0       	breq	.+22     	; 0x16aa <__fp_splitA+0x10>
    1694:	5f 3f       	cpi	r21, 0xFF	; 255
    1696:	71 f0       	breq	.+28     	; 0x16b4 <__fp_splitA+0x1a>
    1698:	47 95       	ror	r20

0000169a <__fp_splitA>:
    169a:	88 0f       	add	r24, r24
    169c:	97 fb       	bst	r25, 7
    169e:	99 1f       	adc	r25, r25
    16a0:	61 f0       	breq	.+24     	; 0x16ba <__fp_splitA+0x20>
    16a2:	9f 3f       	cpi	r25, 0xFF	; 255
    16a4:	79 f0       	breq	.+30     	; 0x16c4 <__fp_splitA+0x2a>
    16a6:	87 95       	ror	r24
    16a8:	08 95       	ret
    16aa:	12 16       	cp	r1, r18
    16ac:	13 06       	cpc	r1, r19
    16ae:	14 06       	cpc	r1, r20
    16b0:	55 1f       	adc	r21, r21
    16b2:	f2 cf       	rjmp	.-28     	; 0x1698 <__fp_split3+0xe>
    16b4:	46 95       	lsr	r20
    16b6:	f1 df       	rcall	.-30     	; 0x169a <__fp_splitA>
    16b8:	08 c0       	rjmp	.+16     	; 0x16ca <__fp_splitA+0x30>
    16ba:	16 16       	cp	r1, r22
    16bc:	17 06       	cpc	r1, r23
    16be:	18 06       	cpc	r1, r24
    16c0:	99 1f       	adc	r25, r25
    16c2:	f1 cf       	rjmp	.-30     	; 0x16a6 <__fp_splitA+0xc>
    16c4:	86 95       	lsr	r24
    16c6:	71 05       	cpc	r23, r1
    16c8:	61 05       	cpc	r22, r1
    16ca:	08 94       	sec
    16cc:	08 95       	ret

000016ce <__fp_zero>:
    16ce:	e8 94       	clt

000016d0 <__fp_szero>:
    16d0:	bb 27       	eor	r27, r27
    16d2:	66 27       	eor	r22, r22
    16d4:	77 27       	eor	r23, r23
    16d6:	cb 01       	movw	r24, r22
    16d8:	97 f9       	bld	r25, 7
    16da:	08 95       	ret

000016dc <__mulsf3>:
    16dc:	0e 94 81 0b 	call	0x1702	; 0x1702 <__mulsf3x>
    16e0:	0c 94 34 0b 	jmp	0x1668	; 0x1668 <__fp_round>
    16e4:	0e 94 26 0b 	call	0x164c	; 0x164c <__fp_pscA>
    16e8:	38 f0       	brcs	.+14     	; 0x16f8 <__mulsf3+0x1c>
    16ea:	0e 94 2d 0b 	call	0x165a	; 0x165a <__fp_pscB>
    16ee:	20 f0       	brcs	.+8      	; 0x16f8 <__mulsf3+0x1c>
    16f0:	95 23       	and	r25, r21
    16f2:	11 f0       	breq	.+4      	; 0x16f8 <__mulsf3+0x1c>
    16f4:	0c 94 1d 0b 	jmp	0x163a	; 0x163a <__fp_inf>
    16f8:	0c 94 23 0b 	jmp	0x1646	; 0x1646 <__fp_nan>
    16fc:	11 24       	eor	r1, r1
    16fe:	0c 94 68 0b 	jmp	0x16d0	; 0x16d0 <__fp_szero>

00001702 <__mulsf3x>:
    1702:	0e 94 45 0b 	call	0x168a	; 0x168a <__fp_split3>
    1706:	70 f3       	brcs	.-36     	; 0x16e4 <__mulsf3+0x8>

00001708 <__mulsf3_pse>:
    1708:	95 9f       	mul	r25, r21
    170a:	c1 f3       	breq	.-16     	; 0x16fc <__mulsf3+0x20>
    170c:	95 0f       	add	r25, r21
    170e:	50 e0       	ldi	r21, 0x00	; 0
    1710:	55 1f       	adc	r21, r21
    1712:	62 9f       	mul	r22, r18
    1714:	f0 01       	movw	r30, r0
    1716:	72 9f       	mul	r23, r18
    1718:	bb 27       	eor	r27, r27
    171a:	f0 0d       	add	r31, r0
    171c:	b1 1d       	adc	r27, r1
    171e:	63 9f       	mul	r22, r19
    1720:	aa 27       	eor	r26, r26
    1722:	f0 0d       	add	r31, r0
    1724:	b1 1d       	adc	r27, r1
    1726:	aa 1f       	adc	r26, r26
    1728:	64 9f       	mul	r22, r20
    172a:	66 27       	eor	r22, r22
    172c:	b0 0d       	add	r27, r0
    172e:	a1 1d       	adc	r26, r1
    1730:	66 1f       	adc	r22, r22
    1732:	82 9f       	mul	r24, r18
    1734:	22 27       	eor	r18, r18
    1736:	b0 0d       	add	r27, r0
    1738:	a1 1d       	adc	r26, r1
    173a:	62 1f       	adc	r22, r18
    173c:	73 9f       	mul	r23, r19
    173e:	b0 0d       	add	r27, r0
    1740:	a1 1d       	adc	r26, r1
    1742:	62 1f       	adc	r22, r18
    1744:	83 9f       	mul	r24, r19
    1746:	a0 0d       	add	r26, r0
    1748:	61 1d       	adc	r22, r1
    174a:	22 1f       	adc	r18, r18
    174c:	74 9f       	mul	r23, r20
    174e:	33 27       	eor	r19, r19
    1750:	a0 0d       	add	r26, r0
    1752:	61 1d       	adc	r22, r1
    1754:	23 1f       	adc	r18, r19
    1756:	84 9f       	mul	r24, r20
    1758:	60 0d       	add	r22, r0
    175a:	21 1d       	adc	r18, r1
    175c:	82 2f       	mov	r24, r18
    175e:	76 2f       	mov	r23, r22
    1760:	6a 2f       	mov	r22, r26
    1762:	11 24       	eor	r1, r1
    1764:	9f 57       	subi	r25, 0x7F	; 127
    1766:	50 40       	sbci	r21, 0x00	; 0
    1768:	9a f0       	brmi	.+38     	; 0x1790 <__mulsf3_pse+0x88>
    176a:	f1 f0       	breq	.+60     	; 0x17a8 <__mulsf3_pse+0xa0>
    176c:	88 23       	and	r24, r24
    176e:	4a f0       	brmi	.+18     	; 0x1782 <__mulsf3_pse+0x7a>
    1770:	ee 0f       	add	r30, r30
    1772:	ff 1f       	adc	r31, r31
    1774:	bb 1f       	adc	r27, r27
    1776:	66 1f       	adc	r22, r22
    1778:	77 1f       	adc	r23, r23
    177a:	88 1f       	adc	r24, r24
    177c:	91 50       	subi	r25, 0x01	; 1
    177e:	50 40       	sbci	r21, 0x00	; 0
    1780:	a9 f7       	brne	.-22     	; 0x176c <__mulsf3_pse+0x64>
    1782:	9e 3f       	cpi	r25, 0xFE	; 254
    1784:	51 05       	cpc	r21, r1
    1786:	80 f0       	brcs	.+32     	; 0x17a8 <__mulsf3_pse+0xa0>
    1788:	0c 94 1d 0b 	jmp	0x163a	; 0x163a <__fp_inf>
    178c:	0c 94 68 0b 	jmp	0x16d0	; 0x16d0 <__fp_szero>
    1790:	5f 3f       	cpi	r21, 0xFF	; 255
    1792:	e4 f3       	brlt	.-8      	; 0x178c <__mulsf3_pse+0x84>
    1794:	98 3e       	cpi	r25, 0xE8	; 232
    1796:	d4 f3       	brlt	.-12     	; 0x178c <__mulsf3_pse+0x84>
    1798:	86 95       	lsr	r24
    179a:	77 95       	ror	r23
    179c:	67 95       	ror	r22
    179e:	b7 95       	ror	r27
    17a0:	f7 95       	ror	r31
    17a2:	e7 95       	ror	r30
    17a4:	9f 5f       	subi	r25, 0xFF	; 255
    17a6:	c1 f7       	brne	.-16     	; 0x1798 <__mulsf3_pse+0x90>
    17a8:	fe 2b       	or	r31, r30
    17aa:	88 0f       	add	r24, r24
    17ac:	91 1d       	adc	r25, r1
    17ae:	96 95       	lsr	r25
    17b0:	87 95       	ror	r24
    17b2:	97 f9       	bld	r25, 7
    17b4:	08 95       	ret

000017b6 <_exit>:
    17b6:	f8 94       	cli

000017b8 <__stop_program>:
    17b8:	ff cf       	rjmp	.-2      	; 0x17b8 <__stop_program>
