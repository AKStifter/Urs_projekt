
Urs_projekt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000028a8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  000028a8  0000293c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000023  00800064  00800064  00002940  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002940  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002970  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a0  00000000  00000000  000029b0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000062da  00000000  00000000  00002c50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d75  00000000  00000000  00008f2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001da5  00000000  00000000  00009c9f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a08  00000000  00000000  0000ba44  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d69  00000000  00000000  0000c44c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004033  00000000  00000000  0000d1b5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  000111e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__ctors_end>
       4:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
       8:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
       c:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      10:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      14:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      18:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      1c:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      20:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      24:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      28:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      2c:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      30:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      34:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      38:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      3c:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      40:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      44:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      48:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      4c:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      50:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      54:	05 a8       	ldd	r0, Z+53	; 0x35
      56:	4c cd       	rjmp	.-1384   	; 0xfffffaf0 <__eeprom_end+0xff7efaf0>
      58:	b2 d4       	rcall	.+2404   	; 0x9be <__stack+0x55f>
      5a:	4e b9       	out	0x0e, r20	; 14
      5c:	38 36       	cpi	r19, 0x68	; 104
      5e:	a9 02       	muls	r26, r25
      60:	0c 50       	subi	r16, 0x0C	; 12
      62:	b9 91       	ld	r27, Y+
      64:	86 88       	ldd	r8, Z+22	; 0x16
      66:	08 3c       	cpi	r16, 0xC8	; 200
      68:	a6 aa       	std	Z+54, r10	; 0x36
      6a:	aa 2a       	or	r10, r26
      6c:	be 00       	.word	0x00be	; ????
      6e:	00 00       	nop
      70:	80 3f       	cpi	r24, 0xF0	; 240

00000072 <BigFont>:
      72:	10 10 20 5f 00 00 00 00 00 00 00 00 00 00 00 00     .. _............
	...
      9a:	07 00 0f 80 0f 80 0f 80 0f 80 0f 80 07 00 07 00     ................
      aa:	00 00 00 00 07 00 07 00 07 00 00 00 00 00 0e 38     ...............8
      ba:	0e 38 0e 38 0e 38 06 30 00 00 00 00 00 00 00 00     .8.8.8.0........
	...
      d6:	00 00 0c 30 0c 30 0c 30 7f fe 7f fe 0c 30 0c 30     ...0.0.0.....0.0
      e6:	0c 30 0c 30 7f fe 7f fe 0c 30 0c 30 0c 30 00 00     .0.0.....0.0.0..
      f6:	00 00 02 40 02 40 0f f8 1f f8 1a 40 1a 40 1f f0     ...@.@.....@.@..
     106:	0f f8 02 58 02 58 1f f8 1f f0 02 40 02 40 00 00     ...X.X.....@.@..
     116:	00 00 00 00 00 00 0e 10 0e 30 0e 70 00 e0 01 c0     .........0.p....
     126:	03 80 07 00 0e 70 0c 70 08 70 00 00 00 00 00 00     .....p.p.p......
     136:	00 00 00 00 0f 00 19 80 19 80 19 80 0f 00 0f 08     ................
     146:	0f 98 19 f8 18 f0 18 e0 19 f0 0f 98 00 00 00 00     ................
     156:	00 00 00 00 07 00 07 00 07 00 0e 00 00 00 00 00     ................
	...
     17a:	00 f0 01 c0 03 80 07 00 0e 00 0e 00 0e 00 0e 00     ................
     18a:	07 00 03 80 01 c0 00 f0 00 00 00 00 00 00 00 00     ................
     19a:	0f 00 03 80 01 c0 00 e0 00 70 00 70 00 70 00 70     .........p.p.p.p
     1aa:	00 e0 01 c0 03 80 0f 00 00 00 00 00 00 00 00 00     ................
     1ba:	01 80 11 88 09 90 07 e0 07 e0 3f fc 3f fc 07 e0     ..........?.?...
     1ca:	07 e0 09 90 11 88 01 80 00 00 00 00 00 00 00 00     ................
     1da:	00 00 00 00 01 80 01 80 01 80 0f f0 0f f0 01 80     ................
     1ea:	01 80 01 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     20a:	00 00 07 00 07 00 07 00 0e 00 00 00 00 00 00 00     ................
	...
     222:	00 00 1f f8 1f f8 00 00 00 00 00 00 00 00 00 00     ................
	...
     24a:	00 00 07 00 07 00 07 00 00 00 00 00 00 00 00 00     ................
     25a:	00 02 00 06 00 0e 00 1c 00 38 00 70 00 e0 01 c0     .........8.p....
     26a:	03 80 07 00 0e 00 1c 00 00 00 00 00 00 00 00 00     ................
     27a:	0f f0 1c 38 1c 78 1c f8 1c f8 1d b8 1d b8 1f 38     ...8.x.........8
     28a:	1f 38 1e 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     29a:	01 80 01 80 03 80 1f 80 1f 80 03 80 03 80 03 80     ................
     2aa:	03 80 03 80 03 80 1f f0 00 00 00 00 00 00 00 00     ................
     2ba:	0f e0 1c 70 1c 38 00 38 00 70 00 e0 01 c0 03 80     ...p.8.8.p......
     2ca:	07 00 0e 38 1c 38 1f f8 00 00 00 00 00 00 00 00     ...8.8..........
     2da:	0f e0 1c 70 1c 38 00 38 00 70 03 c0 03 c0 00 70     ...p.8.8.p.....p
     2ea:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     2fa:	00 e0 01 e0 03 e0 06 e0 0c e0 18 e0 1f f8 1f f8     ................
     30a:	00 e0 00 e0 00 e0 03 f8 00 00 00 00 00 00 00 00     ................
     31a:	1f f8 1c 00 1c 00 1c 00 1c 00 1f e0 1f f0 00 78     ...............x
     32a:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     33a:	03 e0 07 00 0e 00 1c 00 1c 00 1f f0 1f f8 1c 38     ...............8
     34a:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     35a:	1f fc 1c 1c 1c 1c 1c 1c 00 1c 00 38 00 70 00 e0     ...........8.p..
     36a:	01 c0 03 80 03 80 03 80 00 00 00 00 00 00 00 00     ................
     37a:	0f f0 1c 38 1c 38 1c 38 1f 38 07 e0 07 e0 1c f8     ...8.8.8.8......
     38a:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     39a:	0f f0 1c 38 1c 38 1c 38 1c 38 1f f8 0f f8 00 38     ...8.8.8.8.....8
     3aa:	00 38 00 70 00 e0 07 c0 00 00 00 00 00 00 00 00     .8.p............
     3ba:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3ca:	03 80 03 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     3da:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3ea:	03 80 03 80 07 00 00 00 00 00 00 00 00 00 00 70     ...............p
     3fa:	00 e0 01 c0 03 80 07 00 0e 00 1c 00 1c 00 0e 00     ................
     40a:	07 00 03 80 01 c0 00 e0 00 70 00 00 00 00 00 00     .........p......
     41a:	00 00 00 00 00 00 3f fc 3f fc 00 00 00 00 3f fc     ......?.?.....?.
     42a:	3f fc 00 00 00 00 00 00 00 00 00 00 00 00 1c 00     ?...............
     43a:	0e 00 07 00 03 80 01 c0 00 e0 00 70 00 70 00 e0     ...........p.p..
     44a:	01 c0 03 80 07 00 0e 00 1c 00 00 00 00 00 03 c0     ................
     45a:	0f f0 1e 78 18 38 00 38 00 70 00 e0 01 c0 01 c0     ...x.8.8.p......
     46a:	00 00 00 00 01 c0 01 c0 01 c0 00 00 00 00 0f f8     ................
     47a:	1c 1c 1c 1c 1c 1c 1c 1c 1c fc 1c fc 1c fc 1c fc     ................
     48a:	1c 00 1c 00 1c 00 1f f0 07 f8 00 00 00 00 00 00     ................
     49a:	03 c0 07 e0 0e 70 1c 38 1c 38 1c 38 1c 38 1f f8     .....p.8.8.8.8..
     4aa:	1c 38 1c 38 1c 38 1c 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     4ba:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 38     ...8.8.8.8.....8
     4ca:	0e 38 0e 38 0e 38 1f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     4da:	07 f0 0e 38 1c 38 1c 00 1c 00 1c 00 1c 00 1c 00     ...8.8..........
     4ea:	1c 00 1c 38 0e 38 07 f0 00 00 00 00 00 00 00 00     ...8.8..........
     4fa:	1f e0 0e 70 0e 38 0e 38 0e 38 0e 38 0e 38 0e 38     ...p.8.8.8.8.8.8
     50a:	0e 38 0e 38 0e 70 1f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     51a:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     52a:	0e 00 0e 08 0e 18 1f f8 00 00 00 00 00 00 00 00     ................
     53a:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     54a:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     55a:	07 f0 0e 38 1c 38 1c 38 1c 00 1c 00 1c 00 1c f8     ...8.8.8........
     56a:	1c 38 1c 38 0e 38 07 f8 00 00 00 00 00 00 00 00     .8.8.8..........
     57a:	1c 70 1c 70 1c 70 1c 70 1c 70 1f f0 1f f0 1c 70     .p.p.p.p.p.....p
     58a:	1c 70 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     .p.p.p.p........
     59a:	0f e0 03 80 03 80 03 80 03 80 03 80 03 80 03 80     ................
     5aa:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     5ba:	01 fc 00 70 00 70 00 70 00 70 00 70 00 70 38 70     ...p.p.p.p.p.p8p
     5ca:	38 70 38 70 38 70 0f e0 00 00 00 00 00 00 00 00     8p8p8p..........
     5da:	1e 38 0e 38 0e 70 0e e0 0f c0 0f 80 0f 80 0f c0     .8.8.p..........
     5ea:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     5fa:	1f 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00     ................
     60a:	0e 08 0e 18 0e 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     61a:	1c 1c 1e 3c 1f 7c 1f fc 1f fc 1d dc 1c 9c 1c 1c     ...<.|..........
     62a:	1c 1c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     ................
     63a:	1c 1c 1c 1c 1e 1c 1f 1c 1f 9c 1d dc 1c fc 1c 7c     ...............|
     64a:	1c 3c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     .<..............
     65a:	03 e0 07 f0 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     .....8..........
     66a:	1c 1c 0e 38 07 f0 03 e0 00 00 00 00 00 00 00 00     ...8............
     67a:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 00     ...8.8.8.8......
     68a:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     69a:	03 e0 0f 78 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 7c     ...x.8.........|
     6aa:	1c fc 0f f8 0f f8 00 38 00 fc 00 00 00 00 00 00     .......8........
     6ba:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 70     ...8.8.8.8.....p
     6ca:	0e 38 0e 38 0e 38 1e 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     6da:	0f f0 1c 38 1c 38 1c 38 1c 00 0f e0 07 f0 00 38     ...8.8.8.......8
     6ea:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     6fa:	1f fc 19 cc 11 c4 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     70a:	01 c0 01 c0 01 c0 07 f0 00 00 00 00 00 00 00 00     ................
     71a:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     72a:	1c 70 1c 70 1c 70 0f e0 00 00 00 00 00 00 00 00     .p.p.p..........
     73a:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     74a:	1c 70 0e e0 07 c0 03 80 00 00 00 00 00 00 00 00     .p..............
     75a:	1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 1c 9c     ................
     76a:	0f f8 0f f8 07 70 07 70 00 00 00 00 00 00 00 00     .....p.p........
     77a:	1c 70 1c 70 1c 70 0e e0 07 c0 03 80 03 80 07 c0     .p.p.p..........
     78a:	0e e0 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     ...p.p.p........
     79a:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
     7aa:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     7ba:	1f f8 1c 38 18 38 10 70 00 e0 01 c0 03 80 07 00     ...8.8.p........
     7ca:	0e 08 1c 18 1c 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     7da:	07 f0 07 00 07 00 07 00 07 00 07 00 07 00 07 00     ................
     7ea:	07 00 07 00 07 00 07 f0 00 00 00 00 00 00 00 00     ................
     7fa:	10 00 18 00 1c 00 0e 00 07 00 03 80 01 c0 00 e0     ................
     80a:	00 70 00 38 00 1c 00 07 00 00 00 00 00 00 00 00     .p.8............
     81a:	07 f0 00 70 00 70 00 70 00 70 00 70 00 70 00 70     ...p.p.p.p.p.p.p
     82a:	00 70 00 70 00 70 07 f0 00 00 00 00 00 00 01 80     .p.p.p..........
     83a:	03 c0 07 e0 0e 70 1c 38 00 00 00 00 00 00 00 00     .....p.8........
	...
     872:	7f ff 7f ff 00 00 00 00 1c 00 1c 00 07 00 07 00     ................
	...
     8a2:	0f e0 00 70 00 70 0f f0 1c 70 1c 70 1c 70 0f d8     ...p.p...p.p.p..
	...
     8ba:	1e 00 0e 00 0e 00 0e 00 0f f0 0e 38 0e 38 0e 38     ...........8.8.8
     8ca:	0e 38 0e 38 0e 38 1b f0 00 00 00 00 00 00 00 00     .8.8.8..........
	...
     8e2:	0f e0 1c 70 1c 70 1c 00 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     8fa:	00 f8 00 70 00 70 00 70 0f f0 1c 70 1c 70 1c 70     ...p.p.p...p.p.p
     90a:	1c 70 1c 70 1c 70 0f d8 00 00 00 00 00 00 00 00     .p.p.p..........
	...
     922:	0f e0 1c 70 1c 70 1f f0 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     93a:	03 e0 07 70 07 70 07 00 07 00 1f e0 1f e0 07 00     ...p.p..........
     94a:	07 00 07 00 07 00 1f c0 00 00 00 00 00 00 00 00     ................
	...
     962:	0f d8 1c 70 1c 70 1c 70 1c 70 0f f0 07 f0 00 70     ...p.p.p.p.....p
     972:	1c 70 0f e0 00 00 00 00 1e 00 0e 00 0e 00 0e 00     .p..............
     982:	0e f0 0f 38 0f 38 0e 38 0e 38 0e 38 0e 38 1e 38     ...8.8.8.8.8.8.8
	...
     99a:	01 c0 01 c0 01 c0 00 00 0f c0 01 c0 01 c0 01 c0     ................
     9aa:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
     9ba:	00 70 00 70 00 70 00 00 03 f0 00 70 00 70 00 70     .p.p.p.....p.p.p
     9ca:	00 70 00 70 00 70 1c 70 0c f0 07 e0 00 00 00 00     .p.p.p.p........
     9da:	1e 00 0e 00 0e 00 0e 00 0e 38 0e 70 0e e0 0f c0     .........8.p....
     9ea:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     9fa:	0f c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     a0a:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
	...
     a22:	1f f8 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c     ................
	...
     a42:	1f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     ...p.p.p.p.p.p.p
	...
     a62:	0f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f e0     ...p.p.p.p.p.p..
	...
     a82:	1b f0 0e 38 0e 38 0e 38 0e 38 0e 38 0f f0 0e 00     ...8.8.8.8.8....
     a92:	0e 00 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     aa2:	1f b0 38 e0 38 e0 38 e0 38 e0 38 e0 1f e0 00 e0     ..8.8.8.8.8.....
     ab2:	00 e0 01 f0 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ac2:	1e f0 0f f8 0f 38 0e 00 0e 00 0e 00 0e 00 1f 00     .....8..........
	...
     ae2:	0f e0 1c 30 1c 30 0f 80 03 e0 18 70 18 70 0f e0     ...0.0.....p.p..
	...
     afa:	00 00 01 00 03 00 07 00 1f f0 07 00 07 00 07 00     ................
     b0a:	07 00 07 70 07 70 03 e0 00 00 00 00 00 00 00 00     ...p.p..........
	...
     b22:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f d8     .p.p.p.p.p.p.p..
	...
     b42:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
	...
     b62:	1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 0f f8 07 70 07 70     .............p.p
	...
     b82:	1c e0 1c e0 0f c0 07 80 07 80 0f c0 1c e0 1c e0     ................
	...
     ba2:	0e 38 0e 38 0e 38 0e 38 0e 38 07 f0 03 e0 00 e0     .8.8.8.8.8......
     bb2:	01 c0 1f 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     bc2:	1f e0 18 e0 11 c0 03 80 07 00 0e 20 1c 60 1f e0     ........... .`..
	...
     bda:	01 f8 03 80 03 80 03 80 07 00 1c 00 1c 00 07 00     ................
     bea:	03 80 03 80 03 80 01 f8 00 00 00 00 00 00 01 c0     ................
     bfa:	01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     c0a:	01 c0 01 c0 01 c0 01 c0 01 c0 00 00 00 00 00 00     ................
     c1a:	1f 80 01 c0 01 c0 01 c0 00 e0 00 38 00 38 00 e0     ...........8.8..
     c2a:	01 c0 01 c0 01 c0 1f 80 00 00 00 00 00 00 00 00     ................
     c3a:	1f 1c 3b 9c 39 dc 38 f8 00 00 00 00 00 00 00 00     ..;.9.8.........
	...

00000c56 <__ctors_start>:
     c56:	cb 09       	sbc	r28, r11

00000c58 <__ctors_end>:
     c58:	11 24       	eor	r1, r1
     c5a:	1f be       	out	0x3f, r1	; 63
     c5c:	cf e5       	ldi	r28, 0x5F	; 95
     c5e:	d4 e0       	ldi	r29, 0x04	; 4
     c60:	de bf       	out	0x3e, r29	; 62
     c62:	cd bf       	out	0x3d, r28	; 61

00000c64 <__do_clear_bss>:
     c64:	20 e0       	ldi	r18, 0x00	; 0
     c66:	a4 e6       	ldi	r26, 0x64	; 100
     c68:	b0 e0       	ldi	r27, 0x00	; 0
     c6a:	01 c0       	rjmp	.+2      	; 0xc6e <.do_clear_bss_start>

00000c6c <.do_clear_bss_loop>:
     c6c:	1d 92       	st	X+, r1

00000c6e <.do_clear_bss_start>:
     c6e:	a7 38       	cpi	r26, 0x87	; 135
     c70:	b2 07       	cpc	r27, r18
     c72:	e1 f7       	brne	.-8      	; 0xc6c <.do_clear_bss_loop>

00000c74 <__do_copy_data>:
     c74:	10 e0       	ldi	r17, 0x00	; 0
     c76:	a0 e6       	ldi	r26, 0x60	; 96
     c78:	b0 e0       	ldi	r27, 0x00	; 0
     c7a:	e8 ea       	ldi	r30, 0xA8	; 168
     c7c:	f8 e2       	ldi	r31, 0x28	; 40
     c7e:	02 c0       	rjmp	.+4      	; 0xc84 <__do_copy_data+0x10>
     c80:	05 90       	lpm	r0, Z+
     c82:	0d 92       	st	X+, r0
     c84:	a4 36       	cpi	r26, 0x64	; 100
     c86:	b1 07       	cpc	r27, r17
     c88:	d9 f7       	brne	.-10     	; 0xc80 <__do_copy_data+0xc>

00000c8a <__do_global_ctors>:
     c8a:	16 e0       	ldi	r17, 0x06	; 6
     c8c:	cc e2       	ldi	r28, 0x2C	; 44
     c8e:	d6 e0       	ldi	r29, 0x06	; 6
     c90:	04 c0       	rjmp	.+8      	; 0xc9a <__do_global_ctors+0x10>
     c92:	21 97       	sbiw	r28, 0x01	; 1
     c94:	fe 01       	movw	r30, r28
     c96:	0e 94 e1 13 	call	0x27c2	; 0x27c2 <__tablejump2__>
     c9a:	cb 32       	cpi	r28, 0x2B	; 43
     c9c:	d1 07       	cpc	r29, r17
     c9e:	c9 f7       	brne	.-14     	; 0xc92 <__do_global_ctors+0x8>
     ca0:	0e 94 b2 09 	call	0x1364	; 0x1364 <main>
     ca4:	0c 94 52 14 	jmp	0x28a4	; 0x28a4 <_exit>

00000ca8 <__bad_interrupt>:
     ca8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000cac <fastbitmap_1bit>:
		r20:r21 fg color 
		r18:r19 bg color
	*/

	/* this block sets up the TOGGLE_WR_FAST registers r30:r31 */
	in r26, _SFR_IO_ADDR(WR_PORT)
     cac:	a5 b3       	in	r26, 0x15	; 21
	mov r27, r26
     cae:	ba 2f       	mov	r27, r26
	set
     cb0:	68 94       	set
	bld r26,WR_PIN
     cb2:	a6 f9       	bld	r26, 6
	clt
     cb4:	e8 94       	clt
	bld r27,WR_PIN
     cb6:	b6 f9       	bld	r27, 6
	
	movw r30, r22
     cb8:	fb 01       	movw	r30, r22

00000cba <FB1BIT_LOOP>:

FB1BIT_LOOP:

	LPM r0, Z+
     cba:	05 90       	lpm	r0, Z+

	PLOT_MONO_PIXEL r0,7
     cbc:	07 fa       	bst	r0, 7
     cbe:	1e f4       	brtc	.+6      	; 0xcc6 <FB1BIT_LOOP+0xc>
     cc0:	42 bb       	out	0x12, r20	; 18
     cc2:	5b bb       	out	0x1b, r21	; 27
     cc4:	02 c0       	rjmp	.+4      	; 0xcca <FB1BIT_LOOP+0x10>
     cc6:	22 bb       	out	0x12, r18	; 18
     cc8:	3b bb       	out	0x1b, r19	; 27
     cca:	b5 bb       	out	0x15, r27	; 21
     ccc:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,6
     cce:	06 fa       	bst	r0, 6
     cd0:	1e f4       	brtc	.+6      	; 0xcd8 <FB1BIT_LOOP+0x1e>
     cd2:	42 bb       	out	0x12, r20	; 18
     cd4:	5b bb       	out	0x1b, r21	; 27
     cd6:	02 c0       	rjmp	.+4      	; 0xcdc <FB1BIT_LOOP+0x22>
     cd8:	22 bb       	out	0x12, r18	; 18
     cda:	3b bb       	out	0x1b, r19	; 27
     cdc:	b5 bb       	out	0x15, r27	; 21
     cde:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,5
     ce0:	05 fa       	bst	r0, 5
     ce2:	1e f4       	brtc	.+6      	; 0xcea <FB1BIT_LOOP+0x30>
     ce4:	42 bb       	out	0x12, r20	; 18
     ce6:	5b bb       	out	0x1b, r21	; 27
     ce8:	02 c0       	rjmp	.+4      	; 0xcee <FB1BIT_LOOP+0x34>
     cea:	22 bb       	out	0x12, r18	; 18
     cec:	3b bb       	out	0x1b, r19	; 27
     cee:	b5 bb       	out	0x15, r27	; 21
     cf0:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,4
     cf2:	04 fa       	bst	r0, 4
     cf4:	1e f4       	brtc	.+6      	; 0xcfc <FB1BIT_LOOP+0x42>
     cf6:	42 bb       	out	0x12, r20	; 18
     cf8:	5b bb       	out	0x1b, r21	; 27
     cfa:	02 c0       	rjmp	.+4      	; 0xd00 <FB1BIT_LOOP+0x46>
     cfc:	22 bb       	out	0x12, r18	; 18
     cfe:	3b bb       	out	0x1b, r19	; 27
     d00:	b5 bb       	out	0x15, r27	; 21
     d02:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,3
     d04:	03 fa       	bst	r0, 3
     d06:	1e f4       	brtc	.+6      	; 0xd0e <FB1BIT_LOOP+0x54>
     d08:	42 bb       	out	0x12, r20	; 18
     d0a:	5b bb       	out	0x1b, r21	; 27
     d0c:	02 c0       	rjmp	.+4      	; 0xd12 <FB1BIT_LOOP+0x58>
     d0e:	22 bb       	out	0x12, r18	; 18
     d10:	3b bb       	out	0x1b, r19	; 27
     d12:	b5 bb       	out	0x15, r27	; 21
     d14:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,2
     d16:	02 fa       	bst	r0, 2
     d18:	1e f4       	brtc	.+6      	; 0xd20 <FB1BIT_LOOP+0x66>
     d1a:	42 bb       	out	0x12, r20	; 18
     d1c:	5b bb       	out	0x1b, r21	; 27
     d1e:	02 c0       	rjmp	.+4      	; 0xd24 <FB1BIT_LOOP+0x6a>
     d20:	22 bb       	out	0x12, r18	; 18
     d22:	3b bb       	out	0x1b, r19	; 27
     d24:	b5 bb       	out	0x15, r27	; 21
     d26:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,1
     d28:	01 fa       	bst	r0, 1
     d2a:	1e f4       	brtc	.+6      	; 0xd32 <FB1BIT_LOOP+0x78>
     d2c:	42 bb       	out	0x12, r20	; 18
     d2e:	5b bb       	out	0x1b, r21	; 27
     d30:	02 c0       	rjmp	.+4      	; 0xd36 <FB1BIT_LOOP+0x7c>
     d32:	22 bb       	out	0x12, r18	; 18
     d34:	3b bb       	out	0x1b, r19	; 27
     d36:	b5 bb       	out	0x15, r27	; 21
     d38:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,0
     d3a:	00 fa       	bst	r0, 0
     d3c:	1e f4       	brtc	.+6      	; 0xd44 <FB1BIT_LOOP+0x8a>
     d3e:	42 bb       	out	0x12, r20	; 18
     d40:	5b bb       	out	0x1b, r21	; 27
     d42:	02 c0       	rjmp	.+4      	; 0xd48 <FB1BIT_LOOP+0x8e>
     d44:	22 bb       	out	0x12, r18	; 18
     d46:	3b bb       	out	0x1b, r19	; 27
     d48:	b5 bb       	out	0x15, r27	; 21
     d4a:	a5 bb       	out	0x15, r26	; 21

	SUB16 r24,r25,1
     d4c:	81 50       	subi	r24, 0x01	; 1
     d4e:	90 40       	sbci	r25, 0x00	; 0

	cpi r24,0
     d50:	80 30       	cpi	r24, 0x00	; 0
	cpc r25,r1
     d52:	91 05       	cpc	r25, r1
	breq FB1BIT_DONE
     d54:	11 f0       	breq	.+4      	; 0xd5a <FB1BIT_DONE>
	jmp FB1BIT_LOOP
     d56:	0c 94 5d 06 	jmp	0xcba	; 0xcba <FB1BIT_LOOP>

00000d5a <FB1BIT_DONE>:


FB1BIT_DONE:

	ret;
     d5a:	08 95       	ret

00000d5c <fastbitmap_16bit>:
		r24:r25 lenght in pixels/words
		r22:r23 pointer to data
	*/

	/* this block sets up the TOGGLE_WR_FAST registers r30:r31 */
	in r26, _SFR_IO_ADDR(WR_PORT)
     d5c:	a5 b3       	in	r26, 0x15	; 21
	mov r27, r26
     d5e:	ba 2f       	mov	r27, r26
	set
     d60:	68 94       	set
	bld r26,WR_PIN
     d62:	a6 f9       	bld	r26, 6
	clt
     d64:	e8 94       	clt
	bld r27,WR_PIN
     d66:	b6 f9       	bld	r27, 6
	
	movw r30, r22
     d68:	fb 01       	movw	r30, r22

00000d6a <FB16BIT_LOOP>:

FB16BIT_LOOP:

	
	LPM r0, Z+	
     d6a:	05 90       	lpm	r0, Z+
	out DPHIO, r0	
     d6c:	0b ba       	out	0x1b, r0	; 27
	LPM r0, Z+	
     d6e:	05 90       	lpm	r0, Z+
	out DPLIO, r0
     d70:	02 ba       	out	0x12, r0	; 18

	TOGGLE_WR_FAST r27,r26	// place a pixel!
     d72:	b5 bb       	out	0x15, r27	; 21
     d74:	a5 bb       	out	0x15, r26	; 21

	SUB16 r24,r25,1
     d76:	81 50       	subi	r24, 0x01	; 1
     d78:	90 40       	sbci	r25, 0x00	; 0

	cpi r24,0
     d7a:	80 30       	cpi	r24, 0x00	; 0
	cpc r25,r1
     d7c:	91 05       	cpc	r25, r1
	breq FB16BIT_DONE
     d7e:	11 f0       	breq	.+4      	; 0xd84 <FB16BIT_DONE>
	jmp FB16BIT_LOOP
     d80:	0c 94 b5 06 	jmp	0xd6a	; 0xd6a <FB16BIT_LOOP>

00000d84 <FB16BIT_DONE>:


FB16BIT_DONE:

	ret;
     d84:	08 95       	ret

00000d86 <fastbitmap_pb565>:
		r24:r25 data
		
	*/

	/* this block sets up the TOGGLE_WR_FAST registers r30:r31 */
	in r26, _SFR_IO_ADDR(WR_PORT)
     d86:	a5 b3       	in	r26, 0x15	; 21
	mov r27, r26
     d88:	ba 2f       	mov	r27, r26
	set
     d8a:	68 94       	set
	bld r26,WR_PIN
     d8c:	a6 f9       	bld	r26, 6
	clt
     d8e:	e8 94       	clt
	bld r27,WR_PIN
     d90:	b6 f9       	bld	r27, 6
	
	movw r30, r24
     d92:	fc 01       	movw	r30, r24

	clr r1
     d94:	11 24       	eor	r1, r1

00000d96 <PB565BIT_LOOP>:

PB565BIT_LOOP:
	
	LPM r18, Z+	
     d96:	25 91       	lpm	r18, Z+
	cpi r18,0
     d98:	20 30       	cpi	r18, 0x00	; 0
	breq PB565BIT_DONE
     d9a:	a9 f0       	breq	.+42     	; 0xdc6 <PB565BIT_DONE>
	
	bst r18,7
     d9c:	27 fb       	bst	r18, 7
	brtc PB565PLAIN
     d9e:	56 f4       	brtc	.+20     	; 0xdb4 <PB565PLAIN>
	
	// compressed loop.
	andi r18,0x7F
     da0:	2f 77       	andi	r18, 0x7F	; 127
	LPM r0, Z+
     da2:	05 90       	lpm	r0, Z+
	out DPHIO, r0
     da4:	0b ba       	out	0x1b, r0	; 27
	LPM r0, Z+
     da6:	05 90       	lpm	r0, Z+
	out DPLIO, r0
     da8:	02 ba       	out	0x12, r0	; 18

00000daa <PB565COMPRESSED>:
	

PB565COMPRESSED:
	TOGGLE_WR_FAST r27,r26
     daa:	b5 bb       	out	0x15, r27	; 21
     dac:	a5 bb       	out	0x15, r26	; 21
	dec r18
     dae:	2a 95       	dec	r18
	brne PB565COMPRESSED
     db0:	e1 f7       	brne	.-8      	; 0xdaa <PB565COMPRESSED>
	rjmp PB565BIT_LOOP
     db2:	f1 cf       	rjmp	.-30     	; 0xd96 <PB565BIT_LOOP>

00000db4 <PB565PLAIN>:


PB565PLAIN:

	LPM r0, Z+
     db4:	05 90       	lpm	r0, Z+
	out DPHIO, r0
     db6:	0b ba       	out	0x1b, r0	; 27
	LPM r0, Z+
     db8:	05 90       	lpm	r0, Z+
	out DPLIO, r0
     dba:	02 ba       	out	0x12, r0	; 18
	TOGGLE_WR_FAST r27,r26
     dbc:	b5 bb       	out	0x15, r27	; 21
     dbe:	a5 bb       	out	0x15, r26	; 21
	dec r18
     dc0:	2a 95       	dec	r18
	brne PB565PLAIN
     dc2:	c1 f7       	brne	.-16     	; 0xdb4 <PB565PLAIN>
	rjmp PB565BIT_LOOP
     dc4:	e8 cf       	rjmp	.-48     	; 0xd96 <PB565BIT_LOOP>

00000dc6 <PB565BIT_DONE>:




PB565BIT_DONE:
	clr r0
     dc6:	00 24       	eor	r0, r0
     dc8:	08 95       	ret

00000dca <fastfill>:
// r22-r25 unsigned 32 bit number of pixels to set.
// note that only 17 bits of this are used, so max pixels
// is 131071, which is fine since we only have 320 * 240 pixels or 76800 loops
fastfill:

	clr r18
     dca:	22 27       	eor	r18, r18

	// devide by 2
	// no need for register 25 it has no bits we care about.
	lsr r24
     dcc:	86 95       	lsr	r24
	ror r23
     dce:	77 95       	ror	r23
	ror r22
     dd0:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
     dd2:	27 95       	ror	r18

	// devide by 4
	// no need for register 24, it had a max of 1 bit we care about.
	lsr r23
     dd4:	76 95       	lsr	r23
	ror r22
     dd6:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
     dd8:	27 95       	ror	r18

	// devide by 8
	//lsr r24
	lsr r23
     dda:	76 95       	lsr	r23
	ror r22
     ddc:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
     dde:	27 95       	ror	r18

	// devide by 16		
	// lsr r24
	lsr r23
     de0:	76 95       	lsr	r23
	ror r22
     de2:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
     de4:	27 95       	ror	r18

	// finish rolling a full 8 bits aka swap nibbles
	swap r18
     de6:	22 95       	swap	r18

	movw r24, r22
     de8:	cb 01       	movw	r24, r22

00000dea <fastfill2>:
// r24 + r25 hold 16 bit unsigned number of 16xloops.
// r18 holds 8 bit unsigned numner of single loops
fastfill2:

	// prepare the out port registers
	in r30, _SFR_IO_ADDR(WR_PORT)
     dea:	e5 b3       	in	r30, 0x15	; 21
	mov r31, r30
     dec:	fe 2f       	mov	r31, r30
	set
     dee:	68 94       	set
	bld r30,WR_PIN
     df0:	e6 f9       	bld	r30, 6
	clt
     df2:	e8 94       	clt
	bld r31,WR_PIN
     df4:	f6 f9       	bld	r31, 6

	sbiw r24,0 // subtract zero and test if zero	
     df6:	00 97       	sbiw	r24, 0x00	; 0
	breq exitloop16
     df8:	11 f1       	breq	.+68     	; 0xe3e <exitloop16>

00000dfa <loop16>:
loop16:
		
	TOGGLE_WR_FAST r31,r30
     dfa:	f5 bb       	out	0x15, r31	; 21
     dfc:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     dfe:	f5 bb       	out	0x15, r31	; 21
     e00:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e02:	f5 bb       	out	0x15, r31	; 21
     e04:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e06:	f5 bb       	out	0x15, r31	; 21
     e08:	e5 bb       	out	0x15, r30	; 21
		
	TOGGLE_WR_FAST r31,r30
     e0a:	f5 bb       	out	0x15, r31	; 21
     e0c:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e0e:	f5 bb       	out	0x15, r31	; 21
     e10:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e12:	f5 bb       	out	0x15, r31	; 21
     e14:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e16:	f5 bb       	out	0x15, r31	; 21
     e18:	e5 bb       	out	0x15, r30	; 21
		
	TOGGLE_WR_FAST r31,r30
     e1a:	f5 bb       	out	0x15, r31	; 21
     e1c:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e1e:	f5 bb       	out	0x15, r31	; 21
     e20:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e22:	f5 bb       	out	0x15, r31	; 21
     e24:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e26:	f5 bb       	out	0x15, r31	; 21
     e28:	e5 bb       	out	0x15, r30	; 21
		
	TOGGLE_WR_FAST r31,r30
     e2a:	f5 bb       	out	0x15, r31	; 21
     e2c:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e2e:	f5 bb       	out	0x15, r31	; 21
     e30:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e32:	f5 bb       	out	0x15, r31	; 21
     e34:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e36:	f5 bb       	out	0x15, r31	; 21
     e38:	e5 bb       	out	0x15, r30	; 21

	sbiw r24,1	
     e3a:	01 97       	sbiw	r24, 0x01	; 1
	brne loop16
     e3c:	f1 f6       	brne	.-68     	; 0xdfa <loop16>

00000e3e <exitloop16>:

exitloop16:

	cpi r18,0
     e3e:	20 30       	cpi	r18, 0x00	; 0
	breq exitsingleloop
     e40:	21 f0       	breq	.+8      	; 0xe4a <exitsingleloop>

00000e42 <singleloop>:
singleloop:			
	TOGGLE_WR_FAST r31,r30
     e42:	f5 bb       	out	0x15, r31	; 21
     e44:	e5 bb       	out	0x15, r30	; 21
	dec r18
     e46:	2a 95       	dec	r18
	brne singleloop
     e48:	e1 f7       	brne	.-8      	; 0xe42 <singleloop>

00000e4a <exitsingleloop>:

exitsingleloop:
	ret 
     e4a:	08 95       	ret

00000e4c <fastfill3>:

// r22-r25 unsigned 32 bit number of pixels to set.
// note that only 17 bits of this are used, so max pixels
// is 131071, which is fine since we only have 320 * 240 pixels or 76800 loops
fastfill3:
	TOGGLE_WR
     e4c:	ae 98       	cbi	0x15, 6	; 21
     e4e:	ae 9a       	sbi	0x15, 6	; 21
	SUB32 r22,r23,r24,r25,1
     e50:	61 50       	subi	r22, 0x01	; 1
     e52:	70 40       	sbci	r23, 0x00	; 0
     e54:	80 40       	sbci	r24, 0x00	; 0
     e56:	90 40       	sbci	r25, 0x00	; 0
	brne fastfill3
     e58:	c9 f7       	brne	.-14     	; 0xe4c <fastfill3>

     e5a:	08 95       	ret

00000e5c <LCD_Write_COM>:
#include "as_macros.h"


.global LCD_Write_COM
LCD_Write_COM:
	BUS_START_REG
     e5c:	af 98       	cbi	0x15, 7	; 21
	clr r1
     e5e:	11 24       	eor	r1, r1
	out DPLIO, r24
     e60:	82 bb       	out	0x12, r24	; 18
	out DPHIO, r1
     e62:	1b ba       	out	0x1b, r1	; 27
	TOGGLE_WR
     e64:	ae 98       	cbi	0x15, 6	; 21
     e66:	ae 9a       	sbi	0x15, 6	; 21
	ret
     e68:	08 95       	ret

00000e6a <LCD_Write_DATA>:

.global LCD_Write_DATA
LCD_Write_DATA:
	BUS_START_DATA	
     e6a:	af 9a       	sbi	0x15, 7	; 21
	out DPLIO, r22
     e6c:	62 bb       	out	0x12, r22	; 18
	out DPHIO, r24
     e6e:	8b bb       	out	0x1b, r24	; 27
	TOGGLE_WR
     e70:	ae 98       	cbi	0x15, 6	; 21
     e72:	ae 9a       	sbi	0x15, 6	; 21
	ret
     e74:	08 95       	ret

00000e76 <LCD_Write_DATA2>:

.global LCD_Write_DATA2
LCD_Write_DATA2:
	BUS_START_DATA	
     e76:	af 9a       	sbi	0x15, 7	; 21
	clr r1
     e78:	11 24       	eor	r1, r1
	out DPLIO, r24
     e7a:	82 bb       	out	0x12, r24	; 18
	out DPHIO, r1
     e7c:	1b ba       	out	0x1b, r1	; 27
	TOGGLE_WR
     e7e:	ae 98       	cbi	0x15, 6	; 21
     e80:	ae 9a       	sbi	0x15, 6	; 21
	ret
     e82:	08 95       	ret

00000e84 <LCD_Write_COM_DATA>:


.global LCD_Write_COM_DATA
LCD_Write_COM_DATA:
	
	BUS_START_REG
     e84:	af 98       	cbi	0x15, 7	; 21
	clr r1
     e86:	11 24       	eor	r1, r1
	out DPLIO, r24
     e88:	82 bb       	out	0x12, r24	; 18
	out DPHIO, r1
     e8a:	1b ba       	out	0x1b, r1	; 27
	TOGGLE_WR
     e8c:	ae 98       	cbi	0x15, 6	; 21
     e8e:	ae 9a       	sbi	0x15, 6	; 21

	BUS_START_DATA	
     e90:	af 9a       	sbi	0x15, 7	; 21
	out DPLIO, r22
     e92:	62 bb       	out	0x12, r22	; 18
	out DPHIO, r23
     e94:	7b bb       	out	0x1b, r23	; 27
	TOGGLE_WR
     e96:	ae 98       	cbi	0x15, 6	; 21
     e98:	ae 9a       	sbi	0x15, 6	; 21

	ret
     e9a:	08 95       	ret

00000e9c <LCD_Writ_Bus>:


.global LCD_Writ_Bus
	LCD_Writ_Bus:

	out DPHIO, r24
     e9c:	8b bb       	out	0x1b, r24	; 27
	out DPLIO, r22
     e9e:	62 bb       	out	0x12, r22	; 18
	TOGGLE_WR
     ea0:	ae 98       	cbi	0x15, 6	; 21
     ea2:	ae 9a       	sbi	0x15, 6	; 21

     ea4:	08 95       	ret

00000ea6 <_Z41__static_initialization_and_destruction_0ii>:
	display.clrScr();
	
	while (1) {
		memoryGame();
	}
}
     ea6:	01 97       	sbiw	r24, 0x01	; 1
     ea8:	39 f4       	brne	.+14     	; 0xeb8 <_Z41__static_initialization_and_destruction_0ii+0x12>
     eaa:	6f 3f       	cpi	r22, 0xFF	; 255
     eac:	7f 4f       	sbci	r23, 0xFF	; 255
     eae:	21 f4       	brne	.+8      	; 0xeb8 <_Z41__static_initialization_and_destruction_0ii+0x12>
#define Y2_1 56
#define Y2_2 117
#define Y2_3 178
#define Y2_4 239

UTFT display;
     eb0:	84 e7       	ldi	r24, 0x74	; 116
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <_ZN4UTFTC1Ev>
     eb8:	08 95       	ret

00000eba <_Z7Touchedv>:

bool Touched() {
	// PINB3(T-IRQ) nizak pri dodiru
	if (bit_is_clear(PINB, T_IRQ)){
     eba:	b3 99       	sbic	0x16, 3	; 22
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <_Z7Touchedv+0x8>
		return true;
     ebe:	81 e0       	ldi	r24, 0x01	; 1
     ec0:	08 95       	ret
		} else {
		return false;
     ec2:	80 e0       	ldi	r24, 0x00	; 0
	}
}
     ec4:	08 95       	ret

00000ec6 <_Z4getXv>:

//TEST

uint16_t getX() {
     ec6:	cf 92       	push	r12
     ec8:	df 92       	push	r13
     eca:	ef 92       	push	r14
     ecc:	ff 92       	push	r15
	SPI_Write(0X90);
     ece:	80 e9       	ldi	r24, 0x90	; 144
     ed0:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <SPI_Write>
	float x = SPI_Read() / 120.0 * 320 - 15;
     ed4:	0e 94 e6 09 	call	0x13cc	; 0x13cc <SPI_Read>
     ed8:	68 2f       	mov	r22, r24
     eda:	70 e0       	ldi	r23, 0x00	; 0
     edc:	80 e0       	ldi	r24, 0x00	; 0
     ede:	90 e0       	ldi	r25, 0x00	; 0
     ee0:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <__floatsisf>
     ee4:	20 e0       	ldi	r18, 0x00	; 0
     ee6:	30 e0       	ldi	r19, 0x00	; 0
     ee8:	40 ef       	ldi	r20, 0xF0	; 240
     eea:	52 e4       	ldi	r21, 0x42	; 66
     eec:	0e 94 26 11 	call	0x224c	; 0x224c <__divsf3>
     ef0:	20 e0       	ldi	r18, 0x00	; 0
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	40 ea       	ldi	r20, 0xA0	; 160
     ef6:	53 e4       	ldi	r21, 0x43	; 67
     ef8:	0e 94 bf 12 	call	0x257e	; 0x257e <__mulsf3>
     efc:	20 e0       	ldi	r18, 0x00	; 0
     efe:	30 e0       	ldi	r19, 0x00	; 0
     f00:	40 e7       	ldi	r20, 0x70	; 112
     f02:	51 e4       	ldi	r21, 0x41	; 65
     f04:	0e 94 af 10 	call	0x215e	; 0x215e <__subsf3>
     f08:	6b 01       	movw	r12, r22
     f0a:	7c 01       	movw	r14, r24
	SPI_Write(0);
     f0c:	80 e0       	ldi	r24, 0x00	; 0
     f0e:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <SPI_Write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     f12:	8f ef       	ldi	r24, 0xFF	; 255
     f14:	97 e4       	ldi	r25, 0x47	; 71
     f16:	01 97       	sbiw	r24, 0x01	; 1
     f18:	f1 f7       	brne	.-4      	; 0xf16 <_Z4getXv+0x50>
     f1a:	00 c0       	rjmp	.+0      	; 0xf1c <_Z4getXv+0x56>
     f1c:	00 00       	nop
	_delay_ms(10);
	return (uint16_t) x;
     f1e:	c7 01       	movw	r24, r14
     f20:	b6 01       	movw	r22, r12
     f22:	0e 94 9f 11 	call	0x233e	; 0x233e <__fixunssfsi>
}
     f26:	cb 01       	movw	r24, r22
     f28:	ff 90       	pop	r15
     f2a:	ef 90       	pop	r14
     f2c:	df 90       	pop	r13
     f2e:	cf 90       	pop	r12
     f30:	08 95       	ret

00000f32 <_Z4getYv>:

uint16_t getY() {
     f32:	cf 92       	push	r12
     f34:	df 92       	push	r13
     f36:	ef 92       	push	r14
     f38:	ff 92       	push	r15
	float y = 0;
     f3a:	c1 2c       	mov	r12, r1
     f3c:	d1 2c       	mov	r13, r1
     f3e:	76 01       	movw	r14, r12
	while(y <= 0 ){
     f40:	20 e0       	ldi	r18, 0x00	; 0
     f42:	30 e0       	ldi	r19, 0x00	; 0
     f44:	a9 01       	movw	r20, r18
     f46:	c7 01       	movw	r24, r14
     f48:	b6 01       	movw	r22, r12
     f4a:	0e 94 1c 11 	call	0x2238	; 0x2238 <__cmpsf2>
     f4e:	18 16       	cp	r1, r24
     f50:	ec f0       	brlt	.+58     	; 0xf8c <_Z4getYv+0x5a>
		SPI_Write(0XD0);
     f52:	80 ed       	ldi	r24, 0xD0	; 208
     f54:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <SPI_Write>
		y = SPI_Read() / 120.0 * 240;
     f58:	0e 94 e6 09 	call	0x13cc	; 0x13cc <SPI_Read>
     f5c:	68 2f       	mov	r22, r24
     f5e:	70 e0       	ldi	r23, 0x00	; 0
     f60:	80 e0       	ldi	r24, 0x00	; 0
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <__floatsisf>
     f68:	20 e0       	ldi	r18, 0x00	; 0
     f6a:	30 e0       	ldi	r19, 0x00	; 0
     f6c:	40 ef       	ldi	r20, 0xF0	; 240
     f6e:	52 e4       	ldi	r21, 0x42	; 66
     f70:	0e 94 26 11 	call	0x224c	; 0x224c <__divsf3>
     f74:	20 e0       	ldi	r18, 0x00	; 0
     f76:	30 e0       	ldi	r19, 0x00	; 0
     f78:	40 e7       	ldi	r20, 0x70	; 112
     f7a:	53 e4       	ldi	r21, 0x43	; 67
     f7c:	0e 94 bf 12 	call	0x257e	; 0x257e <__mulsf3>
     f80:	6b 01       	movw	r12, r22
     f82:	7c 01       	movw	r14, r24
		SPI_Write(0);
     f84:	80 e0       	ldi	r24, 0x00	; 0
     f86:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <SPI_Write>
	return (uint16_t) x;
}

uint16_t getY() {
	float y = 0;
	while(y <= 0 ){
     f8a:	da cf       	rjmp	.-76     	; 0xf40 <_Z4getYv+0xe>
     f8c:	8f ef       	ldi	r24, 0xFF	; 255
     f8e:	97 e4       	ldi	r25, 0x47	; 71
     f90:	01 97       	sbiw	r24, 0x01	; 1
     f92:	f1 f7       	brne	.-4      	; 0xf90 <_Z4getYv+0x5e>
     f94:	00 c0       	rjmp	.+0      	; 0xf96 <_Z4getYv+0x64>
     f96:	00 00       	nop
		SPI_Write(0XD0);
		y = SPI_Read() / 120.0 * 240;
		SPI_Write(0);
	}
	_delay_ms(10);
	return (uint16_t) y;
     f98:	c7 01       	movw	r24, r14
     f9a:	b6 01       	movw	r22, r12
     f9c:	0e 94 9f 11 	call	0x233e	; 0x233e <__fixunssfsi>
}
     fa0:	cb 01       	movw	r24, r22
     fa2:	ff 90       	pop	r15
     fa4:	ef 90       	pop	r14
     fa6:	df 90       	pop	r13
     fa8:	cf 90       	pop	r12
     faa:	08 95       	ret

00000fac <_Z9fillBoardv>:
//uint8_t c1, c2;  //TODO - provjerava ako su okrenute dvije iste karte
//uint8_t state = 0;  //TODO stanje igre 0 - nema okrenutih karti, 1 - jedna okrenuta karta, 2 - dvije okrenute karte - provjera jesu li iste
// uint8_t gameFinished = 0; // 0 - igra jos traje, 1 - pobjeda, 2 - vrijeme je isteklo, TODO ideja je da imamo timer

// Popuni plocu nasumicno simbolima
void fillBoard() {
     fac:	cf 93       	push	r28
	uint8_t index, i;
	for (i = 0; i < 16; i++) {
     fae:	c0 e0       	ldi	r28, 0x00	; 0
     fb0:	c0 31       	cpi	r28, 0x10	; 16
     fb2:	08 f5       	brcc	.+66     	; 0xff6 <_Z9fillBoardv+0x4a>
		index = rand() % 16;
     fb4:	0e 94 42 14 	call	0x2884	; 0x2884 <rand>
     fb8:	8f 70       	andi	r24, 0x0F	; 15
     fba:	90 78       	andi	r25, 0x80	; 128
     fbc:	99 23       	and	r25, r25
     fbe:	34 f4       	brge	.+12     	; 0xfcc <_Z9fillBoardv+0x20>
     fc0:	01 97       	sbiw	r24, 0x01	; 1
     fc2:	80 6f       	ori	r24, 0xF0	; 240
     fc4:	9f 6f       	ori	r25, 0xFF	; 255
     fc6:	01 96       	adiw	r24, 0x01	; 1
     fc8:	01 c0       	rjmp	.+2      	; 0xfcc <_Z9fillBoardv+0x20>
		while(board[index] != 0) { //ako se izabere polje koje je vec popunjeno, biraj sljedece
			index++;
			if (index > 15) {
				index = 0;
     fca:	80 e0       	ldi	r24, 0x00	; 0
// Popuni plocu nasumicno simbolima
void fillBoard() {
	uint8_t index, i;
	for (i = 0; i < 16; i++) {
		index = rand() % 16;
		while(board[index] != 0) { //ako se izabere polje koje je vec popunjeno, biraj sljedece
     fcc:	28 2f       	mov	r18, r24
     fce:	30 e0       	ldi	r19, 0x00	; 0
     fd0:	f9 01       	movw	r30, r18
     fd2:	ec 59       	subi	r30, 0x9C	; 156
     fd4:	ff 4f       	sbci	r31, 0xFF	; 255
     fd6:	90 81       	ld	r25, Z
     fd8:	99 23       	and	r25, r25
     fda:	21 f0       	breq	.+8      	; 0xfe4 <_Z9fillBoardv+0x38>
			index++;
     fdc:	8f 5f       	subi	r24, 0xFF	; 255
			if (index > 15) {
     fde:	80 31       	cpi	r24, 0x10	; 16
     fe0:	a8 f3       	brcs	.-22     	; 0xfcc <_Z9fillBoardv+0x20>
     fe2:	f3 cf       	rjmp	.-26     	; 0xfca <_Z9fillBoardv+0x1e>
				index = 0;
			}
		}
		board[index] = (i % 8) + 1;
     fe4:	f9 01       	movw	r30, r18
     fe6:	ec 59       	subi	r30, 0x9C	; 156
     fe8:	ff 4f       	sbci	r31, 0xFF	; 255
     fea:	8c 2f       	mov	r24, r28
     fec:	87 70       	andi	r24, 0x07	; 7
     fee:	8f 5f       	subi	r24, 0xFF	; 255
     ff0:	80 83       	st	Z, r24
// uint8_t gameFinished = 0; // 0 - igra jos traje, 1 - pobjeda, 2 - vrijeme je isteklo, TODO ideja je da imamo timer

// Popuni plocu nasumicno simbolima
void fillBoard() {
	uint8_t index, i;
	for (i = 0; i < 16; i++) {
     ff2:	cf 5f       	subi	r28, 0xFF	; 255
     ff4:	dd cf       	rjmp	.-70     	; 0xfb0 <_Z9fillBoardv+0x4>
				index = 0;
			}
		}
		board[index] = (i % 8) + 1;
	}
}
     ff6:	cf 91       	pop	r28
     ff8:	08 95       	ret

00000ffa <_Z14memoryGetInputv>:

// vraca indeks + 1 polja na koje smo kliknuli
uint8_t memoryGetInput() {
     ffa:	cf 93       	push	r28
     ffc:	df 93       	push	r29
	while(!Touched());
     ffe:	0e 94 5d 07 	call	0xeba	; 0xeba <_Z7Touchedv>
    1002:	88 23       	and	r24, r24
    1004:	e1 f3       	breq	.-8      	; 0xffe <_Z14memoryGetInputv+0x4>
	uint16_t x = getX();
    1006:	0e 94 63 07 	call	0xec6	; 0xec6 <_Z4getXv>
    100a:	ec 01       	movw	r28, r24
	uint16_t y = getY();
    100c:	0e 94 99 07 	call	0xf32	; 0xf32 <_Z4getYv>
	
	if ((x > X1_1) && (x < X2_1) && (y > Y1_1) && (y < Y2_1)) return 1;
    1010:	9e 01       	movw	r18, r28
    1012:	28 52       	subi	r18, 0x28	; 40
    1014:	31 09       	sbc	r19, r1
    1016:	27 33       	cpi	r18, 0x37	; 55
    1018:	31 05       	cpc	r19, r1
    101a:	30 f4       	brcc	.+12     	; 0x1028 <_Z14memoryGetInputv+0x2e>
    101c:	00 97       	sbiw	r24, 0x00	; 0
    101e:	21 f0       	breq	.+8      	; 0x1028 <_Z14memoryGetInputv+0x2e>
    1020:	88 33       	cpi	r24, 0x38	; 56
    1022:	91 05       	cpc	r25, r1
    1024:	08 f4       	brcc	.+2      	; 0x1028 <_Z14memoryGetInputv+0x2e>
    1026:	97 c0       	rjmp	.+302    	; 0x1156 <_Z14memoryGetInputv+0x15c>
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_1) && (y < Y2_1)) return 2;
    1028:	ae 01       	movw	r20, r28
    102a:	45 56       	subi	r20, 0x65	; 101
    102c:	51 09       	sbc	r21, r1
    102e:	47 33       	cpi	r20, 0x37	; 55
    1030:	51 05       	cpc	r21, r1
    1032:	30 f4       	brcc	.+12     	; 0x1040 <_Z14memoryGetInputv+0x46>
    1034:	00 97       	sbiw	r24, 0x00	; 0
    1036:	21 f0       	breq	.+8      	; 0x1040 <_Z14memoryGetInputv+0x46>
    1038:	88 33       	cpi	r24, 0x38	; 56
    103a:	91 05       	cpc	r25, r1
    103c:	08 f4       	brcc	.+2      	; 0x1040 <_Z14memoryGetInputv+0x46>
    103e:	8d c0       	rjmp	.+282    	; 0x115a <_Z14memoryGetInputv+0x160>
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_1) && (y < Y2_1)) return 3;
    1040:	be 01       	movw	r22, r28
    1042:	62 5a       	subi	r22, 0xA2	; 162
    1044:	71 09       	sbc	r23, r1
    1046:	67 33       	cpi	r22, 0x37	; 55
    1048:	71 05       	cpc	r23, r1
    104a:	30 f4       	brcc	.+12     	; 0x1058 <_Z14memoryGetInputv+0x5e>
    104c:	00 97       	sbiw	r24, 0x00	; 0
    104e:	21 f0       	breq	.+8      	; 0x1058 <_Z14memoryGetInputv+0x5e>
    1050:	88 33       	cpi	r24, 0x38	; 56
    1052:	91 05       	cpc	r25, r1
    1054:	08 f4       	brcc	.+2      	; 0x1058 <_Z14memoryGetInputv+0x5e>
    1056:	83 c0       	rjmp	.+262    	; 0x115e <_Z14memoryGetInputv+0x164>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_1) && (y < Y2_1)) return 4;
    1058:	cf 5d       	subi	r28, 0xDF	; 223
    105a:	d1 09       	sbc	r29, r1
    105c:	c7 33       	cpi	r28, 0x37	; 55
    105e:	d1 05       	cpc	r29, r1
    1060:	30 f4       	brcc	.+12     	; 0x106e <_Z14memoryGetInputv+0x74>
    1062:	00 97       	sbiw	r24, 0x00	; 0
    1064:	21 f0       	breq	.+8      	; 0x106e <_Z14memoryGetInputv+0x74>
    1066:	88 33       	cpi	r24, 0x38	; 56
    1068:	91 05       	cpc	r25, r1
    106a:	08 f4       	brcc	.+2      	; 0x106e <_Z14memoryGetInputv+0x74>
    106c:	7a c0       	rjmp	.+244    	; 0x1162 <_Z14memoryGetInputv+0x168>
	
	else if ((x > X1_1) && (x < X2_1) && (y > Y1_2) && (y < Y2_2)) return 5;
    106e:	27 33       	cpi	r18, 0x37	; 55
    1070:	31 05       	cpc	r19, r1
    1072:	38 f4       	brcc	.+14     	; 0x1082 <_Z14memoryGetInputv+0x88>
    1074:	8e 33       	cpi	r24, 0x3E	; 62
    1076:	91 05       	cpc	r25, r1
    1078:	20 f0       	brcs	.+8      	; 0x1082 <_Z14memoryGetInputv+0x88>
    107a:	85 37       	cpi	r24, 0x75	; 117
    107c:	91 05       	cpc	r25, r1
    107e:	08 f4       	brcc	.+2      	; 0x1082 <_Z14memoryGetInputv+0x88>
    1080:	72 c0       	rjmp	.+228    	; 0x1166 <_Z14memoryGetInputv+0x16c>
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_2) && (y < Y2_2)) return 6;
    1082:	47 33       	cpi	r20, 0x37	; 55
    1084:	51 05       	cpc	r21, r1
    1086:	38 f4       	brcc	.+14     	; 0x1096 <_Z14memoryGetInputv+0x9c>
    1088:	8e 33       	cpi	r24, 0x3E	; 62
    108a:	91 05       	cpc	r25, r1
    108c:	20 f0       	brcs	.+8      	; 0x1096 <_Z14memoryGetInputv+0x9c>
    108e:	85 37       	cpi	r24, 0x75	; 117
    1090:	91 05       	cpc	r25, r1
    1092:	08 f4       	brcc	.+2      	; 0x1096 <_Z14memoryGetInputv+0x9c>
    1094:	6a c0       	rjmp	.+212    	; 0x116a <_Z14memoryGetInputv+0x170>
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_2) && (y < Y2_2)) return 7;
    1096:	67 33       	cpi	r22, 0x37	; 55
    1098:	71 05       	cpc	r23, r1
    109a:	38 f4       	brcc	.+14     	; 0x10aa <_Z14memoryGetInputv+0xb0>
    109c:	8e 33       	cpi	r24, 0x3E	; 62
    109e:	91 05       	cpc	r25, r1
    10a0:	20 f0       	brcs	.+8      	; 0x10aa <_Z14memoryGetInputv+0xb0>
    10a2:	85 37       	cpi	r24, 0x75	; 117
    10a4:	91 05       	cpc	r25, r1
    10a6:	08 f4       	brcc	.+2      	; 0x10aa <_Z14memoryGetInputv+0xb0>
    10a8:	62 c0       	rjmp	.+196    	; 0x116e <_Z14memoryGetInputv+0x174>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_2) && (y < Y2_2)) return 8;
    10aa:	c7 33       	cpi	r28, 0x37	; 55
    10ac:	d1 05       	cpc	r29, r1
    10ae:	38 f4       	brcc	.+14     	; 0x10be <_Z14memoryGetInputv+0xc4>
    10b0:	8e 33       	cpi	r24, 0x3E	; 62
    10b2:	91 05       	cpc	r25, r1
    10b4:	20 f0       	brcs	.+8      	; 0x10be <_Z14memoryGetInputv+0xc4>
    10b6:	85 37       	cpi	r24, 0x75	; 117
    10b8:	91 05       	cpc	r25, r1
    10ba:	08 f4       	brcc	.+2      	; 0x10be <_Z14memoryGetInputv+0xc4>
    10bc:	5a c0       	rjmp	.+180    	; 0x1172 <_Z14memoryGetInputv+0x178>
	
	else if ((x > X1_1) && (x < X2_1) && (y > Y1_3) && (y < Y2_3)) return 9;
    10be:	27 33       	cpi	r18, 0x37	; 55
    10c0:	31 05       	cpc	r19, r1
    10c2:	38 f4       	brcc	.+14     	; 0x10d2 <_Z14memoryGetInputv+0xd8>
    10c4:	8b 37       	cpi	r24, 0x7B	; 123
    10c6:	91 05       	cpc	r25, r1
    10c8:	20 f0       	brcs	.+8      	; 0x10d2 <_Z14memoryGetInputv+0xd8>
    10ca:	82 3b       	cpi	r24, 0xB2	; 178
    10cc:	91 05       	cpc	r25, r1
    10ce:	08 f4       	brcc	.+2      	; 0x10d2 <_Z14memoryGetInputv+0xd8>
    10d0:	52 c0       	rjmp	.+164    	; 0x1176 <_Z14memoryGetInputv+0x17c>
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_3) && (y < Y2_3)) return 10;
    10d2:	47 33       	cpi	r20, 0x37	; 55
    10d4:	51 05       	cpc	r21, r1
    10d6:	38 f4       	brcc	.+14     	; 0x10e6 <_Z14memoryGetInputv+0xec>
    10d8:	8b 37       	cpi	r24, 0x7B	; 123
    10da:	91 05       	cpc	r25, r1
    10dc:	20 f0       	brcs	.+8      	; 0x10e6 <_Z14memoryGetInputv+0xec>
    10de:	82 3b       	cpi	r24, 0xB2	; 178
    10e0:	91 05       	cpc	r25, r1
    10e2:	08 f4       	brcc	.+2      	; 0x10e6 <_Z14memoryGetInputv+0xec>
    10e4:	4a c0       	rjmp	.+148    	; 0x117a <_Z14memoryGetInputv+0x180>
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_3) && (y < Y2_3)) return 11;
    10e6:	67 33       	cpi	r22, 0x37	; 55
    10e8:	71 05       	cpc	r23, r1
    10ea:	38 f4       	brcc	.+14     	; 0x10fa <_Z14memoryGetInputv+0x100>
    10ec:	8b 37       	cpi	r24, 0x7B	; 123
    10ee:	91 05       	cpc	r25, r1
    10f0:	20 f0       	brcs	.+8      	; 0x10fa <_Z14memoryGetInputv+0x100>
    10f2:	82 3b       	cpi	r24, 0xB2	; 178
    10f4:	91 05       	cpc	r25, r1
    10f6:	08 f4       	brcc	.+2      	; 0x10fa <_Z14memoryGetInputv+0x100>
    10f8:	42 c0       	rjmp	.+132    	; 0x117e <_Z14memoryGetInputv+0x184>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_3) && (y < Y2_3)) return 12;
    10fa:	c7 33       	cpi	r28, 0x37	; 55
    10fc:	d1 05       	cpc	r29, r1
    10fe:	30 f4       	brcc	.+12     	; 0x110c <_Z14memoryGetInputv+0x112>
    1100:	8b 37       	cpi	r24, 0x7B	; 123
    1102:	91 05       	cpc	r25, r1
    1104:	18 f0       	brcs	.+6      	; 0x110c <_Z14memoryGetInputv+0x112>
    1106:	82 3b       	cpi	r24, 0xB2	; 178
    1108:	91 05       	cpc	r25, r1
    110a:	d8 f1       	brcs	.+118    	; 0x1182 <_Z14memoryGetInputv+0x188>
	
	else if ((x > X1_1) && (x < X2_1) && (y > Y1_4) && (y < Y2_4)) return 13;
    110c:	27 33       	cpi	r18, 0x37	; 55
    110e:	31 05       	cpc	r19, r1
    1110:	30 f4       	brcc	.+12     	; 0x111e <_Z14memoryGetInputv+0x124>
    1112:	88 3b       	cpi	r24, 0xB8	; 184
    1114:	91 05       	cpc	r25, r1
    1116:	18 f0       	brcs	.+6      	; 0x111e <_Z14memoryGetInputv+0x124>
    1118:	8f 3e       	cpi	r24, 0xEF	; 239
    111a:	91 05       	cpc	r25, r1
    111c:	a0 f1       	brcs	.+104    	; 0x1186 <_Z14memoryGetInputv+0x18c>
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_4) && (y < Y2_4)) return 14;
    111e:	47 33       	cpi	r20, 0x37	; 55
    1120:	51 05       	cpc	r21, r1
    1122:	30 f4       	brcc	.+12     	; 0x1130 <_Z14memoryGetInputv+0x136>
    1124:	88 3b       	cpi	r24, 0xB8	; 184
    1126:	91 05       	cpc	r25, r1
    1128:	18 f0       	brcs	.+6      	; 0x1130 <_Z14memoryGetInputv+0x136>
    112a:	8f 3e       	cpi	r24, 0xEF	; 239
    112c:	91 05       	cpc	r25, r1
    112e:	68 f1       	brcs	.+90     	; 0x118a <_Z14memoryGetInputv+0x190>
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_4) && (y < Y2_4)) return 15;
    1130:	67 33       	cpi	r22, 0x37	; 55
    1132:	71 05       	cpc	r23, r1
    1134:	30 f4       	brcc	.+12     	; 0x1142 <_Z14memoryGetInputv+0x148>
    1136:	88 3b       	cpi	r24, 0xB8	; 184
    1138:	91 05       	cpc	r25, r1
    113a:	18 f0       	brcs	.+6      	; 0x1142 <_Z14memoryGetInputv+0x148>
    113c:	8f 3e       	cpi	r24, 0xEF	; 239
    113e:	91 05       	cpc	r25, r1
    1140:	30 f1       	brcs	.+76     	; 0x118e <_Z14memoryGetInputv+0x194>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_4) && (y < Y2_4)) return 16;
    1142:	e7 97       	sbiw	r28, 0x37	; 55
    1144:	30 f5       	brcc	.+76     	; 0x1192 <_Z14memoryGetInputv+0x198>
    1146:	88 3b       	cpi	r24, 0xB8	; 184
    1148:	91 05       	cpc	r25, r1
    114a:	28 f1       	brcs	.+74     	; 0x1196 <_Z14memoryGetInputv+0x19c>
    114c:	8f 3e       	cpi	r24, 0xEF	; 239
    114e:	91 05       	cpc	r25, r1
    1150:	20 f1       	brcs	.+72     	; 0x119a <_Z14memoryGetInputv+0x1a0>
	else return 0;
    1152:	80 e0       	ldi	r24, 0x00	; 0
    1154:	23 c0       	rjmp	.+70     	; 0x119c <_Z14memoryGetInputv+0x1a2>
uint8_t memoryGetInput() {
	while(!Touched());
	uint16_t x = getX();
	uint16_t y = getY();
	
	if ((x > X1_1) && (x < X2_1) && (y > Y1_1) && (y < Y2_1)) return 1;
    1156:	81 e0       	ldi	r24, 0x01	; 1
    1158:	21 c0       	rjmp	.+66     	; 0x119c <_Z14memoryGetInputv+0x1a2>
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_1) && (y < Y2_1)) return 2;
    115a:	82 e0       	ldi	r24, 0x02	; 2
    115c:	1f c0       	rjmp	.+62     	; 0x119c <_Z14memoryGetInputv+0x1a2>
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_1) && (y < Y2_1)) return 3;
    115e:	83 e0       	ldi	r24, 0x03	; 3
    1160:	1d c0       	rjmp	.+58     	; 0x119c <_Z14memoryGetInputv+0x1a2>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_1) && (y < Y2_1)) return 4;
    1162:	84 e0       	ldi	r24, 0x04	; 4
    1164:	1b c0       	rjmp	.+54     	; 0x119c <_Z14memoryGetInputv+0x1a2>
	
	else if ((x > X1_1) && (x < X2_1) && (y > Y1_2) && (y < Y2_2)) return 5;
    1166:	85 e0       	ldi	r24, 0x05	; 5
    1168:	19 c0       	rjmp	.+50     	; 0x119c <_Z14memoryGetInputv+0x1a2>
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_2) && (y < Y2_2)) return 6;
    116a:	86 e0       	ldi	r24, 0x06	; 6
    116c:	17 c0       	rjmp	.+46     	; 0x119c <_Z14memoryGetInputv+0x1a2>
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_2) && (y < Y2_2)) return 7;
    116e:	87 e0       	ldi	r24, 0x07	; 7
    1170:	15 c0       	rjmp	.+42     	; 0x119c <_Z14memoryGetInputv+0x1a2>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_2) && (y < Y2_2)) return 8;
    1172:	88 e0       	ldi	r24, 0x08	; 8
    1174:	13 c0       	rjmp	.+38     	; 0x119c <_Z14memoryGetInputv+0x1a2>
	
	else if ((x > X1_1) && (x < X2_1) && (y > Y1_3) && (y < Y2_3)) return 9;
    1176:	89 e0       	ldi	r24, 0x09	; 9
    1178:	11 c0       	rjmp	.+34     	; 0x119c <_Z14memoryGetInputv+0x1a2>
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_3) && (y < Y2_3)) return 10;
    117a:	8a e0       	ldi	r24, 0x0A	; 10
    117c:	0f c0       	rjmp	.+30     	; 0x119c <_Z14memoryGetInputv+0x1a2>
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_3) && (y < Y2_3)) return 11;
    117e:	8b e0       	ldi	r24, 0x0B	; 11
    1180:	0d c0       	rjmp	.+26     	; 0x119c <_Z14memoryGetInputv+0x1a2>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_3) && (y < Y2_3)) return 12;
    1182:	8c e0       	ldi	r24, 0x0C	; 12
    1184:	0b c0       	rjmp	.+22     	; 0x119c <_Z14memoryGetInputv+0x1a2>
	
	else if ((x > X1_1) && (x < X2_1) && (y > Y1_4) && (y < Y2_4)) return 13;
    1186:	8d e0       	ldi	r24, 0x0D	; 13
    1188:	09 c0       	rjmp	.+18     	; 0x119c <_Z14memoryGetInputv+0x1a2>
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_4) && (y < Y2_4)) return 14;
    118a:	8e e0       	ldi	r24, 0x0E	; 14
    118c:	07 c0       	rjmp	.+14     	; 0x119c <_Z14memoryGetInputv+0x1a2>
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_4) && (y < Y2_4)) return 15;
    118e:	8f e0       	ldi	r24, 0x0F	; 15
    1190:	05 c0       	rjmp	.+10     	; 0x119c <_Z14memoryGetInputv+0x1a2>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_4) && (y < Y2_4)) return 16;
	else return 0;
    1192:	80 e0       	ldi	r24, 0x00	; 0
    1194:	03 c0       	rjmp	.+6      	; 0x119c <_Z14memoryGetInputv+0x1a2>
    1196:	80 e0       	ldi	r24, 0x00	; 0
    1198:	01 c0       	rjmp	.+2      	; 0x119c <_Z14memoryGetInputv+0x1a2>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_3) && (y < Y2_3)) return 12;
	
	else if ((x > X1_1) && (x < X2_1) && (y > Y1_4) && (y < Y2_4)) return 13;
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_4) && (y < Y2_4)) return 14;
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_4) && (y < Y2_4)) return 15;
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_4) && (y < Y2_4)) return 16;
    119a:	80 e1       	ldi	r24, 0x10	; 16
	else return 0;
}
    119c:	df 91       	pop	r29
    119e:	cf 91       	pop	r28
    11a0:	08 95       	ret

000011a2 <_Z16memoryRevealCardh>:
//bool memoryCheckOpen() {
//return 0;
//}

// otkrivanje karte - crtanje simbol iz polja na plocu
void memoryRevealCard(uint8_t input) {
    11a2:	cf 92       	push	r12
    11a4:	ef 92       	push	r14
    11a6:	ff 92       	push	r15
    11a8:	0f 93       	push	r16
    11aa:	1f 93       	push	r17
    11ac:	cf 93       	push	r28
    11ae:	c8 2f       	mov	r28, r24
	display.setColor(255, 255, 255);
    11b0:	2f ef       	ldi	r18, 0xFF	; 255
    11b2:	4f ef       	ldi	r20, 0xFF	; 255
    11b4:	6f ef       	ldi	r22, 0xFF	; 255
    11b6:	84 e7       	ldi	r24, 0x74	; 116
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <_ZN4UTFT8setColorEhhh>
	display.setFont(BigFont);
    11be:	62 e7       	ldi	r22, 0x72	; 114
    11c0:	70 e0       	ldi	r23, 0x00	; 0
    11c2:	84 e7       	ldi	r24, 0x74	; 116
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	0e 94 94 10 	call	0x2128	; 0x2128 <_ZN4UTFT7setFontEPKh>
    11ca:	8c 2f       	mov	r24, r28
    11cc:	83 70       	andi	r24, 0x03	; 3
	
	uint16_t x = 0, y = 0;
	
	if (input % 4 == 1) {             // prvi stupac
    11ce:	81 30       	cpi	r24, 0x01	; 1
    11d0:	49 f0       	breq	.+18     	; 0x11e4 <_Z16memoryRevealCardh+0x42>
		x = X1_1;
		} else if (input % 4 == 2) {      // drugi stupac
    11d2:	82 30       	cpi	r24, 0x02	; 2
    11d4:	51 f0       	breq	.+20     	; 0x11ea <_Z16memoryRevealCardh+0x48>
		x = X1_2;
		} else if (input % 4 == 3) {      // treci stupac
    11d6:	83 30       	cpi	r24, 0x03	; 3
    11d8:	59 f0       	breq	.+22     	; 0x11f0 <_Z16memoryRevealCardh+0x4e>
		x = X1_3;
		} else if (input % 4 == 0) {      // cetvrti stupac
    11da:	88 23       	and	r24, r24
    11dc:	61 f0       	breq	.+24     	; 0x11f6 <_Z16memoryRevealCardh+0x54>
// otkrivanje karte - crtanje simbol iz polja na plocu
void memoryRevealCard(uint8_t input) {
	display.setColor(255, 255, 255);
	display.setFont(BigFont);
	
	uint16_t x = 0, y = 0;
    11de:	20 e0       	ldi	r18, 0x00	; 0
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	0b c0       	rjmp	.+22     	; 0x11fa <_Z16memoryRevealCardh+0x58>
	
	if (input % 4 == 1) {             // prvi stupac
		x = X1_1;
    11e4:	27 e2       	ldi	r18, 0x27	; 39
    11e6:	30 e0       	ldi	r19, 0x00	; 0
    11e8:	08 c0       	rjmp	.+16     	; 0x11fa <_Z16memoryRevealCardh+0x58>
		} else if (input % 4 == 2) {      // drugi stupac
		x = X1_2;
    11ea:	24 e6       	ldi	r18, 0x64	; 100
    11ec:	30 e0       	ldi	r19, 0x00	; 0
    11ee:	05 c0       	rjmp	.+10     	; 0x11fa <_Z16memoryRevealCardh+0x58>
		} else if (input % 4 == 3) {      // treci stupac
		x = X1_3;
    11f0:	21 ea       	ldi	r18, 0xA1	; 161
    11f2:	30 e0       	ldi	r19, 0x00	; 0
    11f4:	02 c0       	rjmp	.+4      	; 0x11fa <_Z16memoryRevealCardh+0x58>
		} else if (input % 4 == 0) {      // cetvrti stupac
		x = X1_4;
    11f6:	2e ed       	ldi	r18, 0xDE	; 222
    11f8:	30 e0       	ldi	r19, 0x00	; 0
	}
	
	if ((input > 0) && (input < 5)) { // prvi red
    11fa:	8f ef       	ldi	r24, 0xFF	; 255
    11fc:	8c 0f       	add	r24, r28
    11fe:	84 30       	cpi	r24, 0x04	; 4
    1200:	78 f0       	brcs	.+30     	; 0x1220 <_Z16memoryRevealCardh+0x7e>
		y = Y1_1;
		} else if ((input > 4) && (input < 9)) {      // drugi stupac
    1202:	8b ef       	ldi	r24, 0xFB	; 251
    1204:	8c 0f       	add	r24, r28
    1206:	84 30       	cpi	r24, 0x04	; 4
    1208:	70 f0       	brcs	.+28     	; 0x1226 <_Z16memoryRevealCardh+0x84>
		y = Y1_2;
		} else if ((input > 8) && (input < 13)) {      // treci stupac
    120a:	87 ef       	ldi	r24, 0xF7	; 247
    120c:	8c 0f       	add	r24, r28
    120e:	84 30       	cpi	r24, 0x04	; 4
    1210:	68 f0       	brcs	.+26     	; 0x122c <_Z16memoryRevealCardh+0x8a>
		y = Y1_3;
		} else if ((input > 12) && (input < 17)) {      // cetvrti stupac
    1212:	83 ef       	ldi	r24, 0xF3	; 243
    1214:	8c 0f       	add	r24, r28
    1216:	84 30       	cpi	r24, 0x04	; 4
    1218:	60 f0       	brcs	.+24     	; 0x1232 <_Z16memoryRevealCardh+0x90>
// otkrivanje karte - crtanje simbol iz polja na plocu
void memoryRevealCard(uint8_t input) {
	display.setColor(255, 255, 255);
	display.setFont(BigFont);
	
	uint16_t x = 0, y = 0;
    121a:	00 e0       	ldi	r16, 0x00	; 0
    121c:	10 e0       	ldi	r17, 0x00	; 0
    121e:	0b c0       	rjmp	.+22     	; 0x1236 <_Z16memoryRevealCardh+0x94>
		} else if (input % 4 == 0) {      // cetvrti stupac
		x = X1_4;
	}
	
	if ((input > 0) && (input < 5)) { // prvi red
		y = Y1_1;
    1220:	00 e0       	ldi	r16, 0x00	; 0
    1222:	10 e0       	ldi	r17, 0x00	; 0
    1224:	08 c0       	rjmp	.+16     	; 0x1236 <_Z16memoryRevealCardh+0x94>
		} else if ((input > 4) && (input < 9)) {      // drugi stupac
		y = Y1_2;
    1226:	0d e3       	ldi	r16, 0x3D	; 61
    1228:	10 e0       	ldi	r17, 0x00	; 0
    122a:	05 c0       	rjmp	.+10     	; 0x1236 <_Z16memoryRevealCardh+0x94>
		} else if ((input > 8) && (input < 13)) {      // treci stupac
		y = Y1_3;
    122c:	0a e7       	ldi	r16, 0x7A	; 122
    122e:	10 e0       	ldi	r17, 0x00	; 0
    1230:	02 c0       	rjmp	.+4      	; 0x1236 <_Z16memoryRevealCardh+0x94>
		} else if ((input > 12) && (input < 17)) {      // cetvrti stupac
		y = Y1_4;
    1232:	07 eb       	ldi	r16, 0xB7	; 183
    1234:	10 e0       	ldi	r17, 0x00	; 0
	}
	
	uint8_t openSymbol = board[input - 1];
    1236:	ec 2f       	mov	r30, r28
    1238:	f0 e0       	ldi	r31, 0x00	; 0
    123a:	ed 59       	subi	r30, 0x9D	; 157
    123c:	ff 4f       	sbci	r31, 0xFF	; 255
    123e:	40 81       	ld	r20, Z
	
	display.printNumI(openSymbol, x + 20, y + 20);
    1240:	0c 5e       	subi	r16, 0xEC	; 236
    1242:	1f 4f       	sbci	r17, 0xFF	; 255
    1244:	2c 5e       	subi	r18, 0xEC	; 236
    1246:	3f 4f       	sbci	r19, 0xFF	; 255
    1248:	50 e0       	ldi	r21, 0x00	; 0
    124a:	60 e0       	ldi	r22, 0x00	; 0
    124c:	70 e0       	ldi	r23, 0x00	; 0
    124e:	68 94       	set
    1250:	cc 24       	eor	r12, r12
    1252:	c5 f8       	bld	r12, 5
    1254:	e1 2c       	mov	r14, r1
    1256:	f1 2c       	mov	r15, r1
    1258:	84 e7       	ldi	r24, 0x74	; 116
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	0e 94 8c 0f 	call	0x1f18	; 0x1f18 <_ZN4UTFT9printNumIEliiic>
    1260:	2f ef       	ldi	r18, 0xFF	; 255
    1262:	8f e7       	ldi	r24, 0x7F	; 127
    1264:	94 e0       	ldi	r25, 0x04	; 4
    1266:	21 50       	subi	r18, 0x01	; 1
    1268:	80 40       	sbci	r24, 0x00	; 0
    126a:	90 40       	sbci	r25, 0x00	; 0
    126c:	e1 f7       	brne	.-8      	; 0x1266 <_Z16memoryRevealCardh+0xc4>
    126e:	00 c0       	rjmp	.+0      	; 0x1270 <_Z16memoryRevealCardh+0xce>
    1270:	00 00       	nop
	
	_delay_ms(200);     // Debounce cekanjem
}
    1272:	cf 91       	pop	r28
    1274:	1f 91       	pop	r17
    1276:	0f 91       	pop	r16
    1278:	ff 90       	pop	r15
    127a:	ef 90       	pop	r14
    127c:	cf 90       	pop	r12
    127e:	08 95       	ret

00001280 <_Z10memoryInitv>:

// inicijalno stanje memory igre - generiranje sadrzaja polja i crtanje ploce
void memoryInit() {
    1280:	0f 93       	push	r16
    1282:	1f 93       	push	r17
	display.clrScr();
    1284:	84 e7       	ldi	r24, 0x74	; 116
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	0e 94 b3 0b 	call	0x1766	; 0x1766 <_ZN4UTFT6clrScrEv>
	fillBoard();
    128c:	0e 94 d6 07 	call	0xfac	; 0xfac <_Z9fillBoardv>
	
	//crtanje ploce za memory
	display.fillRect(BORDER_L, BOARD_Y1, BORDER_L + BORDER_WIDTH, BOARD_Y2);
    1290:	0f ee       	ldi	r16, 0xEF	; 239
    1292:	10 e0       	ldi	r17, 0x00	; 0
    1294:	25 e6       	ldi	r18, 0x65	; 101
    1296:	30 e0       	ldi	r19, 0x00	; 0
    1298:	40 e0       	ldi	r20, 0x00	; 0
    129a:	50 e0       	ldi	r21, 0x00	; 0
    129c:	60 e6       	ldi	r22, 0x60	; 96
    129e:	70 e0       	ldi	r23, 0x00	; 0
    12a0:	84 e7       	ldi	r24, 0x74	; 116
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <_ZN4UTFT8fillRectEiiii>
	display.fillRect(BORDER_C, BOARD_Y1, BORDER_C + BORDER_WIDTH, BOARD_Y2);
    12a8:	22 ea       	ldi	r18, 0xA2	; 162
    12aa:	30 e0       	ldi	r19, 0x00	; 0
    12ac:	40 e0       	ldi	r20, 0x00	; 0
    12ae:	50 e0       	ldi	r21, 0x00	; 0
    12b0:	6d e9       	ldi	r22, 0x9D	; 157
    12b2:	70 e0       	ldi	r23, 0x00	; 0
    12b4:	84 e7       	ldi	r24, 0x74	; 116
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <_ZN4UTFT8fillRectEiiii>
	display.fillRect(BORDER_R, BOARD_Y1, BORDER_R + BORDER_WIDTH, BOARD_Y2);
    12bc:	2f ed       	ldi	r18, 0xDF	; 223
    12be:	30 e0       	ldi	r19, 0x00	; 0
    12c0:	40 e0       	ldi	r20, 0x00	; 0
    12c2:	50 e0       	ldi	r21, 0x00	; 0
    12c4:	6a ed       	ldi	r22, 0xDA	; 218
    12c6:	70 e0       	ldi	r23, 0x00	; 0
    12c8:	84 e7       	ldi	r24, 0x74	; 116
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <_ZN4UTFT8fillRectEiiii>
	display.fillRect(BOARD_X1, BORDER_T, BOARD_X2, BORDER_T + BORDER_WIDTH);
    12d0:	0d e3       	ldi	r16, 0x3D	; 61
    12d2:	10 e0       	ldi	r17, 0x00	; 0
    12d4:	26 e1       	ldi	r18, 0x16	; 22
    12d6:	31 e0       	ldi	r19, 0x01	; 1
    12d8:	48 e3       	ldi	r20, 0x38	; 56
    12da:	50 e0       	ldi	r21, 0x00	; 0
    12dc:	67 e2       	ldi	r22, 0x27	; 39
    12de:	70 e0       	ldi	r23, 0x00	; 0
    12e0:	84 e7       	ldi	r24, 0x74	; 116
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <_ZN4UTFT8fillRectEiiii>
	display.fillRect(BOARD_X1, BORDER_M, BOARD_X2, BORDER_M + BORDER_WIDTH);
    12e8:	0a e7       	ldi	r16, 0x7A	; 122
    12ea:	10 e0       	ldi	r17, 0x00	; 0
    12ec:	26 e1       	ldi	r18, 0x16	; 22
    12ee:	31 e0       	ldi	r19, 0x01	; 1
    12f0:	45 e7       	ldi	r20, 0x75	; 117
    12f2:	50 e0       	ldi	r21, 0x00	; 0
    12f4:	67 e2       	ldi	r22, 0x27	; 39
    12f6:	70 e0       	ldi	r23, 0x00	; 0
    12f8:	84 e7       	ldi	r24, 0x74	; 116
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <_ZN4UTFT8fillRectEiiii>
	display.fillRect(BOARD_X1, BORDER_B, BOARD_X2, BORDER_B + BORDER_WIDTH);
    1300:	07 eb       	ldi	r16, 0xB7	; 183
    1302:	10 e0       	ldi	r17, 0x00	; 0
    1304:	26 e1       	ldi	r18, 0x16	; 22
    1306:	31 e0       	ldi	r19, 0x01	; 1
    1308:	42 eb       	ldi	r20, 0xB2	; 178
    130a:	50 e0       	ldi	r21, 0x00	; 0
    130c:	67 e2       	ldi	r22, 0x27	; 39
    130e:	70 e0       	ldi	r23, 0x00	; 0
    1310:	84 e7       	ldi	r24, 0x74	; 116
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <_ZN4UTFT8fillRectEiiii>
}
    1318:	1f 91       	pop	r17
    131a:	0f 91       	pop	r16
    131c:	08 95       	ret

0000131e <_Z10memoryGamev>:
//void memoryEndGame() {}

// glavni game loop
void memoryGame() {
	uint16_t input;
	bool started = 0;
    131e:	c0 e0       	ldi	r28, 0x00	; 0
	
	while(1) {
		input = memoryGetInput(); //svakih pola sekunde provjeri input
    1320:	0e 94 fd 07 	call	0xffa	; 0xffa <_Z14memoryGetInputv>
    1324:	28 2f       	mov	r18, r24
    1326:	30 e0       	ldi	r19, 0x00	; 0
		if (!started) { //inicijalizira stanje igre pri prvom pokretanju
    1328:	c1 11       	cpse	r28, r1
    132a:	0d c0       	rjmp	.+26     	; 0x1346 <_Z10memoryGamev+0x28>
			// sluzi kao workaroun za vrijeme - generira random seed na temelju gdje smo dodirnuli
			uint16_t x = getX();
    132c:	0e 94 63 07 	call	0xec6	; 0xec6 <_Z4getXv>
    1330:	ec 01       	movw	r28, r24
			uint16_t y = getY();
    1332:	0e 94 99 07 	call	0xf32	; 0xf32 <_Z4getYv>
			srand(x+y);
    1336:	8c 0f       	add	r24, r28
    1338:	9d 1f       	adc	r25, r29
    133a:	0e 94 47 14 	call	0x288e	; 0x288e <srand>
			memoryInit();
    133e:	0e 94 40 09 	call	0x1280	; 0x1280 <_Z10memoryInitv>
			started = 1;
    1342:	c1 e0       	ldi	r28, 0x01	; 1
    1344:	05 c0       	rjmp	.+10     	; 0x1350 <_Z10memoryGamev+0x32>
			} else if (input > 0 && started) { //ako igra vec traje i pritisnut je ekran, otvori kartu
    1346:	23 2b       	or	r18, r19
    1348:	19 f0       	breq	.+6      	; 0x1350 <_Z10memoryGamev+0x32>
    134a:	c1 11       	cpse	r28, r1
			memoryRevealCard(input);
    134c:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <_Z16memoryRevealCardh>
    1350:	2f ef       	ldi	r18, 0xFF	; 255
    1352:	8f e3       	ldi	r24, 0x3F	; 63
    1354:	9b e0       	ldi	r25, 0x0B	; 11
    1356:	21 50       	subi	r18, 0x01	; 1
    1358:	80 40       	sbci	r24, 0x00	; 0
    135a:	90 40       	sbci	r25, 0x00	; 0
    135c:	e1 f7       	brne	.-8      	; 0x1356 <_Z10memoryGamev+0x38>
    135e:	00 c0       	rjmp	.+0      	; 0x1360 <_Z10memoryGamev+0x42>
    1360:	00 00       	nop
    1362:	de cf       	rjmp	.-68     	; 0x1320 <_Z10memoryGamev+0x2>

00001364 <main>:
}

int main(void) {
	
	//T-IRQ spojen na PINB3 kao ulazni te je nizak samo pri dodiru, inace visok
	DDRB &= ~_BV(T_IRQ);
    1364:	87 b3       	in	r24, 0x17	; 23
    1366:	87 7f       	andi	r24, 0xF7	; 247
    1368:	87 bb       	out	0x17, r24	; 23

	SPI_Init();
    136a:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <SPI_Init>
	SS_Enable;
    136e:	88 b3       	in	r24, 0x18	; 24
    1370:	8f 7e       	andi	r24, 0xEF	; 239
    1372:	88 bb       	out	0x18, r24	; 24
	
	display.InitLCD(LANDSCAPE);
    1374:	61 e0       	ldi	r22, 0x01	; 1
    1376:	84 e7       	ldi	r24, 0x74	; 116
    1378:	90 e0       	ldi	r25, 0x00	; 0
    137a:	0e 94 31 0c 	call	0x1862	; 0x1862 <_ZN4UTFT7InitLCDEh>
	display.setFont(BigFont);
    137e:	62 e7       	ldi	r22, 0x72	; 114
    1380:	70 e0       	ldi	r23, 0x00	; 0
    1382:	84 e7       	ldi	r24, 0x74	; 116
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	0e 94 94 10 	call	0x2128	; 0x2128 <_ZN4UTFT7setFontEPKh>
	display.clrScr();
    138a:	84 e7       	ldi	r24, 0x74	; 116
    138c:	90 e0       	ldi	r25, 0x00	; 0
    138e:	0e 94 b3 0b 	call	0x1766	; 0x1766 <_ZN4UTFT6clrScrEv>
	
	while (1) {
		memoryGame();
    1392:	0e 94 8f 09 	call	0x131e	; 0x131e <_Z10memoryGamev>

00001396 <_GLOBAL__sub_I_display>:
	}
}
    1396:	6f ef       	ldi	r22, 0xFF	; 255
    1398:	7f ef       	ldi	r23, 0xFF	; 255
    139a:	81 e0       	ldi	r24, 0x01	; 1
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	0e 94 53 07 	call	0xea6	; 0xea6 <_Z41__static_initialization_and_destruction_0ii>
    13a2:	08 95       	ret

000013a4 <SPI_Init>:
#include "SPI_Master_H_file.h"				/* Include SPI Master header file */


void SPI_Init()								/* SPI Initialize function */
{
	DDRB |= (1<<MOSI)|(1<<SCK)|(1<<SS);		/* Make MOSI, SCK, 0th pin direction as output pins */
    13a4:	87 b3       	in	r24, 0x17	; 23
    13a6:	80 6b       	ori	r24, 0xB0	; 176
    13a8:	87 bb       	out	0x17, r24	; 23
	DDRB &= ~(1<<MISO);						/* Make MISO pin as input pin */
    13aa:	87 b3       	in	r24, 0x17	; 23
    13ac:	8f 7b       	andi	r24, 0xBF	; 191
    13ae:	87 bb       	out	0x17, r24	; 23
	PORTB |= (1<<SS);						/* Disable slave initially by making high on SS pin */
    13b0:	88 b3       	in	r24, 0x18	; 24
    13b2:	80 61       	ori	r24, 0x10	; 16
    13b4:	88 bb       	out	0x18, r24	; 24
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);	/* Enable SPI, Enable in master mode, with Fosc/16 SCK frequency */
    13b6:	81 e5       	ldi	r24, 0x51	; 81
    13b8:	8d b9       	out	0x0d, r24	; 13
	SPSR &= ~(1<<SPI2X);					/* Disable speed doubler */
    13ba:	8e b1       	in	r24, 0x0e	; 14
    13bc:	8e 7f       	andi	r24, 0xFE	; 254
    13be:	8e b9       	out	0x0e, r24	; 14
    13c0:	08 95       	ret

000013c2 <SPI_Write>:
}

void SPI_Write(char data)					/* SPI write data function */
{
	char flush_buffer;
	SPDR = data;							/* Write data to SPI data register */
    13c2:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));				/* Wait till transmission complete */
    13c4:	77 9b       	sbis	0x0e, 7	; 14
    13c6:	fe cf       	rjmp	.-4      	; 0x13c4 <SPI_Write+0x2>
	flush_buffer = SPDR;					/* Flush received data */
    13c8:	8f b1       	in	r24, 0x0f	; 15
    13ca:	08 95       	ret

000013cc <SPI_Read>:
/* Note: SPIF flag is cleared by first reading SPSR (with SPIF set) and then accessing SPDR hence flush buffer used here to access SPDR after SPSR read */
}

char SPI_Read()								/* SPI read data function */
{
	SPDR = 0xFF;
    13cc:	8f ef       	ldi	r24, 0xFF	; 255
    13ce:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));				/* Wait till reception complete */
    13d0:	77 9b       	sbis	0x0e, 7	; 14
    13d2:	fe cf       	rjmp	.-4      	; 0x13d0 <SPI_Read+0x4>
	return(SPDR);							/* return received data */
    13d4:	8f b1       	in	r24, 0x0f	; 15
}
    13d6:	08 95       	ret

000013d8 <SSD1289_init>:



void SSD1289_init()
{	
	DATA_PORT_LOW_DDR = 0xff;
    13d8:	8f ef       	ldi	r24, 0xFF	; 255
    13da:	81 bb       	out	0x11, r24	; 17
	DATA_PORT_HIGH_DDR = 0xff;
    13dc:	8a bb       	out	0x1a, r24	; 26
			
	RS_PORT_DDR |= _BV( RS_PIN);
    13de:	84 b3       	in	r24, 0x14	; 20
    13e0:	80 68       	ori	r24, 0x80	; 128
    13e2:	84 bb       	out	0x14, r24	; 20
				
	WR_PORT_DDR |= _BV(WR_PIN);
    13e4:	84 b3       	in	r24, 0x14	; 20
    13e6:	80 64       	ori	r24, 0x40	; 64
    13e8:	84 bb       	out	0x14, r24	; 20

	CS_PORT_DDR |= _BV(CS_PIN);
    13ea:	84 b3       	in	r24, 0x14	; 20
    13ec:	81 60       	ori	r24, 0x01	; 1
    13ee:	84 bb       	out	0x14, r24	; 20
		
	RD_PORT_DDR |= _BV(RD_PIN);
    13f0:	87 b3       	in	r24, 0x17	; 23
    13f2:	81 60       	ori	r24, 0x01	; 1
    13f4:	87 bb       	out	0x17, r24	; 23
	RD_PORT |= _BV(RD_PIN);
    13f6:	88 b3       	in	r24, 0x18	; 24
    13f8:	81 60       	ori	r24, 0x01	; 1
    13fa:	88 bb       	out	0x18, r24	; 24
		
	RESET_PORT_DDR |= _BV(RESET_PIN);
    13fc:	84 b3       	in	r24, 0x14	; 20
    13fe:	82 60       	ori	r24, 0x02	; 2
    1400:	84 bb       	out	0x14, r24	; 20
		
	BACK_LIGHT_PORT |= _BV(BACK_LIGHT_PIN);
    1402:	88 b3       	in	r24, 0x18	; 24
    1404:	82 60       	ori	r24, 0x02	; 2
    1406:	88 bb       	out	0x18, r24	; 24
	
	BACK_LIGHT_DDR |= _BV(BACK_LIGHT_PIN);			
    1408:	87 b3       	in	r24, 0x17	; 23
    140a:	82 60       	ori	r24, 0x02	; 2
    140c:	87 bb       	out	0x17, r24	; 23
	
	sbi(RESET_PORT, RESET_PIN);
    140e:	85 b3       	in	r24, 0x15	; 21
    1410:	82 60       	ori	r24, 0x02	; 2
    1412:	85 bb       	out	0x15, r24	; 21
    1414:	8f ef       	ldi	r24, 0xFF	; 255
    1416:	93 e2       	ldi	r25, 0x23	; 35
    1418:	01 97       	sbiw	r24, 0x01	; 1
    141a:	f1 f7       	brne	.-4      	; 0x1418 <SSD1289_init+0x40>
    141c:	00 c0       	rjmp	.+0      	; 0x141e <SSD1289_init+0x46>
    141e:	00 00       	nop
	_delay_ms(5);
	cbi(RESET_PORT, RESET_PIN);
    1420:	85 b3       	in	r24, 0x15	; 21
    1422:	8d 7f       	andi	r24, 0xFD	; 253
    1424:	85 bb       	out	0x15, r24	; 21
    1426:	8f ef       	ldi	r24, 0xFF	; 255
    1428:	9b e6       	ldi	r25, 0x6B	; 107
    142a:	01 97       	sbiw	r24, 0x01	; 1
    142c:	f1 f7       	brne	.-4      	; 0x142a <SSD1289_init+0x52>
    142e:	00 c0       	rjmp	.+0      	; 0x1430 <SSD1289_init+0x58>
    1430:	00 00       	nop
	_delay_ms(15);
	sbi(RESET_PORT, RESET_PIN);
    1432:	85 b3       	in	r24, 0x15	; 21
    1434:	82 60       	ori	r24, 0x02	; 2
    1436:	85 bb       	out	0x15, r24	; 21
    1438:	8f ef       	ldi	r24, 0xFF	; 255
    143a:	9b e6       	ldi	r25, 0x6B	; 107
    143c:	01 97       	sbiw	r24, 0x01	; 1
    143e:	f1 f7       	brne	.-4      	; 0x143c <SSD1289_init+0x64>
    1440:	00 c0       	rjmp	.+0      	; 0x1442 <SSD1289_init+0x6a>
    1442:	00 00       	nop
	_delay_ms(15);

	cbi(CS_PORT, CS_PIN);
    1444:	85 b3       	in	r24, 0x15	; 21
    1446:	8e 7f       	andi	r24, 0xFE	; 254
    1448:	85 bb       	out	0x15, r24	; 21

	LCD_Write_COM_DATA(0x00,0x0001);
    144a:	61 e0       	ldi	r22, 0x01	; 1
    144c:	70 e0       	ldi	r23, 0x00	; 0
    144e:	80 e0       	ldi	r24, 0x00	; 0
    1450:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x03,0xA8A4);
    1454:	64 ea       	ldi	r22, 0xA4	; 164
    1456:	78 ea       	ldi	r23, 0xA8	; 168
    1458:	83 e0       	ldi	r24, 0x03	; 3
    145a:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0C,0x0000);
    145e:	60 e0       	ldi	r22, 0x00	; 0
    1460:	70 e0       	ldi	r23, 0x00	; 0
    1462:	8c e0       	ldi	r24, 0x0C	; 12
    1464:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0D,0x080C);
    1468:	6c e0       	ldi	r22, 0x0C	; 12
    146a:	78 e0       	ldi	r23, 0x08	; 8
    146c:	8d e0       	ldi	r24, 0x0D	; 13
    146e:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0E,0x2B00);
    1472:	60 e0       	ldi	r22, 0x00	; 0
    1474:	7b e2       	ldi	r23, 0x2B	; 43
    1476:	8e e0       	ldi	r24, 0x0E	; 14
    1478:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x1E,0x00B7);
    147c:	67 eb       	ldi	r22, 0xB7	; 183
    147e:	70 e0       	ldi	r23, 0x00	; 0
    1480:	8e e1       	ldi	r24, 0x1E	; 30
    1482:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x01,0x2B3F);
    1486:	6f e3       	ldi	r22, 0x3F	; 63
    1488:	7b e2       	ldi	r23, 0x2B	; 43
    148a:	81 e0       	ldi	r24, 0x01	; 1
    148c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x02,0x0600);
    1490:	60 e0       	ldi	r22, 0x00	; 0
    1492:	76 e0       	ldi	r23, 0x06	; 6
    1494:	82 e0       	ldi	r24, 0x02	; 2
    1496:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x10,0x0000);
    149a:	60 e0       	ldi	r22, 0x00	; 0
    149c:	70 e0       	ldi	r23, 0x00	; 0
    149e:	80 e1       	ldi	r24, 0x10	; 16
    14a0:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x11,0x6070);
    14a4:	60 e7       	ldi	r22, 0x70	; 112
    14a6:	70 e6       	ldi	r23, 0x60	; 96
    14a8:	81 e1       	ldi	r24, 0x11	; 17
    14aa:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x05,0x0000);
    14ae:	60 e0       	ldi	r22, 0x00	; 0
    14b0:	70 e0       	ldi	r23, 0x00	; 0
    14b2:	85 e0       	ldi	r24, 0x05	; 5
    14b4:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x06,0x0000);
    14b8:	60 e0       	ldi	r22, 0x00	; 0
    14ba:	70 e0       	ldi	r23, 0x00	; 0
    14bc:	86 e0       	ldi	r24, 0x06	; 6
    14be:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x16,0xEF1C);
    14c2:	6c e1       	ldi	r22, 0x1C	; 28
    14c4:	7f ee       	ldi	r23, 0xEF	; 239
    14c6:	86 e1       	ldi	r24, 0x16	; 22
    14c8:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x17,0x0003);
    14cc:	63 e0       	ldi	r22, 0x03	; 3
    14ce:	70 e0       	ldi	r23, 0x00	; 0
    14d0:	87 e1       	ldi	r24, 0x17	; 23
    14d2:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x07,0x0233);
    14d6:	63 e3       	ldi	r22, 0x33	; 51
    14d8:	72 e0       	ldi	r23, 0x02	; 2
    14da:	87 e0       	ldi	r24, 0x07	; 7
    14dc:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0B,0x0000);
    14e0:	60 e0       	ldi	r22, 0x00	; 0
    14e2:	70 e0       	ldi	r23, 0x00	; 0
    14e4:	8b e0       	ldi	r24, 0x0B	; 11
    14e6:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0F,0x0000);
    14ea:	60 e0       	ldi	r22, 0x00	; 0
    14ec:	70 e0       	ldi	r23, 0x00	; 0
    14ee:	8f e0       	ldi	r24, 0x0F	; 15
    14f0:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x41,0x0000);
    14f4:	60 e0       	ldi	r22, 0x00	; 0
    14f6:	70 e0       	ldi	r23, 0x00	; 0
    14f8:	81 e4       	ldi	r24, 0x41	; 65
    14fa:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x42,0x0000);
    14fe:	60 e0       	ldi	r22, 0x00	; 0
    1500:	70 e0       	ldi	r23, 0x00	; 0
    1502:	82 e4       	ldi	r24, 0x42	; 66
    1504:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x48,0x0000);
    1508:	60 e0       	ldi	r22, 0x00	; 0
    150a:	70 e0       	ldi	r23, 0x00	; 0
    150c:	88 e4       	ldi	r24, 0x48	; 72
    150e:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x49,0x013F);
    1512:	6f e3       	ldi	r22, 0x3F	; 63
    1514:	71 e0       	ldi	r23, 0x01	; 1
    1516:	89 e4       	ldi	r24, 0x49	; 73
    1518:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4A,0x0000);
    151c:	60 e0       	ldi	r22, 0x00	; 0
    151e:	70 e0       	ldi	r23, 0x00	; 0
    1520:	8a e4       	ldi	r24, 0x4A	; 74
    1522:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4B,0x0000);
    1526:	60 e0       	ldi	r22, 0x00	; 0
    1528:	70 e0       	ldi	r23, 0x00	; 0
    152a:	8b e4       	ldi	r24, 0x4B	; 75
    152c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x44,0xEF00);
    1530:	60 e0       	ldi	r22, 0x00	; 0
    1532:	7f ee       	ldi	r23, 0xEF	; 239
    1534:	84 e4       	ldi	r24, 0x44	; 68
    1536:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x45,0x0000);
    153a:	60 e0       	ldi	r22, 0x00	; 0
    153c:	70 e0       	ldi	r23, 0x00	; 0
    153e:	85 e4       	ldi	r24, 0x45	; 69
    1540:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x46,0x013F);
    1544:	6f e3       	ldi	r22, 0x3F	; 63
    1546:	71 e0       	ldi	r23, 0x01	; 1
    1548:	86 e4       	ldi	r24, 0x46	; 70
    154a:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x30,0x0707);
    154e:	67 e0       	ldi	r22, 0x07	; 7
    1550:	77 e0       	ldi	r23, 0x07	; 7
    1552:	80 e3       	ldi	r24, 0x30	; 48
    1554:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x31,0x0204);
    1558:	64 e0       	ldi	r22, 0x04	; 4
    155a:	72 e0       	ldi	r23, 0x02	; 2
    155c:	81 e3       	ldi	r24, 0x31	; 49
    155e:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x32,0x0204);
    1562:	64 e0       	ldi	r22, 0x04	; 4
    1564:	72 e0       	ldi	r23, 0x02	; 2
    1566:	82 e3       	ldi	r24, 0x32	; 50
    1568:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x33,0x0502);
    156c:	62 e0       	ldi	r22, 0x02	; 2
    156e:	75 e0       	ldi	r23, 0x05	; 5
    1570:	83 e3       	ldi	r24, 0x33	; 51
    1572:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x34,0x0507);
    1576:	67 e0       	ldi	r22, 0x07	; 7
    1578:	75 e0       	ldi	r23, 0x05	; 5
    157a:	84 e3       	ldi	r24, 0x34	; 52
    157c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x35,0x0204);
    1580:	64 e0       	ldi	r22, 0x04	; 4
    1582:	72 e0       	ldi	r23, 0x02	; 2
    1584:	85 e3       	ldi	r24, 0x35	; 53
    1586:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x36,0x0204);
    158a:	64 e0       	ldi	r22, 0x04	; 4
    158c:	72 e0       	ldi	r23, 0x02	; 2
    158e:	86 e3       	ldi	r24, 0x36	; 54
    1590:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x37,0x0502);
    1594:	62 e0       	ldi	r22, 0x02	; 2
    1596:	75 e0       	ldi	r23, 0x05	; 5
    1598:	87 e3       	ldi	r24, 0x37	; 55
    159a:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x3A,0x0302);
    159e:	62 e0       	ldi	r22, 0x02	; 2
    15a0:	73 e0       	ldi	r23, 0x03	; 3
    15a2:	8a e3       	ldi	r24, 0x3A	; 58
    15a4:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x3B,0x0302);
    15a8:	62 e0       	ldi	r22, 0x02	; 2
    15aa:	73 e0       	ldi	r23, 0x03	; 3
    15ac:	8b e3       	ldi	r24, 0x3B	; 59
    15ae:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x23,0x0000);
    15b2:	60 e0       	ldi	r22, 0x00	; 0
    15b4:	70 e0       	ldi	r23, 0x00	; 0
    15b6:	83 e2       	ldi	r24, 0x23	; 35
    15b8:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x24,0x0000);
    15bc:	60 e0       	ldi	r22, 0x00	; 0
    15be:	70 e0       	ldi	r23, 0x00	; 0
    15c0:	84 e2       	ldi	r24, 0x24	; 36
    15c2:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x25,0x8000);
    15c6:	60 e0       	ldi	r22, 0x00	; 0
    15c8:	70 e8       	ldi	r23, 0x80	; 128
    15ca:	85 e2       	ldi	r24, 0x25	; 37
    15cc:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4f,0x0000);
    15d0:	60 e0       	ldi	r22, 0x00	; 0
    15d2:	70 e0       	ldi	r23, 0x00	; 0
    15d4:	8f e4       	ldi	r24, 0x4F	; 79
    15d6:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4e,0x0000);
    15da:	60 e0       	ldi	r22, 0x00	; 0
    15dc:	70 e0       	ldi	r23, 0x00	; 0
    15de:	8e e4       	ldi	r24, 0x4E	; 78
    15e0:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM(0x22);
    15e4:	82 e2       	ldi	r24, 0x22	; 34
    15e6:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>


	sbi(CS_PORT, CS_PIN);
    15ea:	85 b3       	in	r24, 0x15	; 21
    15ec:	81 60       	ori	r24, 0x01	; 1
    15ee:	85 bb       	out	0x15, r24	; 21
    15f0:	08 95       	ret

000015f2 <_ZN4UTFTC1Ev>:
		}
		st[c2+f]=0;
	}

	print(st,x,y);
}
    15f2:	4f ee       	ldi	r20, 0xEF	; 239
    15f4:	50 e0       	ldi	r21, 0x00	; 0
    15f6:	60 e0       	ldi	r22, 0x00	; 0
    15f8:	70 e0       	ldi	r23, 0x00	; 0
    15fa:	fc 01       	movw	r30, r24
    15fc:	45 83       	std	Z+5, r20	; 0x05
    15fe:	56 83       	std	Z+6, r21	; 0x06
    1600:	67 83       	std	Z+7, r22	; 0x07
    1602:	70 87       	std	Z+8, r23	; 0x08
    1604:	4f e3       	ldi	r20, 0x3F	; 63
    1606:	51 e0       	ldi	r21, 0x01	; 1
    1608:	60 e0       	ldi	r22, 0x00	; 0
    160a:	70 e0       	ldi	r23, 0x00	; 0
    160c:	41 87       	std	Z+9, r20	; 0x09
    160e:	52 87       	std	Z+10, r21	; 0x0a
    1610:	63 87       	std	Z+11, r22	; 0x0b
    1612:	74 87       	std	Z+12, r23	; 0x0c
    1614:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <SSD1289_init>
    1618:	08 95       	ret

0000161a <_ZN4UTFT5setXYEjjjj>:
    161a:	ef 92       	push	r14
    161c:	ff 92       	push	r15
    161e:	0f 93       	push	r16
    1620:	1f 93       	push	r17
    1622:	cf 93       	push	r28
    1624:	df 93       	push	r29
    1626:	eb 01       	movw	r28, r22
    1628:	e4 2e       	mov	r14, r20
    162a:	f5 2e       	mov	r15, r21
    162c:	fc 01       	movw	r30, r24
    162e:	44 81       	ldd	r20, Z+4	; 0x04
    1630:	41 30       	cpi	r20, 0x01	; 1
    1632:	89 f4       	brne	.+34     	; 0x1656 <_ZN4UTFT5setXYEjjjj+0x3c>
    1634:	81 85       	ldd	r24, Z+9	; 0x09
    1636:	92 85       	ldd	r25, Z+10	; 0x0a
    1638:	a3 85       	ldd	r26, Z+11	; 0x0b
    163a:	b4 85       	ldd	r27, Z+12	; 0x0c
    163c:	ac 01       	movw	r20, r24
    163e:	46 1b       	sub	r20, r22
    1640:	57 0b       	sbc	r21, r23
    1642:	82 1b       	sub	r24, r18
    1644:	93 0b       	sbc	r25, r19
    1646:	20 2f       	mov	r18, r16
    1648:	31 2f       	mov	r19, r17
    164a:	04 2f       	mov	r16, r20
    164c:	15 2f       	mov	r17, r21
    164e:	ce 2d       	mov	r28, r14
    1650:	df 2d       	mov	r29, r15
    1652:	e8 2e       	mov	r14, r24
    1654:	f9 2e       	mov	r15, r25
    1656:	32 2f       	mov	r19, r18
    1658:	22 27       	eor	r18, r18
    165a:	be 01       	movw	r22, r28
    165c:	62 0f       	add	r22, r18
    165e:	73 1f       	adc	r23, r19
    1660:	84 e4       	ldi	r24, 0x44	; 68
    1662:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    1666:	6e 2d       	mov	r22, r14
    1668:	7f 2d       	mov	r23, r15
    166a:	85 e4       	ldi	r24, 0x45	; 69
    166c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    1670:	60 2f       	mov	r22, r16
    1672:	71 2f       	mov	r23, r17
    1674:	86 e4       	ldi	r24, 0x46	; 70
    1676:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    167a:	be 01       	movw	r22, r28
    167c:	8e e4       	ldi	r24, 0x4E	; 78
    167e:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    1682:	6e 2d       	mov	r22, r14
    1684:	7f 2d       	mov	r23, r15
    1686:	8f e4       	ldi	r24, 0x4F	; 79
    1688:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    168c:	82 e2       	ldi	r24, 0x22	; 34
    168e:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>
    1692:	85 b3       	in	r24, 0x15	; 21
    1694:	80 68       	ori	r24, 0x80	; 128
    1696:	85 bb       	out	0x15, r24	; 21
    1698:	df 91       	pop	r29
    169a:	cf 91       	pop	r28
    169c:	1f 91       	pop	r17
    169e:	0f 91       	pop	r16
    16a0:	ff 90       	pop	r15
    16a2:	ef 90       	pop	r14
    16a4:	08 95       	ret

000016a6 <_ZN4UTFT8fillRectEiiii>:
    16a6:	8f 92       	push	r8
    16a8:	9f 92       	push	r9
    16aa:	af 92       	push	r10
    16ac:	bf 92       	push	r11
    16ae:	cf 92       	push	r12
    16b0:	df 92       	push	r13
    16b2:	ef 92       	push	r14
    16b4:	ff 92       	push	r15
    16b6:	0f 93       	push	r16
    16b8:	1f 93       	push	r17
    16ba:	cf 93       	push	r28
    16bc:	df 93       	push	r29
    16be:	4c 01       	movw	r8, r24
    16c0:	5b 01       	movw	r10, r22
    16c2:	7a 01       	movw	r14, r20
    16c4:	69 01       	movw	r12, r18
    16c6:	e8 01       	movw	r28, r16
    16c8:	26 17       	cp	r18, r22
    16ca:	37 07       	cpc	r19, r23
    16cc:	24 f4       	brge	.+8      	; 0x16d6 <_ZN4UTFT8fillRectEiiii+0x30>
    16ce:	8b 2d       	mov	r24, r11
    16d0:	59 01       	movw	r10, r18
    16d2:	c6 2e       	mov	r12, r22
    16d4:	d8 2e       	mov	r13, r24
    16d6:	ce 15       	cp	r28, r14
    16d8:	df 05       	cpc	r29, r15
    16da:	2c f4       	brge	.+10     	; 0x16e6 <_ZN4UTFT8fillRectEiiii+0x40>
    16dc:	9e 2d       	mov	r25, r14
    16de:	8f 2d       	mov	r24, r15
    16e0:	7e 01       	movw	r14, r28
    16e2:	c9 2f       	mov	r28, r25
    16e4:	d8 2f       	mov	r29, r24
    16e6:	85 b3       	in	r24, 0x15	; 21
    16e8:	8e 7f       	andi	r24, 0xFE	; 254
    16ea:	85 bb       	out	0x15, r24	; 21
    16ec:	8e 01       	movw	r16, r28
    16ee:	96 01       	movw	r18, r12
    16f0:	a7 01       	movw	r20, r14
    16f2:	b5 01       	movw	r22, r10
    16f4:	c4 01       	movw	r24, r8
    16f6:	0e 94 0d 0b 	call	0x161a	; 0x161a <_ZN4UTFT5setXYEjjjj>
    16fa:	f4 01       	movw	r30, r8
    16fc:	80 81       	ld	r24, Z
    16fe:	8b bb       	out	0x1b, r24	; 27
    1700:	81 81       	ldd	r24, Z+1	; 0x01
    1702:	82 bb       	out	0x12, r24	; 18
    1704:	96 01       	movw	r18, r12
    1706:	2a 19       	sub	r18, r10
    1708:	3b 09       	sbc	r19, r11
    170a:	c9 01       	movw	r24, r18
    170c:	33 0f       	add	r19, r19
    170e:	aa 0b       	sbc	r26, r26
    1710:	bb 0b       	sbc	r27, r27
    1712:	9c 01       	movw	r18, r24
    1714:	ad 01       	movw	r20, r26
    1716:	2f 5f       	subi	r18, 0xFF	; 255
    1718:	3f 4f       	sbci	r19, 0xFF	; 255
    171a:	4f 4f       	sbci	r20, 0xFF	; 255
    171c:	5f 4f       	sbci	r21, 0xFF	; 255
    171e:	be 01       	movw	r22, r28
    1720:	6e 19       	sub	r22, r14
    1722:	7f 09       	sbc	r23, r15
    1724:	cb 01       	movw	r24, r22
    1726:	77 0f       	add	r23, r23
    1728:	aa 0b       	sbc	r26, r26
    172a:	bb 0b       	sbc	r27, r27
    172c:	bc 01       	movw	r22, r24
    172e:	cd 01       	movw	r24, r26
    1730:	6f 5f       	subi	r22, 0xFF	; 255
    1732:	7f 4f       	sbci	r23, 0xFF	; 255
    1734:	8f 4f       	sbci	r24, 0xFF	; 255
    1736:	9f 4f       	sbci	r25, 0xFF	; 255
    1738:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__mulsi3>
    173c:	0e 94 e5 06 	call	0xdca	; 0xdca <fastfill>
    1740:	8f ef       	ldi	r24, 0xFF	; 255
    1742:	82 bb       	out	0x12, r24	; 18
    1744:	8b bb       	out	0x1b, r24	; 27
    1746:	85 b3       	in	r24, 0x15	; 21
    1748:	8e 7f       	andi	r24, 0xFE	; 254
    174a:	85 bb       	out	0x15, r24	; 21
    174c:	df 91       	pop	r29
    174e:	cf 91       	pop	r28
    1750:	1f 91       	pop	r17
    1752:	0f 91       	pop	r16
    1754:	ff 90       	pop	r15
    1756:	ef 90       	pop	r14
    1758:	df 90       	pop	r13
    175a:	cf 90       	pop	r12
    175c:	bf 90       	pop	r11
    175e:	af 90       	pop	r10
    1760:	9f 90       	pop	r9
    1762:	8f 90       	pop	r8
    1764:	08 95       	ret

00001766 <_ZN4UTFT6clrScrEv>:
    1766:	85 b3       	in	r24, 0x15	; 21
    1768:	8e 7f       	andi	r24, 0xFE	; 254
    176a:	85 bb       	out	0x15, r24	; 21
    176c:	60 e0       	ldi	r22, 0x00	; 0
    176e:	7f ee       	ldi	r23, 0xEF	; 239
    1770:	84 e4       	ldi	r24, 0x44	; 68
    1772:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    1776:	60 e0       	ldi	r22, 0x00	; 0
    1778:	70 e0       	ldi	r23, 0x00	; 0
    177a:	85 e4       	ldi	r24, 0x45	; 69
    177c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    1780:	6f e3       	ldi	r22, 0x3F	; 63
    1782:	71 e0       	ldi	r23, 0x01	; 1
    1784:	86 e4       	ldi	r24, 0x46	; 70
    1786:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    178a:	60 e0       	ldi	r22, 0x00	; 0
    178c:	70 e0       	ldi	r23, 0x00	; 0
    178e:	8e e4       	ldi	r24, 0x4E	; 78
    1790:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    1794:	60 e0       	ldi	r22, 0x00	; 0
    1796:	70 e0       	ldi	r23, 0x00	; 0
    1798:	8f e4       	ldi	r24, 0x4F	; 79
    179a:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    179e:	68 e7       	ldi	r22, 0x78	; 120
    17a0:	70 e6       	ldi	r23, 0x60	; 96
    17a2:	81 e1       	ldi	r24, 0x11	; 17
    17a4:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    17a8:	82 e2       	ldi	r24, 0x22	; 34
    17aa:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>
    17ae:	85 b3       	in	r24, 0x15	; 21
    17b0:	80 68       	ori	r24, 0x80	; 128
    17b2:	85 bb       	out	0x15, r24	; 21
    17b4:	12 ba       	out	0x12, r1	; 18
    17b6:	1b ba       	out	0x1b, r1	; 27
    17b8:	60 e0       	ldi	r22, 0x00	; 0
    17ba:	7c e2       	ldi	r23, 0x2C	; 44
    17bc:	81 e0       	ldi	r24, 0x01	; 1
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	0e 94 e5 06 	call	0xdca	; 0xdca <fastfill>
    17c4:	8f ef       	ldi	r24, 0xFF	; 255
    17c6:	82 bb       	out	0x12, r24	; 18
    17c8:	8b bb       	out	0x1b, r24	; 27
    17ca:	85 b3       	in	r24, 0x15	; 21
    17cc:	8e 7f       	andi	r24, 0xFE	; 254
    17ce:	85 bb       	out	0x15, r24	; 21
    17d0:	08 95       	ret

000017d2 <_ZN4UTFT8setColorEhhh>:
    17d2:	e4 2f       	mov	r30, r20
    17d4:	f0 e0       	ldi	r31, 0x00	; 0
    17d6:	f5 95       	asr	r31
    17d8:	e7 95       	ror	r30
    17da:	f5 95       	asr	r31
    17dc:	e7 95       	ror	r30
    17de:	f5 95       	asr	r31
    17e0:	e7 95       	ror	r30
    17e2:	f5 95       	asr	r31
    17e4:	e7 95       	ror	r30
    17e6:	f5 95       	asr	r31
    17e8:	e7 95       	ror	r30
    17ea:	68 7f       	andi	r22, 0xF8	; 248
    17ec:	e6 2b       	or	r30, r22
    17ee:	dc 01       	movw	r26, r24
    17f0:	ec 93       	st	X, r30
    17f2:	4c 71       	andi	r20, 0x1C	; 28
    17f4:	50 e0       	ldi	r21, 0x00	; 0
    17f6:	44 0f       	add	r20, r20
    17f8:	55 1f       	adc	r21, r21
    17fa:	44 0f       	add	r20, r20
    17fc:	55 1f       	adc	r21, r21
    17fe:	44 0f       	add	r20, r20
    1800:	55 1f       	adc	r21, r21
    1802:	30 e0       	ldi	r19, 0x00	; 0
    1804:	35 95       	asr	r19
    1806:	27 95       	ror	r18
    1808:	35 95       	asr	r19
    180a:	27 95       	ror	r18
    180c:	35 95       	asr	r19
    180e:	27 95       	ror	r18
    1810:	42 2b       	or	r20, r18
    1812:	11 96       	adiw	r26, 0x01	; 1
    1814:	4c 93       	st	X, r20
    1816:	08 95       	ret

00001818 <_ZN4UTFT12setBackColorEhhh>:
    1818:	e4 2f       	mov	r30, r20
    181a:	f0 e0       	ldi	r31, 0x00	; 0
    181c:	f5 95       	asr	r31
    181e:	e7 95       	ror	r30
    1820:	f5 95       	asr	r31
    1822:	e7 95       	ror	r30
    1824:	f5 95       	asr	r31
    1826:	e7 95       	ror	r30
    1828:	f5 95       	asr	r31
    182a:	e7 95       	ror	r30
    182c:	f5 95       	asr	r31
    182e:	e7 95       	ror	r30
    1830:	68 7f       	andi	r22, 0xF8	; 248
    1832:	e6 2b       	or	r30, r22
    1834:	dc 01       	movw	r26, r24
    1836:	12 96       	adiw	r26, 0x02	; 2
    1838:	ec 93       	st	X, r30
    183a:	12 97       	sbiw	r26, 0x02	; 2
    183c:	4c 71       	andi	r20, 0x1C	; 28
    183e:	50 e0       	ldi	r21, 0x00	; 0
    1840:	44 0f       	add	r20, r20
    1842:	55 1f       	adc	r21, r21
    1844:	44 0f       	add	r20, r20
    1846:	55 1f       	adc	r21, r21
    1848:	44 0f       	add	r20, r20
    184a:	55 1f       	adc	r21, r21
    184c:	30 e0       	ldi	r19, 0x00	; 0
    184e:	35 95       	asr	r19
    1850:	27 95       	ror	r18
    1852:	35 95       	asr	r19
    1854:	27 95       	ror	r18
    1856:	35 95       	asr	r19
    1858:	27 95       	ror	r18
    185a:	42 2b       	or	r20, r18
    185c:	13 96       	adiw	r26, 0x03	; 3
    185e:	4c 93       	st	X, r20
    1860:	08 95       	ret

00001862 <_ZN4UTFT7InitLCDEh>:
    1862:	cf 93       	push	r28
    1864:	df 93       	push	r29
    1866:	ec 01       	movw	r28, r24
    1868:	6c 83       	std	Y+4, r22	; 0x04
    186a:	2f ef       	ldi	r18, 0xFF	; 255
    186c:	4f ef       	ldi	r20, 0xFF	; 255
    186e:	6f ef       	ldi	r22, 0xFF	; 255
    1870:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <_ZN4UTFT8setColorEhhh>
    1874:	20 e0       	ldi	r18, 0x00	; 0
    1876:	40 e0       	ldi	r20, 0x00	; 0
    1878:	60 e0       	ldi	r22, 0x00	; 0
    187a:	ce 01       	movw	r24, r28
    187c:	0e 94 0c 0c 	call	0x1818	; 0x1818 <_ZN4UTFT12setBackColorEhhh>
    1880:	1e 86       	std	Y+14, r1	; 0x0e
    1882:	1d 86       	std	Y+13, r1	; 0x0d
    1884:	df 91       	pop	r29
    1886:	cf 91       	pop	r28
    1888:	08 95       	ret

0000188a <_ZN4UTFT8setPixelEj>:
    188a:	87 2f       	mov	r24, r23
    188c:	0e 94 35 07 	call	0xe6a	; 0xe6a <LCD_Write_DATA>
    1890:	08 95       	ret

00001892 <_ZN4UTFT9printCharEhii>:
    1892:	af 92       	push	r10
    1894:	bf 92       	push	r11
    1896:	cf 92       	push	r12
    1898:	df 92       	push	r13
    189a:	ef 92       	push	r14
    189c:	ff 92       	push	r15
    189e:	0f 93       	push	r16
    18a0:	1f 93       	push	r17
    18a2:	cf 93       	push	r28
    18a4:	df 93       	push	r29
    18a6:	ec 01       	movw	r28, r24
    18a8:	7a 01       	movw	r14, r20
    18aa:	89 01       	movw	r16, r18
    18ac:	85 b3       	in	r24, 0x15	; 21
    18ae:	8e 7f       	andi	r24, 0xFE	; 254
    18b0:	85 bb       	out	0x15, r24	; 21
    18b2:	8c 81       	ldd	r24, Y+4	; 0x04
    18b4:	81 11       	cpse	r24, r1
    18b6:	69 c0       	rjmp	.+210    	; 0x198a <_ZN4UTFT9printCharEhii+0xf8>
    18b8:	29 89       	ldd	r18, Y+17	; 0x11
    18ba:	86 2f       	mov	r24, r22
    18bc:	90 e0       	ldi	r25, 0x00	; 0
    18be:	82 1b       	sub	r24, r18
    18c0:	91 09       	sbc	r25, r1
    18c2:	4f 85       	ldd	r20, Y+15	; 0x0f
    18c4:	54 2f       	mov	r21, r20
    18c6:	56 95       	lsr	r21
    18c8:	56 95       	lsr	r21
    18ca:	56 95       	lsr	r21
    18cc:	28 89       	ldd	r18, Y+16	; 0x10
    18ce:	30 e0       	ldi	r19, 0x00	; 0
    18d0:	52 9f       	mul	r21, r18
    18d2:	b0 01       	movw	r22, r0
    18d4:	53 9f       	mul	r21, r19
    18d6:	70 0d       	add	r23, r0
    18d8:	11 24       	eor	r1, r1
    18da:	86 9f       	mul	r24, r22
    18dc:	60 01       	movw	r12, r0
    18de:	87 9f       	mul	r24, r23
    18e0:	d0 0c       	add	r13, r0
    18e2:	96 9f       	mul	r25, r22
    18e4:	d0 0c       	add	r13, r0
    18e6:	11 24       	eor	r1, r1
    18e8:	84 e0       	ldi	r24, 0x04	; 4
    18ea:	c8 0e       	add	r12, r24
    18ec:	d1 1c       	adc	r13, r1
    18ee:	c7 01       	movw	r24, r14
    18f0:	84 0f       	add	r24, r20
    18f2:	91 1d       	adc	r25, r1
    18f4:	20 0f       	add	r18, r16
    18f6:	31 1f       	adc	r19, r17
    18f8:	59 01       	movw	r10, r18
    18fa:	41 e0       	ldi	r20, 0x01	; 1
    18fc:	a4 1a       	sub	r10, r20
    18fe:	b1 08       	sbc	r11, r1
    1900:	60 e0       	ldi	r22, 0x00	; 0
    1902:	70 e0       	ldi	r23, 0x00	; 0
    1904:	7f ef       	ldi	r23, 0xFF	; 255
    1906:	78 0f       	add	r23, r24
    1908:	6e 0d       	add	r22, r14
    190a:	7f 1d       	adc	r23, r15
    190c:	84 e4       	ldi	r24, 0x44	; 68
    190e:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    1912:	b8 01       	movw	r22, r16
    1914:	85 e4       	ldi	r24, 0x45	; 69
    1916:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    191a:	b5 01       	movw	r22, r10
    191c:	86 e4       	ldi	r24, 0x46	; 70
    191e:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    1922:	b7 01       	movw	r22, r14
    1924:	8e e4       	ldi	r24, 0x4E	; 78
    1926:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    192a:	b8 01       	movw	r22, r16
    192c:	8f e4       	ldi	r24, 0x4F	; 79
    192e:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    1932:	60 e7       	ldi	r22, 0x70	; 112
    1934:	70 e6       	ldi	r23, 0x60	; 96
    1936:	81 e1       	ldi	r24, 0x11	; 17
    1938:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    193c:	82 e2       	ldi	r24, 0x22	; 34
    193e:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>
    1942:	85 b3       	in	r24, 0x15	; 21
    1944:	80 68       	ori	r24, 0x80	; 128
    1946:	85 bb       	out	0x15, r24	; 21
    1948:	2a 81       	ldd	r18, Y+2	; 0x02
    194a:	30 e0       	ldi	r19, 0x00	; 0
    194c:	32 2f       	mov	r19, r18
    194e:	22 27       	eor	r18, r18
    1950:	8b 81       	ldd	r24, Y+3	; 0x03
    1952:	28 2b       	or	r18, r24
    1954:	48 81       	ld	r20, Y
    1956:	50 e0       	ldi	r21, 0x00	; 0
    1958:	54 2f       	mov	r21, r20
    195a:	44 27       	eor	r20, r20
    195c:	89 81       	ldd	r24, Y+1	; 0x01
    195e:	48 2b       	or	r20, r24
    1960:	6d 85       	ldd	r22, Y+13	; 0x0d
    1962:	7e 85       	ldd	r23, Y+14	; 0x0e
    1964:	6c 0d       	add	r22, r12
    1966:	7d 1d       	adc	r23, r13
    1968:	88 89       	ldd	r24, Y+16	; 0x10
    196a:	9f 85       	ldd	r25, Y+15	; 0x0f
    196c:	89 9f       	mul	r24, r25
    196e:	c0 01       	movw	r24, r0
    1970:	11 24       	eor	r1, r1
    1972:	99 23       	and	r25, r25
    1974:	0c f4       	brge	.+2      	; 0x1978 <_ZN4UTFT9printCharEhii+0xe6>
    1976:	07 96       	adiw	r24, 0x07	; 7
    1978:	95 95       	asr	r25
    197a:	87 95       	ror	r24
    197c:	95 95       	asr	r25
    197e:	87 95       	ror	r24
    1980:	95 95       	asr	r25
    1982:	87 95       	ror	r24
    1984:	0e 94 56 06 	call	0xcac	; 0xcac <fastbitmap_1bit>
    1988:	6f c0       	rjmp	.+222    	; 0x1a68 <_ZN4UTFT9printCharEhii+0x1d6>
    198a:	29 89       	ldd	r18, Y+17	; 0x11
    198c:	86 2f       	mov	r24, r22
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	82 1b       	sub	r24, r18
    1992:	91 09       	sbc	r25, r1
    1994:	4f 85       	ldd	r20, Y+15	; 0x0f
    1996:	54 2f       	mov	r21, r20
    1998:	56 95       	lsr	r21
    199a:	56 95       	lsr	r21
    199c:	56 95       	lsr	r21
    199e:	28 89       	ldd	r18, Y+16	; 0x10
    19a0:	30 e0       	ldi	r19, 0x00	; 0
    19a2:	52 9f       	mul	r21, r18
    19a4:	b0 01       	movw	r22, r0
    19a6:	53 9f       	mul	r21, r19
    19a8:	70 0d       	add	r23, r0
    19aa:	11 24       	eor	r1, r1
    19ac:	86 9f       	mul	r24, r22
    19ae:	60 01       	movw	r12, r0
    19b0:	87 9f       	mul	r24, r23
    19b2:	d0 0c       	add	r13, r0
    19b4:	96 9f       	mul	r25, r22
    19b6:	d0 0c       	add	r13, r0
    19b8:	11 24       	eor	r1, r1
    19ba:	84 e0       	ldi	r24, 0x04	; 4
    19bc:	c8 0e       	add	r12, r24
    19be:	d1 1c       	adc	r13, r1
    19c0:	c7 01       	movw	r24, r14
    19c2:	84 0f       	add	r24, r20
    19c4:	91 1d       	adc	r25, r1
    19c6:	01 97       	sbiw	r24, 0x01	; 1
    19c8:	20 0f       	add	r18, r16
    19ca:	31 1f       	adc	r19, r17
    19cc:	49 85       	ldd	r20, Y+9	; 0x09
    19ce:	5a 85       	ldd	r21, Y+10	; 0x0a
    19d0:	6b 85       	ldd	r22, Y+11	; 0x0b
    19d2:	7c 85       	ldd	r23, Y+12	; 0x0c
    19d4:	5a 01       	movw	r10, r20
    19d6:	ae 18       	sub	r10, r14
    19d8:	bf 08       	sbc	r11, r15
    19da:	7a 01       	movw	r14, r20
    19dc:	e8 1a       	sub	r14, r24
    19de:	f9 0a       	sbc	r15, r25
    19e0:	60 e0       	ldi	r22, 0x00	; 0
    19e2:	70 e0       	ldi	r23, 0x00	; 0
    19e4:	7f ef       	ldi	r23, 0xFF	; 255
    19e6:	72 0f       	add	r23, r18
    19e8:	60 0f       	add	r22, r16
    19ea:	71 1f       	adc	r23, r17
    19ec:	84 e4       	ldi	r24, 0x44	; 68
    19ee:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    19f2:	b7 01       	movw	r22, r14
    19f4:	85 e4       	ldi	r24, 0x45	; 69
    19f6:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    19fa:	b5 01       	movw	r22, r10
    19fc:	86 e4       	ldi	r24, 0x46	; 70
    19fe:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    1a02:	b8 01       	movw	r22, r16
    1a04:	8e e4       	ldi	r24, 0x4E	; 78
    1a06:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    1a0a:	b5 01       	movw	r22, r10
    1a0c:	8f e4       	ldi	r24, 0x4F	; 79
    1a0e:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    1a12:	68 e5       	ldi	r22, 0x58	; 88
    1a14:	70 e6       	ldi	r23, 0x60	; 96
    1a16:	81 e1       	ldi	r24, 0x11	; 17
    1a18:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    1a1c:	82 e2       	ldi	r24, 0x22	; 34
    1a1e:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>
    1a22:	85 b3       	in	r24, 0x15	; 21
    1a24:	80 68       	ori	r24, 0x80	; 128
    1a26:	85 bb       	out	0x15, r24	; 21
    1a28:	2a 81       	ldd	r18, Y+2	; 0x02
    1a2a:	30 e0       	ldi	r19, 0x00	; 0
    1a2c:	32 2f       	mov	r19, r18
    1a2e:	22 27       	eor	r18, r18
    1a30:	8b 81       	ldd	r24, Y+3	; 0x03
    1a32:	28 2b       	or	r18, r24
    1a34:	48 81       	ld	r20, Y
    1a36:	50 e0       	ldi	r21, 0x00	; 0
    1a38:	54 2f       	mov	r21, r20
    1a3a:	44 27       	eor	r20, r20
    1a3c:	89 81       	ldd	r24, Y+1	; 0x01
    1a3e:	48 2b       	or	r20, r24
    1a40:	6d 85       	ldd	r22, Y+13	; 0x0d
    1a42:	7e 85       	ldd	r23, Y+14	; 0x0e
    1a44:	6c 0d       	add	r22, r12
    1a46:	7d 1d       	adc	r23, r13
    1a48:	88 89       	ldd	r24, Y+16	; 0x10
    1a4a:	9f 85       	ldd	r25, Y+15	; 0x0f
    1a4c:	89 9f       	mul	r24, r25
    1a4e:	c0 01       	movw	r24, r0
    1a50:	11 24       	eor	r1, r1
    1a52:	99 23       	and	r25, r25
    1a54:	0c f4       	brge	.+2      	; 0x1a58 <_ZN4UTFT9printCharEhii+0x1c6>
    1a56:	07 96       	adiw	r24, 0x07	; 7
    1a58:	95 95       	asr	r25
    1a5a:	87 95       	ror	r24
    1a5c:	95 95       	asr	r25
    1a5e:	87 95       	ror	r24
    1a60:	95 95       	asr	r25
    1a62:	87 95       	ror	r24
    1a64:	0e 94 56 06 	call	0xcac	; 0xcac <fastbitmap_1bit>
    1a68:	85 b3       	in	r24, 0x15	; 21
    1a6a:	81 60       	ori	r24, 0x01	; 1
    1a6c:	85 bb       	out	0x15, r24	; 21
    1a6e:	df 91       	pop	r29
    1a70:	cf 91       	pop	r28
    1a72:	1f 91       	pop	r17
    1a74:	0f 91       	pop	r16
    1a76:	ff 90       	pop	r15
    1a78:	ef 90       	pop	r14
    1a7a:	df 90       	pop	r13
    1a7c:	cf 90       	pop	r12
    1a7e:	bf 90       	pop	r11
    1a80:	af 90       	pop	r10
    1a82:	08 95       	ret

00001a84 <_ZN4UTFT10rotateCharEhiiii>:
    1a84:	2f 92       	push	r2
    1a86:	3f 92       	push	r3
    1a88:	4f 92       	push	r4
    1a8a:	5f 92       	push	r5
    1a8c:	6f 92       	push	r6
    1a8e:	7f 92       	push	r7
    1a90:	8f 92       	push	r8
    1a92:	9f 92       	push	r9
    1a94:	af 92       	push	r10
    1a96:	bf 92       	push	r11
    1a98:	cf 92       	push	r12
    1a9a:	df 92       	push	r13
    1a9c:	ef 92       	push	r14
    1a9e:	ff 92       	push	r15
    1aa0:	0f 93       	push	r16
    1aa2:	1f 93       	push	r17
    1aa4:	cf 93       	push	r28
    1aa6:	df 93       	push	r29
    1aa8:	cd b7       	in	r28, 0x3d	; 61
    1aaa:	de b7       	in	r29, 0x3e	; 62
    1aac:	6b 97       	sbiw	r28, 0x1b	; 27
    1aae:	0f b6       	in	r0, 0x3f	; 63
    1ab0:	f8 94       	cli
    1ab2:	de bf       	out	0x3e, r29	; 62
    1ab4:	0f be       	out	0x3f, r0	; 63
    1ab6:	cd bf       	out	0x3d, r28	; 61
    1ab8:	5c 01       	movw	r10, r24
    1aba:	69 83       	std	Y+1, r22	; 0x01
    1abc:	3a 01       	movw	r6, r20
    1abe:	49 01       	movw	r8, r18
    1ac0:	1f 8b       	std	Y+23, r17	; 0x17
    1ac2:	0e 8b       	std	Y+22, r16	; 0x16
    1ac4:	b7 01       	movw	r22, r14
    1ac6:	ff 0c       	add	r15, r15
    1ac8:	88 0b       	sbc	r24, r24
    1aca:	99 0b       	sbc	r25, r25
    1acc:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <__floatsisf>
    1ad0:	29 e2       	ldi	r18, 0x29	; 41
    1ad2:	3c e5       	ldi	r19, 0x5C	; 92
    1ad4:	4f e8       	ldi	r20, 0x8F	; 143
    1ad6:	5c e3       	ldi	r21, 0x3C	; 60
    1ad8:	0e 94 bf 12 	call	0x257e	; 0x257e <__mulsf3>
    1adc:	69 8b       	std	Y+17, r22	; 0x11
    1ade:	7a 8b       	std	Y+18, r23	; 0x12
    1ae0:	8b 8b       	std	Y+19, r24	; 0x13
    1ae2:	9c 8b       	std	Y+20, r25	; 0x14
    1ae4:	85 b3       	in	r24, 0x15	; 21
    1ae6:	8e 7f       	andi	r24, 0xFE	; 254
    1ae8:	85 bb       	out	0x15, r24	; 21
    1aea:	d5 01       	movw	r26, r10
    1aec:	51 96       	adiw	r26, 0x11	; 17
    1aee:	8c 91       	ld	r24, X
    1af0:	b9 81       	ldd	r27, Y+1	; 0x01
    1af2:	2b 2f       	mov	r18, r27
    1af4:	30 e0       	ldi	r19, 0x00	; 0
    1af6:	28 1b       	sub	r18, r24
    1af8:	31 09       	sbc	r19, r1
    1afa:	f5 01       	movw	r30, r10
    1afc:	87 85       	ldd	r24, Z+15	; 0x0f
    1afe:	86 95       	lsr	r24
    1b00:	86 95       	lsr	r24
    1b02:	86 95       	lsr	r24
    1b04:	90 89       	ldd	r25, Z+16	; 0x10
    1b06:	89 9f       	mul	r24, r25
    1b08:	c0 01       	movw	r24, r0
    1b0a:	11 24       	eor	r1, r1
    1b0c:	28 9f       	mul	r18, r24
    1b0e:	a0 01       	movw	r20, r0
    1b10:	29 9f       	mul	r18, r25
    1b12:	50 0d       	add	r21, r0
    1b14:	38 9f       	mul	r19, r24
    1b16:	50 0d       	add	r21, r0
    1b18:	11 24       	eor	r1, r1
    1b1a:	9a 01       	movw	r18, r20
    1b1c:	2c 5f       	subi	r18, 0xFC	; 252
    1b1e:	3f 4f       	sbci	r19, 0xFF	; 255
    1b20:	39 8f       	std	Y+25, r19	; 0x19
    1b22:	28 8f       	std	Y+24, r18	; 0x18
    1b24:	1d 8a       	std	Y+21, r1	; 0x15
    1b26:	d5 01       	movw	r26, r10
    1b28:	50 96       	adiw	r26, 0x10	; 16
    1b2a:	8c 91       	ld	r24, X
    1b2c:	bd 89       	ldd	r27, Y+21	; 0x15
    1b2e:	b8 17       	cp	r27, r24
    1b30:	08 f0       	brcs	.+2      	; 0x1b34 <_ZN4UTFT10rotateCharEhiiii+0xb0>
    1b32:	fb c0       	rjmp	.+502    	; 0x1d2a <_ZN4UTFT10rotateCharEhiiii+0x2a6>
    1b34:	41 2c       	mov	r4, r1
    1b36:	51 2c       	mov	r5, r1
    1b38:	f5 01       	movw	r30, r10
    1b3a:	87 85       	ldd	r24, Z+15	; 0x0f
    1b3c:	86 95       	lsr	r24
    1b3e:	86 95       	lsr	r24
    1b40:	86 95       	lsr	r24
    1b42:	28 2f       	mov	r18, r24
    1b44:	30 e0       	ldi	r19, 0x00	; 0
    1b46:	42 16       	cp	r4, r18
    1b48:	53 06       	cpc	r5, r19
    1b4a:	0c f0       	brlt	.+2      	; 0x1b4e <_ZN4UTFT10rotateCharEhiiii+0xca>
    1b4c:	e4 c0       	rjmp	.+456    	; 0x1d16 <_ZN4UTFT10rotateCharEhiiii+0x292>
    1b4e:	05 84       	ldd	r0, Z+13	; 0x0d
    1b50:	f6 85       	ldd	r31, Z+14	; 0x0e
    1b52:	e0 2d       	mov	r30, r0
    1b54:	88 8d       	ldd	r24, Y+24	; 0x18
    1b56:	99 8d       	ldd	r25, Y+25	; 0x19
    1b58:	84 0d       	add	r24, r4
    1b5a:	95 1d       	adc	r25, r5
    1b5c:	e8 0f       	add	r30, r24
    1b5e:	f9 1f       	adc	r31, r25
    1b60:	24 90       	lpm	r2, Z
    1b62:	31 2c       	mov	r3, r1
    1b64:	3a 8e       	std	Y+26, r3	; 0x1a
    1b66:	2b 8e       	std	Y+27, r2	; 0x1b
    1b68:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1b6a:	f8 30       	cpi	r31, 0x08	; 8
    1b6c:	08 f0       	brcs	.+2      	; 0x1b70 <_ZN4UTFT10rotateCharEhiiii+0xec>
    1b6e:	cf c0       	rjmp	.+414    	; 0x1d0e <_ZN4UTFT10rotateCharEhiiii+0x28a>
    1b70:	2f 2e       	mov	r2, r31
    1b72:	31 2c       	mov	r3, r1
    1b74:	b2 01       	movw	r22, r4
    1b76:	66 0f       	add	r22, r22
    1b78:	77 1f       	adc	r23, r23
    1b7a:	66 0f       	add	r22, r22
    1b7c:	77 1f       	adc	r23, r23
    1b7e:	66 0f       	add	r22, r22
    1b80:	77 1f       	adc	r23, r23
    1b82:	62 0d       	add	r22, r2
    1b84:	73 1d       	adc	r23, r3
    1b86:	d5 01       	movw	r26, r10
    1b88:	1f 96       	adiw	r26, 0x0f	; 15
    1b8a:	2c 91       	ld	r18, X
    1b8c:	ee 89       	ldd	r30, Y+22	; 0x16
    1b8e:	ff 89       	ldd	r31, Y+23	; 0x17
    1b90:	2e 9f       	mul	r18, r30
    1b92:	c0 01       	movw	r24, r0
    1b94:	2f 9f       	mul	r18, r31
    1b96:	90 0d       	add	r25, r0
    1b98:	11 24       	eor	r1, r1
    1b9a:	68 0f       	add	r22, r24
    1b9c:	79 1f       	adc	r23, r25
    1b9e:	07 2e       	mov	r0, r23
    1ba0:	00 0c       	add	r0, r0
    1ba2:	88 0b       	sbc	r24, r24
    1ba4:	99 0b       	sbc	r25, r25
    1ba6:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <__floatsisf>
    1baa:	69 83       	std	Y+1, r22	; 0x01
    1bac:	7a 83       	std	Y+2, r23	; 0x02
    1bae:	8b 83       	std	Y+3, r24	; 0x03
    1bb0:	9c 83       	std	Y+4, r25	; 0x04
    1bb2:	69 89       	ldd	r22, Y+17	; 0x11
    1bb4:	7a 89       	ldd	r23, Y+18	; 0x12
    1bb6:	8b 89       	ldd	r24, Y+19	; 0x13
    1bb8:	9c 89       	ldd	r25, Y+20	; 0x14
    1bba:	0e 94 21 11 	call	0x2242	; 0x2242 <cos>
    1bbe:	6d 83       	std	Y+5, r22	; 0x05
    1bc0:	7e 83       	std	Y+6, r23	; 0x06
    1bc2:	8f 83       	std	Y+7, r24	; 0x07
    1bc4:	98 87       	std	Y+8, r25	; 0x08
    1bc6:	9b 01       	movw	r18, r22
    1bc8:	ac 01       	movw	r20, r24
    1bca:	69 81       	ldd	r22, Y+1	; 0x01
    1bcc:	7a 81       	ldd	r23, Y+2	; 0x02
    1bce:	8b 81       	ldd	r24, Y+3	; 0x03
    1bd0:	9c 81       	ldd	r25, Y+4	; 0x04
    1bd2:	0e 94 bf 12 	call	0x257e	; 0x257e <__mulsf3>
    1bd6:	6b 01       	movw	r12, r22
    1bd8:	7c 01       	movw	r14, r24
    1bda:	fd 89       	ldd	r31, Y+21	; 0x15
    1bdc:	6f 2f       	mov	r22, r31
    1bde:	70 e0       	ldi	r23, 0x00	; 0
    1be0:	80 e0       	ldi	r24, 0x00	; 0
    1be2:	90 e0       	ldi	r25, 0x00	; 0
    1be4:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <__floatsisf>
    1be8:	69 87       	std	Y+9, r22	; 0x09
    1bea:	7a 87       	std	Y+10, r23	; 0x0a
    1bec:	8b 87       	std	Y+11, r24	; 0x0b
    1bee:	9c 87       	std	Y+12, r25	; 0x0c
    1bf0:	69 89       	ldd	r22, Y+17	; 0x11
    1bf2:	7a 89       	ldd	r23, Y+18	; 0x12
    1bf4:	8b 89       	ldd	r24, Y+19	; 0x13
    1bf6:	9c 89       	ldd	r25, Y+20	; 0x14
    1bf8:	0e 94 2c 13 	call	0x2658	; 0x2658 <sin>
    1bfc:	6d 87       	std	Y+13, r22	; 0x0d
    1bfe:	7e 87       	std	Y+14, r23	; 0x0e
    1c00:	8f 87       	std	Y+15, r24	; 0x0f
    1c02:	98 8b       	std	Y+16, r25	; 0x10
    1c04:	9b 01       	movw	r18, r22
    1c06:	ac 01       	movw	r20, r24
    1c08:	69 85       	ldd	r22, Y+9	; 0x09
    1c0a:	7a 85       	ldd	r23, Y+10	; 0x0a
    1c0c:	8b 85       	ldd	r24, Y+11	; 0x0b
    1c0e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1c10:	0e 94 bf 12 	call	0x257e	; 0x257e <__mulsf3>
    1c14:	9b 01       	movw	r18, r22
    1c16:	ac 01       	movw	r20, r24
    1c18:	c7 01       	movw	r24, r14
    1c1a:	b6 01       	movw	r22, r12
    1c1c:	0e 94 af 10 	call	0x215e	; 0x215e <__subsf3>
    1c20:	6b 01       	movw	r12, r22
    1c22:	7c 01       	movw	r14, r24
    1c24:	b3 01       	movw	r22, r6
    1c26:	07 2c       	mov	r0, r7
    1c28:	00 0c       	add	r0, r0
    1c2a:	88 0b       	sbc	r24, r24
    1c2c:	99 0b       	sbc	r25, r25
    1c2e:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <__floatsisf>
    1c32:	a7 01       	movw	r20, r14
    1c34:	96 01       	movw	r18, r12
    1c36:	0e 94 b0 10 	call	0x2160	; 0x2160 <__addsf3>
    1c3a:	0e 94 98 11 	call	0x2330	; 0x2330 <__fixsfsi>
    1c3e:	6b 01       	movw	r12, r22
    1c40:	7c 01       	movw	r14, r24
    1c42:	29 85       	ldd	r18, Y+9	; 0x09
    1c44:	3a 85       	ldd	r19, Y+10	; 0x0a
    1c46:	4b 85       	ldd	r20, Y+11	; 0x0b
    1c48:	5c 85       	ldd	r21, Y+12	; 0x0c
    1c4a:	6d 81       	ldd	r22, Y+5	; 0x05
    1c4c:	7e 81       	ldd	r23, Y+6	; 0x06
    1c4e:	8f 81       	ldd	r24, Y+7	; 0x07
    1c50:	98 85       	ldd	r25, Y+8	; 0x08
    1c52:	0e 94 bf 12 	call	0x257e	; 0x257e <__mulsf3>
    1c56:	6d 83       	std	Y+5, r22	; 0x05
    1c58:	7e 83       	std	Y+6, r23	; 0x06
    1c5a:	8f 83       	std	Y+7, r24	; 0x07
    1c5c:	98 87       	std	Y+8, r25	; 0x08
    1c5e:	2d 85       	ldd	r18, Y+13	; 0x0d
    1c60:	3e 85       	ldd	r19, Y+14	; 0x0e
    1c62:	4f 85       	ldd	r20, Y+15	; 0x0f
    1c64:	58 89       	ldd	r21, Y+16	; 0x10
    1c66:	69 81       	ldd	r22, Y+1	; 0x01
    1c68:	7a 81       	ldd	r23, Y+2	; 0x02
    1c6a:	8b 81       	ldd	r24, Y+3	; 0x03
    1c6c:	9c 81       	ldd	r25, Y+4	; 0x04
    1c6e:	0e 94 bf 12 	call	0x257e	; 0x257e <__mulsf3>
    1c72:	9b 01       	movw	r18, r22
    1c74:	ac 01       	movw	r20, r24
    1c76:	6d 81       	ldd	r22, Y+5	; 0x05
    1c78:	7e 81       	ldd	r23, Y+6	; 0x06
    1c7a:	8f 81       	ldd	r24, Y+7	; 0x07
    1c7c:	98 85       	ldd	r25, Y+8	; 0x08
    1c7e:	0e 94 b0 10 	call	0x2160	; 0x2160 <__addsf3>
    1c82:	69 83       	std	Y+1, r22	; 0x01
    1c84:	7a 83       	std	Y+2, r23	; 0x02
    1c86:	8b 83       	std	Y+3, r24	; 0x03
    1c88:	9c 83       	std	Y+4, r25	; 0x04
    1c8a:	b4 01       	movw	r22, r8
    1c8c:	09 2c       	mov	r0, r9
    1c8e:	00 0c       	add	r0, r0
    1c90:	88 0b       	sbc	r24, r24
    1c92:	99 0b       	sbc	r25, r25
    1c94:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <__floatsisf>
    1c98:	29 81       	ldd	r18, Y+1	; 0x01
    1c9a:	3a 81       	ldd	r19, Y+2	; 0x02
    1c9c:	4b 81       	ldd	r20, Y+3	; 0x03
    1c9e:	5c 81       	ldd	r21, Y+4	; 0x04
    1ca0:	0e 94 b0 10 	call	0x2160	; 0x2160 <__addsf3>
    1ca4:	0e 94 98 11 	call	0x2330	; 0x2330 <__fixsfsi>
    1ca8:	8b 01       	movw	r16, r22
    1caa:	0f 5f       	subi	r16, 0xFF	; 255
    1cac:	1f 4f       	sbci	r17, 0xFF	; 255
    1cae:	96 01       	movw	r18, r12
    1cb0:	2f 5f       	subi	r18, 0xFF	; 255
    1cb2:	3f 4f       	sbci	r19, 0xFF	; 255
    1cb4:	ab 01       	movw	r20, r22
    1cb6:	b6 01       	movw	r22, r12
    1cb8:	c5 01       	movw	r24, r10
    1cba:	0e 94 0d 0b 	call	0x161a	; 0x161a <_ZN4UTFT5setXYEjjjj>
    1cbe:	27 e0       	ldi	r18, 0x07	; 7
    1cc0:	30 e0       	ldi	r19, 0x00	; 0
    1cc2:	22 19       	sub	r18, r2
    1cc4:	33 09       	sbc	r19, r3
    1cc6:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1cc8:	84 2f       	mov	r24, r20
    1cca:	90 e0       	ldi	r25, 0x00	; 0
    1ccc:	02 c0       	rjmp	.+4      	; 0x1cd2 <_ZN4UTFT10rotateCharEhiiii+0x24e>
    1cce:	95 95       	asr	r25
    1cd0:	87 95       	ror	r24
    1cd2:	2a 95       	dec	r18
    1cd4:	e2 f7       	brpl	.-8      	; 0x1cce <_ZN4UTFT10rotateCharEhiiii+0x24a>
    1cd6:	80 ff       	sbrs	r24, 0
    1cd8:	0c c0       	rjmp	.+24     	; 0x1cf2 <_ZN4UTFT10rotateCharEhiiii+0x26e>
    1cda:	d5 01       	movw	r26, r10
    1cdc:	6c 91       	ld	r22, X
    1cde:	70 e0       	ldi	r23, 0x00	; 0
    1ce0:	76 2f       	mov	r23, r22
    1ce2:	66 27       	eor	r22, r22
    1ce4:	11 96       	adiw	r26, 0x01	; 1
    1ce6:	8c 91       	ld	r24, X
    1ce8:	68 2b       	or	r22, r24
    1cea:	c5 01       	movw	r24, r10
    1cec:	0e 94 45 0c 	call	0x188a	; 0x188a <_ZN4UTFT8setPixelEj>
    1cf0:	0a c0       	rjmp	.+20     	; 0x1d06 <_ZN4UTFT10rotateCharEhiiii+0x282>
    1cf2:	f5 01       	movw	r30, r10
    1cf4:	62 81       	ldd	r22, Z+2	; 0x02
    1cf6:	70 e0       	ldi	r23, 0x00	; 0
    1cf8:	76 2f       	mov	r23, r22
    1cfa:	66 27       	eor	r22, r22
    1cfc:	83 81       	ldd	r24, Z+3	; 0x03
    1cfe:	68 2b       	or	r22, r24
    1d00:	c5 01       	movw	r24, r10
    1d02:	0e 94 45 0c 	call	0x188a	; 0x188a <_ZN4UTFT8setPixelEj>
    1d06:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1d08:	ff 5f       	subi	r31, 0xFF	; 255
    1d0a:	fa 8f       	std	Y+26, r31	; 0x1a
    1d0c:	2d cf       	rjmp	.-422    	; 0x1b68 <_ZN4UTFT10rotateCharEhiiii+0xe4>
    1d0e:	2f ef       	ldi	r18, 0xFF	; 255
    1d10:	42 1a       	sub	r4, r18
    1d12:	52 0a       	sbc	r5, r18
    1d14:	11 cf       	rjmp	.-478    	; 0x1b38 <_ZN4UTFT10rotateCharEhiiii+0xb4>
    1d16:	48 8d       	ldd	r20, Y+24	; 0x18
    1d18:	59 8d       	ldd	r21, Y+25	; 0x19
    1d1a:	48 0f       	add	r20, r24
    1d1c:	51 1d       	adc	r21, r1
    1d1e:	59 8f       	std	Y+25, r21	; 0x19
    1d20:	48 8f       	std	Y+24, r20	; 0x18
    1d22:	5d 89       	ldd	r21, Y+21	; 0x15
    1d24:	5f 5f       	subi	r21, 0xFF	; 255
    1d26:	5d 8b       	std	Y+21, r21	; 0x15
    1d28:	fe ce       	rjmp	.-516    	; 0x1b26 <_ZN4UTFT10rotateCharEhiiii+0xa2>
    1d2a:	85 b3       	in	r24, 0x15	; 21
    1d2c:	81 60       	ori	r24, 0x01	; 1
    1d2e:	85 bb       	out	0x15, r24	; 21
    1d30:	6b 96       	adiw	r28, 0x1b	; 27
    1d32:	0f b6       	in	r0, 0x3f	; 63
    1d34:	f8 94       	cli
    1d36:	de bf       	out	0x3e, r29	; 62
    1d38:	0f be       	out	0x3f, r0	; 63
    1d3a:	cd bf       	out	0x3d, r28	; 61
    1d3c:	df 91       	pop	r29
    1d3e:	cf 91       	pop	r28
    1d40:	1f 91       	pop	r17
    1d42:	0f 91       	pop	r16
    1d44:	ff 90       	pop	r15
    1d46:	ef 90       	pop	r14
    1d48:	df 90       	pop	r13
    1d4a:	cf 90       	pop	r12
    1d4c:	bf 90       	pop	r11
    1d4e:	af 90       	pop	r10
    1d50:	9f 90       	pop	r9
    1d52:	8f 90       	pop	r8
    1d54:	7f 90       	pop	r7
    1d56:	6f 90       	pop	r6
    1d58:	5f 90       	pop	r5
    1d5a:	4f 90       	pop	r4
    1d5c:	3f 90       	pop	r3
    1d5e:	2f 90       	pop	r2
    1d60:	08 95       	ret

00001d62 <_ZN4UTFT5printEPKciii>:
    1d62:	2f 92       	push	r2
    1d64:	3f 92       	push	r3
    1d66:	4f 92       	push	r4
    1d68:	5f 92       	push	r5
    1d6a:	6f 92       	push	r6
    1d6c:	7f 92       	push	r7
    1d6e:	8f 92       	push	r8
    1d70:	9f 92       	push	r9
    1d72:	af 92       	push	r10
    1d74:	bf 92       	push	r11
    1d76:	cf 92       	push	r12
    1d78:	df 92       	push	r13
    1d7a:	ef 92       	push	r14
    1d7c:	ff 92       	push	r15
    1d7e:	0f 93       	push	r16
    1d80:	1f 93       	push	r17
    1d82:	cf 93       	push	r28
    1d84:	df 93       	push	r29
    1d86:	ec 01       	movw	r28, r24
    1d88:	fb 01       	movw	r30, r22
    1d8a:	5a 01       	movw	r10, r20
    1d8c:	29 01       	movw	r4, r18
    1d8e:	68 01       	movw	r12, r16
    1d90:	db 01       	movw	r26, r22
    1d92:	0d 90       	ld	r0, X+
    1d94:	00 20       	and	r0, r0
    1d96:	e9 f7       	brne	.-6      	; 0x1d92 <_ZN4UTFT5printEPKciii+0x30>
    1d98:	11 97       	sbiw	r26, 0x01	; 1
    1d9a:	a6 1b       	sub	r26, r22
    1d9c:	b7 0b       	sbc	r27, r23
    1d9e:	4d 01       	movw	r8, r26
    1da0:	8c 81       	ldd	r24, Y+4	; 0x04
    1da2:	81 11       	cpse	r24, r1
    1da4:	3e c0       	rjmp	.+124    	; 0x1e22 <_ZN4UTFT5printEPKciii+0xc0>
    1da6:	4f 30       	cpi	r20, 0x0F	; 15
    1da8:	57 42       	sbci	r21, 0x27	; 39
    1daa:	81 f4       	brne	.+32     	; 0x1dcc <_ZN4UTFT5printEPKciii+0x6a>
    1dac:	4d 81       	ldd	r20, Y+5	; 0x05
    1dae:	5e 81       	ldd	r21, Y+6	; 0x06
    1db0:	6f 81       	ldd	r22, Y+7	; 0x07
    1db2:	78 85       	ldd	r23, Y+8	; 0x08
    1db4:	2f 85       	ldd	r18, Y+15	; 0x0f
    1db6:	2a 9f       	mul	r18, r26
    1db8:	c0 01       	movw	r24, r0
    1dba:	2b 9f       	mul	r18, r27
    1dbc:	90 0d       	add	r25, r0
    1dbe:	11 24       	eor	r1, r1
    1dc0:	48 1b       	sub	r20, r24
    1dc2:	59 0b       	sbc	r21, r25
    1dc4:	5a 01       	movw	r10, r20
    1dc6:	1f ef       	ldi	r17, 0xFF	; 255
    1dc8:	a1 1a       	sub	r10, r17
    1dca:	b1 0a       	sbc	r11, r17
    1dcc:	2e e0       	ldi	r18, 0x0E	; 14
    1dce:	a2 16       	cp	r10, r18
    1dd0:	27 e2       	ldi	r18, 0x27	; 39
    1dd2:	b2 06       	cpc	r11, r18
    1dd4:	09 f0       	breq	.+2      	; 0x1dd8 <_ZN4UTFT5printEPKciii+0x76>
    1dd6:	61 c0       	rjmp	.+194    	; 0x1e9a <_ZN4UTFT5printEPKciii+0x138>
    1dd8:	4d 81       	ldd	r20, Y+5	; 0x05
    1dda:	5e 81       	ldd	r21, Y+6	; 0x06
    1ddc:	6f 81       	ldd	r22, Y+7	; 0x07
    1dde:	78 85       	ldd	r23, Y+8	; 0x08
    1de0:	4f 5f       	subi	r20, 0xFF	; 255
    1de2:	5f 4f       	sbci	r21, 0xFF	; 255
    1de4:	6f 4f       	sbci	r22, 0xFF	; 255
    1de6:	7f 4f       	sbci	r23, 0xFF	; 255
    1de8:	2f 85       	ldd	r18, Y+15	; 0x0f
    1dea:	2a 9f       	mul	r18, r26
    1dec:	c0 01       	movw	r24, r0
    1dee:	2b 9f       	mul	r18, r27
    1df0:	90 0d       	add	r25, r0
    1df2:	11 24       	eor	r1, r1
    1df4:	09 2e       	mov	r0, r25
    1df6:	00 0c       	add	r0, r0
    1df8:	aa 0b       	sbc	r26, r26
    1dfa:	bb 0b       	sbc	r27, r27
    1dfc:	8a 01       	movw	r16, r20
    1dfe:	9b 01       	movw	r18, r22
    1e00:	08 1b       	sub	r16, r24
    1e02:	19 0b       	sbc	r17, r25
    1e04:	2a 0b       	sbc	r18, r26
    1e06:	3b 0b       	sbc	r19, r27
    1e08:	b9 01       	movw	r22, r18
    1e0a:	a8 01       	movw	r20, r16
    1e0c:	22 f4       	brpl	.+8      	; 0x1e16 <_ZN4UTFT5printEPKciii+0xb4>
    1e0e:	4f 5f       	subi	r20, 0xFF	; 255
    1e10:	5f 4f       	sbci	r21, 0xFF	; 255
    1e12:	6f 4f       	sbci	r22, 0xFF	; 255
    1e14:	7f 4f       	sbci	r23, 0xFF	; 255
    1e16:	75 95       	asr	r23
    1e18:	67 95       	ror	r22
    1e1a:	57 95       	ror	r21
    1e1c:	47 95       	ror	r20
    1e1e:	5a 01       	movw	r10, r20
    1e20:	3c c0       	rjmp	.+120    	; 0x1e9a <_ZN4UTFT5printEPKciii+0x138>
    1e22:	4f 30       	cpi	r20, 0x0F	; 15
    1e24:	57 42       	sbci	r21, 0x27	; 39
    1e26:	81 f4       	brne	.+32     	; 0x1e48 <_ZN4UTFT5printEPKciii+0xe6>
    1e28:	49 85       	ldd	r20, Y+9	; 0x09
    1e2a:	5a 85       	ldd	r21, Y+10	; 0x0a
    1e2c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e2e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e30:	2f 85       	ldd	r18, Y+15	; 0x0f
    1e32:	2a 9f       	mul	r18, r26
    1e34:	c0 01       	movw	r24, r0
    1e36:	2b 9f       	mul	r18, r27
    1e38:	90 0d       	add	r25, r0
    1e3a:	11 24       	eor	r1, r1
    1e3c:	48 1b       	sub	r20, r24
    1e3e:	59 0b       	sbc	r21, r25
    1e40:	5a 01       	movw	r10, r20
    1e42:	2f ef       	ldi	r18, 0xFF	; 255
    1e44:	a2 1a       	sub	r10, r18
    1e46:	b2 0a       	sbc	r11, r18
    1e48:	3e e0       	ldi	r19, 0x0E	; 14
    1e4a:	a3 16       	cp	r10, r19
    1e4c:	37 e2       	ldi	r19, 0x27	; 39
    1e4e:	b3 06       	cpc	r11, r19
    1e50:	21 f5       	brne	.+72     	; 0x1e9a <_ZN4UTFT5printEPKciii+0x138>
    1e52:	49 85       	ldd	r20, Y+9	; 0x09
    1e54:	5a 85       	ldd	r21, Y+10	; 0x0a
    1e56:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e58:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e5a:	4f 5f       	subi	r20, 0xFF	; 255
    1e5c:	5f 4f       	sbci	r21, 0xFF	; 255
    1e5e:	6f 4f       	sbci	r22, 0xFF	; 255
    1e60:	7f 4f       	sbci	r23, 0xFF	; 255
    1e62:	2f 85       	ldd	r18, Y+15	; 0x0f
    1e64:	2a 9f       	mul	r18, r26
    1e66:	c0 01       	movw	r24, r0
    1e68:	2b 9f       	mul	r18, r27
    1e6a:	90 0d       	add	r25, r0
    1e6c:	11 24       	eor	r1, r1
    1e6e:	09 2e       	mov	r0, r25
    1e70:	00 0c       	add	r0, r0
    1e72:	aa 0b       	sbc	r26, r26
    1e74:	bb 0b       	sbc	r27, r27
    1e76:	8a 01       	movw	r16, r20
    1e78:	9b 01       	movw	r18, r22
    1e7a:	08 1b       	sub	r16, r24
    1e7c:	19 0b       	sbc	r17, r25
    1e7e:	2a 0b       	sbc	r18, r26
    1e80:	3b 0b       	sbc	r19, r27
    1e82:	b9 01       	movw	r22, r18
    1e84:	a8 01       	movw	r20, r16
    1e86:	22 f4       	brpl	.+8      	; 0x1e90 <_ZN4UTFT5printEPKciii+0x12e>
    1e88:	4f 5f       	subi	r20, 0xFF	; 255
    1e8a:	5f 4f       	sbci	r21, 0xFF	; 255
    1e8c:	6f 4f       	sbci	r22, 0xFF	; 255
    1e8e:	7f 4f       	sbci	r23, 0xFF	; 255
    1e90:	75 95       	asr	r23
    1e92:	67 95       	ror	r22
    1e94:	57 95       	ror	r21
    1e96:	47 95       	ror	r20
    1e98:	5a 01       	movw	r10, r20
    1e9a:	61 2c       	mov	r6, r1
    1e9c:	71 2c       	mov	r7, r1
    1e9e:	68 14       	cp	r6, r8
    1ea0:	79 04       	cpc	r7, r9
    1ea2:	3c f5       	brge	.+78     	; 0x1ef2 <_ZN4UTFT5printEPKciii+0x190>
    1ea4:	c1 14       	cp	r12, r1
    1ea6:	d1 04       	cpc	r13, r1
    1ea8:	99 f4       	brne	.+38     	; 0x1ed0 <_ZN4UTFT5printEPKciii+0x16e>
    1eaa:	8f 85       	ldd	r24, Y+15	; 0x0f
    1eac:	86 9d       	mul	r24, r6
    1eae:	a0 01       	movw	r20, r0
    1eb0:	87 9d       	mul	r24, r7
    1eb2:	50 0d       	add	r21, r0
    1eb4:	11 24       	eor	r1, r1
    1eb6:	4a 0d       	add	r20, r10
    1eb8:	5b 1d       	adc	r21, r11
    1eba:	1f 01       	movw	r2, r30
    1ebc:	1f ef       	ldi	r17, 0xFF	; 255
    1ebe:	21 1a       	sub	r2, r17
    1ec0:	31 0a       	sbc	r3, r17
    1ec2:	60 81       	ld	r22, Z
    1ec4:	92 01       	movw	r18, r4
    1ec6:	ce 01       	movw	r24, r28
    1ec8:	0e 94 49 0c 	call	0x1892	; 0x1892 <_ZN4UTFT9printCharEhii>
    1ecc:	f1 01       	movw	r30, r2
    1ece:	0d c0       	rjmp	.+26     	; 0x1eea <_ZN4UTFT5printEPKciii+0x188>
    1ed0:	1f 01       	movw	r2, r30
    1ed2:	2f ef       	ldi	r18, 0xFF	; 255
    1ed4:	22 1a       	sub	r2, r18
    1ed6:	32 0a       	sbc	r3, r18
    1ed8:	60 81       	ld	r22, Z
    1eda:	76 01       	movw	r14, r12
    1edc:	83 01       	movw	r16, r6
    1ede:	92 01       	movw	r18, r4
    1ee0:	a5 01       	movw	r20, r10
    1ee2:	ce 01       	movw	r24, r28
    1ee4:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <_ZN4UTFT10rotateCharEhiiii>
    1ee8:	f1 01       	movw	r30, r2
    1eea:	3f ef       	ldi	r19, 0xFF	; 255
    1eec:	63 1a       	sub	r6, r19
    1eee:	73 0a       	sbc	r7, r19
    1ef0:	d6 cf       	rjmp	.-84     	; 0x1e9e <_ZN4UTFT5printEPKciii+0x13c>
    1ef2:	df 91       	pop	r29
    1ef4:	cf 91       	pop	r28
    1ef6:	1f 91       	pop	r17
    1ef8:	0f 91       	pop	r16
    1efa:	ff 90       	pop	r15
    1efc:	ef 90       	pop	r14
    1efe:	df 90       	pop	r13
    1f00:	cf 90       	pop	r12
    1f02:	bf 90       	pop	r11
    1f04:	af 90       	pop	r10
    1f06:	9f 90       	pop	r9
    1f08:	8f 90       	pop	r8
    1f0a:	7f 90       	pop	r7
    1f0c:	6f 90       	pop	r6
    1f0e:	5f 90       	pop	r5
    1f10:	4f 90       	pop	r4
    1f12:	3f 90       	pop	r3
    1f14:	2f 90       	pop	r2
    1f16:	08 95       	ret

00001f18 <_ZN4UTFT9printNumIEliiic>:
    1f18:	2f 92       	push	r2
    1f1a:	3f 92       	push	r3
    1f1c:	4f 92       	push	r4
    1f1e:	5f 92       	push	r5
    1f20:	6f 92       	push	r6
    1f22:	7f 92       	push	r7
    1f24:	8f 92       	push	r8
    1f26:	9f 92       	push	r9
    1f28:	af 92       	push	r10
    1f2a:	bf 92       	push	r11
    1f2c:	cf 92       	push	r12
    1f2e:	df 92       	push	r13
    1f30:	ef 92       	push	r14
    1f32:	ff 92       	push	r15
    1f34:	0f 93       	push	r16
    1f36:	1f 93       	push	r17
    1f38:	cf 93       	push	r28
    1f3a:	df 93       	push	r29
    1f3c:	cd b7       	in	r28, 0x3d	; 61
    1f3e:	de b7       	in	r29, 0x3e	; 62
    1f40:	e8 97       	sbiw	r28, 0x38	; 56
    1f42:	0f b6       	in	r0, 0x3f	; 63
    1f44:	f8 94       	cli
    1f46:	de bf       	out	0x3e, r29	; 62
    1f48:	0f be       	out	0x3f, r0	; 63
    1f4a:	cd bf       	out	0x3d, r28	; 61
    1f4c:	1c 01       	movw	r2, r24
    1f4e:	4a 01       	movw	r8, r20
    1f50:	5b 01       	movw	r10, r22
    1f52:	3e ab       	std	Y+54, r19	; 0x36
    1f54:	2d ab       	std	Y+53, r18	; 0x35
    1f56:	18 af       	std	Y+56, r17	; 0x38
    1f58:	0f ab       	std	Y+55, r16	; 0x37
    1f5a:	41 15       	cp	r20, r1
    1f5c:	51 05       	cpc	r21, r1
    1f5e:	61 05       	cpc	r22, r1
    1f60:	71 05       	cpc	r23, r1
    1f62:	49 f5       	brne	.+82     	; 0x1fb6 <_ZN4UTFT9printNumIEliiic+0x9e>
    1f64:	e1 14       	cp	r14, r1
    1f66:	f1 04       	cpc	r15, r1
    1f68:	11 f1       	breq	.+68     	; 0x1fae <_ZN4UTFT9printNumIEliiic+0x96>
    1f6a:	80 e0       	ldi	r24, 0x00	; 0
    1f6c:	90 e0       	ldi	r25, 0x00	; 0
    1f6e:	97 01       	movw	r18, r14
    1f70:	21 50       	subi	r18, 0x01	; 1
    1f72:	31 09       	sbc	r19, r1
    1f74:	82 17       	cp	r24, r18
    1f76:	93 07       	cpc	r25, r19
    1f78:	4c f4       	brge	.+18     	; 0x1f8c <_ZN4UTFT9printNumIEliiic+0x74>
    1f7a:	ea e1       	ldi	r30, 0x1A	; 26
    1f7c:	f0 e0       	ldi	r31, 0x00	; 0
    1f7e:	ec 0f       	add	r30, r28
    1f80:	fd 1f       	adc	r31, r29
    1f82:	e8 0f       	add	r30, r24
    1f84:	f9 1f       	adc	r31, r25
    1f86:	c0 82       	st	Z, r12
    1f88:	01 96       	adiw	r24, 0x01	; 1
    1f8a:	f1 cf       	rjmp	.-30     	; 0x1f6e <_ZN4UTFT9printNumIEliiic+0x56>
    1f8c:	ea e1       	ldi	r30, 0x1A	; 26
    1f8e:	f0 e0       	ldi	r31, 0x00	; 0
    1f90:	ec 0f       	add	r30, r28
    1f92:	fd 1f       	adc	r31, r29
    1f94:	e8 0f       	add	r30, r24
    1f96:	f9 1f       	adc	r31, r25
    1f98:	20 e3       	ldi	r18, 0x30	; 48
    1f9a:	20 83       	st	Z, r18
    1f9c:	01 96       	adiw	r24, 0x01	; 1
    1f9e:	ea e1       	ldi	r30, 0x1A	; 26
    1fa0:	f0 e0       	ldi	r31, 0x00	; 0
    1fa2:	ec 0f       	add	r30, r28
    1fa4:	fd 1f       	adc	r31, r29
    1fa6:	e8 0f       	add	r30, r24
    1fa8:	f9 1f       	adc	r31, r25
    1faa:	10 82       	st	Z, r1
    1fac:	98 c0       	rjmp	.+304    	; 0x20de <_ZN4UTFT9printNumIEliiic+0x1c6>
    1fae:	80 e3       	ldi	r24, 0x30	; 48
    1fb0:	8a 8f       	std	Y+26, r24	; 0x1a
    1fb2:	1b 8e       	std	Y+27, r1	; 0x1b
    1fb4:	94 c0       	rjmp	.+296    	; 0x20de <_ZN4UTFT9printNumIEliiic+0x1c6>
    1fb6:	77 23       	and	r23, r23
    1fb8:	5c f4       	brge	.+22     	; 0x1fd0 <_ZN4UTFT9printNumIEliiic+0xb8>
    1fba:	b0 94       	com	r11
    1fbc:	a0 94       	com	r10
    1fbe:	90 94       	com	r9
    1fc0:	80 94       	com	r8
    1fc2:	81 1c       	adc	r8, r1
    1fc4:	91 1c       	adc	r9, r1
    1fc6:	a1 1c       	adc	r10, r1
    1fc8:	b1 1c       	adc	r11, r1
    1fca:	dd 24       	eor	r13, r13
    1fcc:	d3 94       	inc	r13
    1fce:	01 c0       	rjmp	.+2      	; 0x1fd2 <_ZN4UTFT9printNumIEliiic+0xba>
    1fd0:	d1 2c       	mov	r13, r1
    1fd2:	00 e0       	ldi	r16, 0x00	; 0
    1fd4:	10 e0       	ldi	r17, 0x00	; 0
    1fd6:	18 14       	cp	r1, r8
    1fd8:	19 04       	cpc	r1, r9
    1fda:	1a 04       	cpc	r1, r10
    1fdc:	1b 04       	cpc	r1, r11
    1fde:	3c f5       	brge	.+78     	; 0x202e <_ZN4UTFT9printNumIEliiic+0x116>
    1fe0:	0f 2e       	mov	r0, r31
    1fe2:	fa e0       	ldi	r31, 0x0A	; 10
    1fe4:	4f 2e       	mov	r4, r31
    1fe6:	51 2c       	mov	r5, r1
    1fe8:	61 2c       	mov	r6, r1
    1fea:	71 2c       	mov	r7, r1
    1fec:	f0 2d       	mov	r31, r0
    1fee:	c5 01       	movw	r24, r10
    1ff0:	b4 01       	movw	r22, r8
    1ff2:	a3 01       	movw	r20, r6
    1ff4:	92 01       	movw	r18, r4
    1ff6:	0e 94 af 13 	call	0x275e	; 0x275e <__divmodsi4>
    1ffa:	e1 e0       	ldi	r30, 0x01	; 1
    1ffc:	f0 e0       	ldi	r31, 0x00	; 0
    1ffe:	ec 0f       	add	r30, r28
    2000:	fd 1f       	adc	r31, r29
    2002:	e0 0f       	add	r30, r16
    2004:	f1 1f       	adc	r31, r17
    2006:	20 e3       	ldi	r18, 0x30	; 48
    2008:	26 0f       	add	r18, r22
    200a:	20 83       	st	Z, r18
    200c:	0f 5f       	subi	r16, 0xFF	; 255
    200e:	1f 4f       	sbci	r17, 0xFF	; 255
    2010:	a5 01       	movw	r20, r10
    2012:	94 01       	movw	r18, r8
    2014:	26 1b       	sub	r18, r22
    2016:	37 0b       	sbc	r19, r23
    2018:	48 0b       	sbc	r20, r24
    201a:	59 0b       	sbc	r21, r25
    201c:	ca 01       	movw	r24, r20
    201e:	b9 01       	movw	r22, r18
    2020:	a3 01       	movw	r20, r6
    2022:	92 01       	movw	r18, r4
    2024:	0e 94 af 13 	call	0x275e	; 0x275e <__divmodsi4>
    2028:	49 01       	movw	r8, r18
    202a:	5a 01       	movw	r10, r20
    202c:	d4 cf       	rjmp	.-88     	; 0x1fd6 <_ZN4UTFT9printNumIEliiic+0xbe>
    202e:	e1 e0       	ldi	r30, 0x01	; 1
    2030:	f0 e0       	ldi	r31, 0x00	; 0
    2032:	ec 0f       	add	r30, r28
    2034:	fd 1f       	adc	r31, r29
    2036:	e0 0f       	add	r30, r16
    2038:	f1 1f       	adc	r31, r17
    203a:	10 82       	st	Z, r1
    203c:	dd 20       	and	r13, r13
    203e:	11 f0       	breq	.+4      	; 0x2044 <_ZN4UTFT9printNumIEliiic+0x12c>
    2040:	8d e2       	ldi	r24, 0x2D	; 45
    2042:	8a 8f       	std	Y+26, r24	; 0x1a
    2044:	2d 2d       	mov	r18, r13
    2046:	30 e0       	ldi	r19, 0x00	; 0
    2048:	b8 01       	movw	r22, r16
    204a:	62 0f       	add	r22, r18
    204c:	73 1f       	adc	r23, r19
    204e:	6e 15       	cp	r22, r14
    2050:	7f 05       	cpc	r23, r15
    2052:	d4 f4       	brge	.+52     	; 0x2088 <_ZN4UTFT9printNumIEliiic+0x170>
    2054:	80 e0       	ldi	r24, 0x00	; 0
    2056:	90 e0       	ldi	r25, 0x00	; 0
    2058:	40 e0       	ldi	r20, 0x00	; 0
    205a:	50 e0       	ldi	r21, 0x00	; 0
    205c:	f7 01       	movw	r30, r14
    205e:	e0 1b       	sub	r30, r16
    2060:	f1 0b       	sbc	r31, r17
    2062:	e2 1b       	sub	r30, r18
    2064:	f3 0b       	sbc	r31, r19
    2066:	8e 17       	cp	r24, r30
    2068:	9f 07       	cpc	r25, r31
    206a:	84 f4       	brge	.+32     	; 0x208c <_ZN4UTFT9printNumIEliiic+0x174>
    206c:	fc 01       	movw	r30, r24
    206e:	e2 0f       	add	r30, r18
    2070:	f3 1f       	adc	r31, r19
    2072:	aa e1       	ldi	r26, 0x1A	; 26
    2074:	b0 e0       	ldi	r27, 0x00	; 0
    2076:	ac 0f       	add	r26, r28
    2078:	bd 1f       	adc	r27, r29
    207a:	ea 0f       	add	r30, r26
    207c:	fb 1f       	adc	r31, r27
    207e:	c0 82       	st	Z, r12
    2080:	4f 5f       	subi	r20, 0xFF	; 255
    2082:	5f 4f       	sbci	r21, 0xFF	; 255
    2084:	01 96       	adiw	r24, 0x01	; 1
    2086:	ea cf       	rjmp	.-44     	; 0x205c <_ZN4UTFT9printNumIEliiic+0x144>
    2088:	40 e0       	ldi	r20, 0x00	; 0
    208a:	50 e0       	ldi	r21, 0x00	; 0
    208c:	a0 e0       	ldi	r26, 0x00	; 0
    208e:	b0 e0       	ldi	r27, 0x00	; 0
    2090:	a0 17       	cp	r26, r16
    2092:	b1 07       	cpc	r27, r17
    2094:	dc f4       	brge	.+54     	; 0x20cc <_ZN4UTFT9printNumIEliiic+0x1b4>
    2096:	fd 01       	movw	r30, r26
    2098:	e2 0f       	add	r30, r18
    209a:	f3 1f       	adc	r31, r19
    209c:	6f 01       	movw	r12, r30
    209e:	c4 0e       	add	r12, r20
    20a0:	d5 1e       	adc	r13, r21
    20a2:	c8 01       	movw	r24, r16
    20a4:	8a 1b       	sub	r24, r26
    20a6:	9b 0b       	sbc	r25, r27
    20a8:	01 97       	sbiw	r24, 0x01	; 1
    20aa:	e1 e0       	ldi	r30, 0x01	; 1
    20ac:	f0 e0       	ldi	r31, 0x00	; 0
    20ae:	ec 0f       	add	r30, r28
    20b0:	fd 1f       	adc	r31, r29
    20b2:	8e 0f       	add	r24, r30
    20b4:	9f 1f       	adc	r25, r31
    20b6:	fc 01       	movw	r30, r24
    20b8:	80 81       	ld	r24, Z
    20ba:	ea e1       	ldi	r30, 0x1A	; 26
    20bc:	f0 e0       	ldi	r31, 0x00	; 0
    20be:	ec 0f       	add	r30, r28
    20c0:	fd 1f       	adc	r31, r29
    20c2:	ec 0d       	add	r30, r12
    20c4:	fd 1d       	adc	r31, r13
    20c6:	80 83       	st	Z, r24
    20c8:	11 96       	adiw	r26, 0x01	; 1
    20ca:	e2 cf       	rjmp	.-60     	; 0x2090 <_ZN4UTFT9printNumIEliiic+0x178>
    20cc:	46 0f       	add	r20, r22
    20ce:	57 1f       	adc	r21, r23
    20d0:	ea e1       	ldi	r30, 0x1A	; 26
    20d2:	f0 e0       	ldi	r31, 0x00	; 0
    20d4:	ec 0f       	add	r30, r28
    20d6:	fd 1f       	adc	r31, r29
    20d8:	e4 0f       	add	r30, r20
    20da:	f5 1f       	adc	r31, r21
    20dc:	10 82       	st	Z, r1
    20de:	00 e0       	ldi	r16, 0x00	; 0
    20e0:	10 e0       	ldi	r17, 0x00	; 0
    20e2:	2f a9       	ldd	r18, Y+55	; 0x37
    20e4:	38 ad       	ldd	r19, Y+56	; 0x38
    20e6:	4d a9       	ldd	r20, Y+53	; 0x35
    20e8:	5e a9       	ldd	r21, Y+54	; 0x36
    20ea:	be 01       	movw	r22, r28
    20ec:	66 5e       	subi	r22, 0xE6	; 230
    20ee:	7f 4f       	sbci	r23, 0xFF	; 255
    20f0:	c1 01       	movw	r24, r2
    20f2:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <_ZN4UTFT5printEPKciii>
    20f6:	e8 96       	adiw	r28, 0x38	; 56
    20f8:	0f b6       	in	r0, 0x3f	; 63
    20fa:	f8 94       	cli
    20fc:	de bf       	out	0x3e, r29	; 62
    20fe:	0f be       	out	0x3f, r0	; 63
    2100:	cd bf       	out	0x3d, r28	; 61
    2102:	df 91       	pop	r29
    2104:	cf 91       	pop	r28
    2106:	1f 91       	pop	r17
    2108:	0f 91       	pop	r16
    210a:	ff 90       	pop	r15
    210c:	ef 90       	pop	r14
    210e:	df 90       	pop	r13
    2110:	cf 90       	pop	r12
    2112:	bf 90       	pop	r11
    2114:	af 90       	pop	r10
    2116:	9f 90       	pop	r9
    2118:	8f 90       	pop	r8
    211a:	7f 90       	pop	r7
    211c:	6f 90       	pop	r6
    211e:	5f 90       	pop	r5
    2120:	4f 90       	pop	r4
    2122:	3f 90       	pop	r3
    2124:	2f 90       	pop	r2
    2126:	08 95       	ret

00002128 <_ZN4UTFT7setFontEPKh>:

void UTFT::setFont(const uint8_t* font)
{
    2128:	dc 01       	movw	r26, r24
	cfont.font=font;
    212a:	1e 96       	adiw	r26, 0x0e	; 14
    212c:	7c 93       	st	X, r23
    212e:	6e 93       	st	-X, r22
    2130:	1d 97       	sbiw	r26, 0x0d	; 13
	cfont.x_size=fontbyte(0);
    2132:	fb 01       	movw	r30, r22
    2134:	84 91       	lpm	r24, Z
    2136:	1f 96       	adiw	r26, 0x0f	; 15
    2138:	8c 93       	st	X, r24
    213a:	1f 97       	sbiw	r26, 0x0f	; 15
	cfont.y_size=fontbyte(1);
    213c:	31 96       	adiw	r30, 0x01	; 1
    213e:	e4 91       	lpm	r30, Z
    2140:	50 96       	adiw	r26, 0x10	; 16
    2142:	ec 93       	st	X, r30
    2144:	50 97       	sbiw	r26, 0x10	; 16
	cfont.offset=fontbyte(2);
    2146:	fb 01       	movw	r30, r22
    2148:	32 96       	adiw	r30, 0x02	; 2
    214a:	e4 91       	lpm	r30, Z
    214c:	51 96       	adiw	r26, 0x11	; 17
    214e:	ec 93       	st	X, r30
    2150:	51 97       	sbiw	r26, 0x11	; 17
	cfont.numchars=fontbyte(3);
    2152:	fb 01       	movw	r30, r22
    2154:	33 96       	adiw	r30, 0x03	; 3
    2156:	64 91       	lpm	r22, Z
    2158:	52 96       	adiw	r26, 0x12	; 18
    215a:	6c 93       	st	X, r22
    215c:	08 95       	ret

0000215e <__subsf3>:
    215e:	50 58       	subi	r21, 0x80	; 128

00002160 <__addsf3>:
    2160:	bb 27       	eor	r27, r27
    2162:	aa 27       	eor	r26, r26
    2164:	0e 94 c7 10 	call	0x218e	; 0x218e <__addsf3x>
    2168:	0c 94 71 12 	jmp	0x24e2	; 0x24e2 <__fp_round>
    216c:	0e 94 38 12 	call	0x2470	; 0x2470 <__fp_pscA>
    2170:	38 f0       	brcs	.+14     	; 0x2180 <__addsf3+0x20>
    2172:	0e 94 3f 12 	call	0x247e	; 0x247e <__fp_pscB>
    2176:	20 f0       	brcs	.+8      	; 0x2180 <__addsf3+0x20>
    2178:	39 f4       	brne	.+14     	; 0x2188 <__addsf3+0x28>
    217a:	9f 3f       	cpi	r25, 0xFF	; 255
    217c:	19 f4       	brne	.+6      	; 0x2184 <__addsf3+0x24>
    217e:	26 f4       	brtc	.+8      	; 0x2188 <__addsf3+0x28>
    2180:	0c 94 35 12 	jmp	0x246a	; 0x246a <__fp_nan>
    2184:	0e f4       	brtc	.+2      	; 0x2188 <__addsf3+0x28>
    2186:	e0 95       	com	r30
    2188:	e7 fb       	bst	r30, 7
    218a:	0c 94 2f 12 	jmp	0x245e	; 0x245e <__fp_inf>

0000218e <__addsf3x>:
    218e:	e9 2f       	mov	r30, r25
    2190:	0e 94 96 12 	call	0x252c	; 0x252c <__fp_split3>
    2194:	58 f3       	brcs	.-42     	; 0x216c <__addsf3+0xc>
    2196:	ba 17       	cp	r27, r26
    2198:	62 07       	cpc	r22, r18
    219a:	73 07       	cpc	r23, r19
    219c:	84 07       	cpc	r24, r20
    219e:	95 07       	cpc	r25, r21
    21a0:	20 f0       	brcs	.+8      	; 0x21aa <__addsf3x+0x1c>
    21a2:	79 f4       	brne	.+30     	; 0x21c2 <__addsf3x+0x34>
    21a4:	a6 f5       	brtc	.+104    	; 0x220e <__addsf3x+0x80>
    21a6:	0c 94 b8 12 	jmp	0x2570	; 0x2570 <__fp_zero>
    21aa:	0e f4       	brtc	.+2      	; 0x21ae <__addsf3x+0x20>
    21ac:	e0 95       	com	r30
    21ae:	0b 2e       	mov	r0, r27
    21b0:	ba 2f       	mov	r27, r26
    21b2:	a0 2d       	mov	r26, r0
    21b4:	0b 01       	movw	r0, r22
    21b6:	b9 01       	movw	r22, r18
    21b8:	90 01       	movw	r18, r0
    21ba:	0c 01       	movw	r0, r24
    21bc:	ca 01       	movw	r24, r20
    21be:	a0 01       	movw	r20, r0
    21c0:	11 24       	eor	r1, r1
    21c2:	ff 27       	eor	r31, r31
    21c4:	59 1b       	sub	r21, r25
    21c6:	99 f0       	breq	.+38     	; 0x21ee <__addsf3x+0x60>
    21c8:	59 3f       	cpi	r21, 0xF9	; 249
    21ca:	50 f4       	brcc	.+20     	; 0x21e0 <__addsf3x+0x52>
    21cc:	50 3e       	cpi	r21, 0xE0	; 224
    21ce:	68 f1       	brcs	.+90     	; 0x222a <__addsf3x+0x9c>
    21d0:	1a 16       	cp	r1, r26
    21d2:	f0 40       	sbci	r31, 0x00	; 0
    21d4:	a2 2f       	mov	r26, r18
    21d6:	23 2f       	mov	r18, r19
    21d8:	34 2f       	mov	r19, r20
    21da:	44 27       	eor	r20, r20
    21dc:	58 5f       	subi	r21, 0xF8	; 248
    21de:	f3 cf       	rjmp	.-26     	; 0x21c6 <__addsf3x+0x38>
    21e0:	46 95       	lsr	r20
    21e2:	37 95       	ror	r19
    21e4:	27 95       	ror	r18
    21e6:	a7 95       	ror	r26
    21e8:	f0 40       	sbci	r31, 0x00	; 0
    21ea:	53 95       	inc	r21
    21ec:	c9 f7       	brne	.-14     	; 0x21e0 <__addsf3x+0x52>
    21ee:	7e f4       	brtc	.+30     	; 0x220e <__addsf3x+0x80>
    21f0:	1f 16       	cp	r1, r31
    21f2:	ba 0b       	sbc	r27, r26
    21f4:	62 0b       	sbc	r22, r18
    21f6:	73 0b       	sbc	r23, r19
    21f8:	84 0b       	sbc	r24, r20
    21fa:	ba f0       	brmi	.+46     	; 0x222a <__addsf3x+0x9c>
    21fc:	91 50       	subi	r25, 0x01	; 1
    21fe:	a1 f0       	breq	.+40     	; 0x2228 <__addsf3x+0x9a>
    2200:	ff 0f       	add	r31, r31
    2202:	bb 1f       	adc	r27, r27
    2204:	66 1f       	adc	r22, r22
    2206:	77 1f       	adc	r23, r23
    2208:	88 1f       	adc	r24, r24
    220a:	c2 f7       	brpl	.-16     	; 0x21fc <__addsf3x+0x6e>
    220c:	0e c0       	rjmp	.+28     	; 0x222a <__addsf3x+0x9c>
    220e:	ba 0f       	add	r27, r26
    2210:	62 1f       	adc	r22, r18
    2212:	73 1f       	adc	r23, r19
    2214:	84 1f       	adc	r24, r20
    2216:	48 f4       	brcc	.+18     	; 0x222a <__addsf3x+0x9c>
    2218:	87 95       	ror	r24
    221a:	77 95       	ror	r23
    221c:	67 95       	ror	r22
    221e:	b7 95       	ror	r27
    2220:	f7 95       	ror	r31
    2222:	9e 3f       	cpi	r25, 0xFE	; 254
    2224:	08 f0       	brcs	.+2      	; 0x2228 <__addsf3x+0x9a>
    2226:	b0 cf       	rjmp	.-160    	; 0x2188 <__addsf3+0x28>
    2228:	93 95       	inc	r25
    222a:	88 0f       	add	r24, r24
    222c:	08 f0       	brcs	.+2      	; 0x2230 <__addsf3x+0xa2>
    222e:	99 27       	eor	r25, r25
    2230:	ee 0f       	add	r30, r30
    2232:	97 95       	ror	r25
    2234:	87 95       	ror	r24
    2236:	08 95       	ret

00002238 <__cmpsf2>:
    2238:	0e 94 0b 12 	call	0x2416	; 0x2416 <__fp_cmp>
    223c:	08 f4       	brcc	.+2      	; 0x2240 <__cmpsf2+0x8>
    223e:	81 e0       	ldi	r24, 0x01	; 1
    2240:	08 95       	ret

00002242 <cos>:
    2242:	0e 94 48 12 	call	0x2490	; 0x2490 <__fp_rempio2>
    2246:	e3 95       	inc	r30
    2248:	0c 94 82 12 	jmp	0x2504	; 0x2504 <__fp_sinus>

0000224c <__divsf3>:
    224c:	0e 94 3a 11 	call	0x2274	; 0x2274 <__divsf3x>
    2250:	0c 94 71 12 	jmp	0x24e2	; 0x24e2 <__fp_round>
    2254:	0e 94 3f 12 	call	0x247e	; 0x247e <__fp_pscB>
    2258:	58 f0       	brcs	.+22     	; 0x2270 <__divsf3+0x24>
    225a:	0e 94 38 12 	call	0x2470	; 0x2470 <__fp_pscA>
    225e:	40 f0       	brcs	.+16     	; 0x2270 <__divsf3+0x24>
    2260:	29 f4       	brne	.+10     	; 0x226c <__divsf3+0x20>
    2262:	5f 3f       	cpi	r21, 0xFF	; 255
    2264:	29 f0       	breq	.+10     	; 0x2270 <__divsf3+0x24>
    2266:	0c 94 2f 12 	jmp	0x245e	; 0x245e <__fp_inf>
    226a:	51 11       	cpse	r21, r1
    226c:	0c 94 b9 12 	jmp	0x2572	; 0x2572 <__fp_szero>
    2270:	0c 94 35 12 	jmp	0x246a	; 0x246a <__fp_nan>

00002274 <__divsf3x>:
    2274:	0e 94 96 12 	call	0x252c	; 0x252c <__fp_split3>
    2278:	68 f3       	brcs	.-38     	; 0x2254 <__divsf3+0x8>

0000227a <__divsf3_pse>:
    227a:	99 23       	and	r25, r25
    227c:	b1 f3       	breq	.-20     	; 0x226a <__divsf3+0x1e>
    227e:	55 23       	and	r21, r21
    2280:	91 f3       	breq	.-28     	; 0x2266 <__divsf3+0x1a>
    2282:	95 1b       	sub	r25, r21
    2284:	55 0b       	sbc	r21, r21
    2286:	bb 27       	eor	r27, r27
    2288:	aa 27       	eor	r26, r26
    228a:	62 17       	cp	r22, r18
    228c:	73 07       	cpc	r23, r19
    228e:	84 07       	cpc	r24, r20
    2290:	38 f0       	brcs	.+14     	; 0x22a0 <__divsf3_pse+0x26>
    2292:	9f 5f       	subi	r25, 0xFF	; 255
    2294:	5f 4f       	sbci	r21, 0xFF	; 255
    2296:	22 0f       	add	r18, r18
    2298:	33 1f       	adc	r19, r19
    229a:	44 1f       	adc	r20, r20
    229c:	aa 1f       	adc	r26, r26
    229e:	a9 f3       	breq	.-22     	; 0x228a <__divsf3_pse+0x10>
    22a0:	35 d0       	rcall	.+106    	; 0x230c <__divsf3_pse+0x92>
    22a2:	0e 2e       	mov	r0, r30
    22a4:	3a f0       	brmi	.+14     	; 0x22b4 <__divsf3_pse+0x3a>
    22a6:	e0 e8       	ldi	r30, 0x80	; 128
    22a8:	32 d0       	rcall	.+100    	; 0x230e <__divsf3_pse+0x94>
    22aa:	91 50       	subi	r25, 0x01	; 1
    22ac:	50 40       	sbci	r21, 0x00	; 0
    22ae:	e6 95       	lsr	r30
    22b0:	00 1c       	adc	r0, r0
    22b2:	ca f7       	brpl	.-14     	; 0x22a6 <__divsf3_pse+0x2c>
    22b4:	2b d0       	rcall	.+86     	; 0x230c <__divsf3_pse+0x92>
    22b6:	fe 2f       	mov	r31, r30
    22b8:	29 d0       	rcall	.+82     	; 0x230c <__divsf3_pse+0x92>
    22ba:	66 0f       	add	r22, r22
    22bc:	77 1f       	adc	r23, r23
    22be:	88 1f       	adc	r24, r24
    22c0:	bb 1f       	adc	r27, r27
    22c2:	26 17       	cp	r18, r22
    22c4:	37 07       	cpc	r19, r23
    22c6:	48 07       	cpc	r20, r24
    22c8:	ab 07       	cpc	r26, r27
    22ca:	b0 e8       	ldi	r27, 0x80	; 128
    22cc:	09 f0       	breq	.+2      	; 0x22d0 <__divsf3_pse+0x56>
    22ce:	bb 0b       	sbc	r27, r27
    22d0:	80 2d       	mov	r24, r0
    22d2:	bf 01       	movw	r22, r30
    22d4:	ff 27       	eor	r31, r31
    22d6:	93 58       	subi	r25, 0x83	; 131
    22d8:	5f 4f       	sbci	r21, 0xFF	; 255
    22da:	3a f0       	brmi	.+14     	; 0x22ea <__divsf3_pse+0x70>
    22dc:	9e 3f       	cpi	r25, 0xFE	; 254
    22de:	51 05       	cpc	r21, r1
    22e0:	78 f0       	brcs	.+30     	; 0x2300 <__divsf3_pse+0x86>
    22e2:	0c 94 2f 12 	jmp	0x245e	; 0x245e <__fp_inf>
    22e6:	0c 94 b9 12 	jmp	0x2572	; 0x2572 <__fp_szero>
    22ea:	5f 3f       	cpi	r21, 0xFF	; 255
    22ec:	e4 f3       	brlt	.-8      	; 0x22e6 <__divsf3_pse+0x6c>
    22ee:	98 3e       	cpi	r25, 0xE8	; 232
    22f0:	d4 f3       	brlt	.-12     	; 0x22e6 <__divsf3_pse+0x6c>
    22f2:	86 95       	lsr	r24
    22f4:	77 95       	ror	r23
    22f6:	67 95       	ror	r22
    22f8:	b7 95       	ror	r27
    22fa:	f7 95       	ror	r31
    22fc:	9f 5f       	subi	r25, 0xFF	; 255
    22fe:	c9 f7       	brne	.-14     	; 0x22f2 <__divsf3_pse+0x78>
    2300:	88 0f       	add	r24, r24
    2302:	91 1d       	adc	r25, r1
    2304:	96 95       	lsr	r25
    2306:	87 95       	ror	r24
    2308:	97 f9       	bld	r25, 7
    230a:	08 95       	ret
    230c:	e1 e0       	ldi	r30, 0x01	; 1
    230e:	66 0f       	add	r22, r22
    2310:	77 1f       	adc	r23, r23
    2312:	88 1f       	adc	r24, r24
    2314:	bb 1f       	adc	r27, r27
    2316:	62 17       	cp	r22, r18
    2318:	73 07       	cpc	r23, r19
    231a:	84 07       	cpc	r24, r20
    231c:	ba 07       	cpc	r27, r26
    231e:	20 f0       	brcs	.+8      	; 0x2328 <__divsf3_pse+0xae>
    2320:	62 1b       	sub	r22, r18
    2322:	73 0b       	sbc	r23, r19
    2324:	84 0b       	sbc	r24, r20
    2326:	ba 0b       	sbc	r27, r26
    2328:	ee 1f       	adc	r30, r30
    232a:	88 f7       	brcc	.-30     	; 0x230e <__divsf3_pse+0x94>
    232c:	e0 95       	com	r30
    232e:	08 95       	ret

00002330 <__fixsfsi>:
    2330:	0e 94 9f 11 	call	0x233e	; 0x233e <__fixunssfsi>
    2334:	68 94       	set
    2336:	b1 11       	cpse	r27, r1
    2338:	0c 94 b9 12 	jmp	0x2572	; 0x2572 <__fp_szero>
    233c:	08 95       	ret

0000233e <__fixunssfsi>:
    233e:	0e 94 9e 12 	call	0x253c	; 0x253c <__fp_splitA>
    2342:	88 f0       	brcs	.+34     	; 0x2366 <__fixunssfsi+0x28>
    2344:	9f 57       	subi	r25, 0x7F	; 127
    2346:	98 f0       	brcs	.+38     	; 0x236e <__fixunssfsi+0x30>
    2348:	b9 2f       	mov	r27, r25
    234a:	99 27       	eor	r25, r25
    234c:	b7 51       	subi	r27, 0x17	; 23
    234e:	b0 f0       	brcs	.+44     	; 0x237c <__fixunssfsi+0x3e>
    2350:	e1 f0       	breq	.+56     	; 0x238a <__fixunssfsi+0x4c>
    2352:	66 0f       	add	r22, r22
    2354:	77 1f       	adc	r23, r23
    2356:	88 1f       	adc	r24, r24
    2358:	99 1f       	adc	r25, r25
    235a:	1a f0       	brmi	.+6      	; 0x2362 <__fixunssfsi+0x24>
    235c:	ba 95       	dec	r27
    235e:	c9 f7       	brne	.-14     	; 0x2352 <__fixunssfsi+0x14>
    2360:	14 c0       	rjmp	.+40     	; 0x238a <__fixunssfsi+0x4c>
    2362:	b1 30       	cpi	r27, 0x01	; 1
    2364:	91 f0       	breq	.+36     	; 0x238a <__fixunssfsi+0x4c>
    2366:	0e 94 b8 12 	call	0x2570	; 0x2570 <__fp_zero>
    236a:	b1 e0       	ldi	r27, 0x01	; 1
    236c:	08 95       	ret
    236e:	0c 94 b8 12 	jmp	0x2570	; 0x2570 <__fp_zero>
    2372:	67 2f       	mov	r22, r23
    2374:	78 2f       	mov	r23, r24
    2376:	88 27       	eor	r24, r24
    2378:	b8 5f       	subi	r27, 0xF8	; 248
    237a:	39 f0       	breq	.+14     	; 0x238a <__fixunssfsi+0x4c>
    237c:	b9 3f       	cpi	r27, 0xF9	; 249
    237e:	cc f3       	brlt	.-14     	; 0x2372 <__fixunssfsi+0x34>
    2380:	86 95       	lsr	r24
    2382:	77 95       	ror	r23
    2384:	67 95       	ror	r22
    2386:	b3 95       	inc	r27
    2388:	d9 f7       	brne	.-10     	; 0x2380 <__fixunssfsi+0x42>
    238a:	3e f4       	brtc	.+14     	; 0x239a <__fixunssfsi+0x5c>
    238c:	90 95       	com	r25
    238e:	80 95       	com	r24
    2390:	70 95       	com	r23
    2392:	61 95       	neg	r22
    2394:	7f 4f       	sbci	r23, 0xFF	; 255
    2396:	8f 4f       	sbci	r24, 0xFF	; 255
    2398:	9f 4f       	sbci	r25, 0xFF	; 255
    239a:	08 95       	ret

0000239c <__floatunsisf>:
    239c:	e8 94       	clt
    239e:	09 c0       	rjmp	.+18     	; 0x23b2 <__floatsisf+0x12>

000023a0 <__floatsisf>:
    23a0:	97 fb       	bst	r25, 7
    23a2:	3e f4       	brtc	.+14     	; 0x23b2 <__floatsisf+0x12>
    23a4:	90 95       	com	r25
    23a6:	80 95       	com	r24
    23a8:	70 95       	com	r23
    23aa:	61 95       	neg	r22
    23ac:	7f 4f       	sbci	r23, 0xFF	; 255
    23ae:	8f 4f       	sbci	r24, 0xFF	; 255
    23b0:	9f 4f       	sbci	r25, 0xFF	; 255
    23b2:	99 23       	and	r25, r25
    23b4:	a9 f0       	breq	.+42     	; 0x23e0 <__floatsisf+0x40>
    23b6:	f9 2f       	mov	r31, r25
    23b8:	96 e9       	ldi	r25, 0x96	; 150
    23ba:	bb 27       	eor	r27, r27
    23bc:	93 95       	inc	r25
    23be:	f6 95       	lsr	r31
    23c0:	87 95       	ror	r24
    23c2:	77 95       	ror	r23
    23c4:	67 95       	ror	r22
    23c6:	b7 95       	ror	r27
    23c8:	f1 11       	cpse	r31, r1
    23ca:	f8 cf       	rjmp	.-16     	; 0x23bc <__floatsisf+0x1c>
    23cc:	fa f4       	brpl	.+62     	; 0x240c <__floatsisf+0x6c>
    23ce:	bb 0f       	add	r27, r27
    23d0:	11 f4       	brne	.+4      	; 0x23d6 <__floatsisf+0x36>
    23d2:	60 ff       	sbrs	r22, 0
    23d4:	1b c0       	rjmp	.+54     	; 0x240c <__floatsisf+0x6c>
    23d6:	6f 5f       	subi	r22, 0xFF	; 255
    23d8:	7f 4f       	sbci	r23, 0xFF	; 255
    23da:	8f 4f       	sbci	r24, 0xFF	; 255
    23dc:	9f 4f       	sbci	r25, 0xFF	; 255
    23de:	16 c0       	rjmp	.+44     	; 0x240c <__floatsisf+0x6c>
    23e0:	88 23       	and	r24, r24
    23e2:	11 f0       	breq	.+4      	; 0x23e8 <__floatsisf+0x48>
    23e4:	96 e9       	ldi	r25, 0x96	; 150
    23e6:	11 c0       	rjmp	.+34     	; 0x240a <__floatsisf+0x6a>
    23e8:	77 23       	and	r23, r23
    23ea:	21 f0       	breq	.+8      	; 0x23f4 <__floatsisf+0x54>
    23ec:	9e e8       	ldi	r25, 0x8E	; 142
    23ee:	87 2f       	mov	r24, r23
    23f0:	76 2f       	mov	r23, r22
    23f2:	05 c0       	rjmp	.+10     	; 0x23fe <__floatsisf+0x5e>
    23f4:	66 23       	and	r22, r22
    23f6:	71 f0       	breq	.+28     	; 0x2414 <__floatsisf+0x74>
    23f8:	96 e8       	ldi	r25, 0x86	; 134
    23fa:	86 2f       	mov	r24, r22
    23fc:	70 e0       	ldi	r23, 0x00	; 0
    23fe:	60 e0       	ldi	r22, 0x00	; 0
    2400:	2a f0       	brmi	.+10     	; 0x240c <__floatsisf+0x6c>
    2402:	9a 95       	dec	r25
    2404:	66 0f       	add	r22, r22
    2406:	77 1f       	adc	r23, r23
    2408:	88 1f       	adc	r24, r24
    240a:	da f7       	brpl	.-10     	; 0x2402 <__floatsisf+0x62>
    240c:	88 0f       	add	r24, r24
    240e:	96 95       	lsr	r25
    2410:	87 95       	ror	r24
    2412:	97 f9       	bld	r25, 7
    2414:	08 95       	ret

00002416 <__fp_cmp>:
    2416:	99 0f       	add	r25, r25
    2418:	00 08       	sbc	r0, r0
    241a:	55 0f       	add	r21, r21
    241c:	aa 0b       	sbc	r26, r26
    241e:	e0 e8       	ldi	r30, 0x80	; 128
    2420:	fe ef       	ldi	r31, 0xFE	; 254
    2422:	16 16       	cp	r1, r22
    2424:	17 06       	cpc	r1, r23
    2426:	e8 07       	cpc	r30, r24
    2428:	f9 07       	cpc	r31, r25
    242a:	c0 f0       	brcs	.+48     	; 0x245c <__fp_cmp+0x46>
    242c:	12 16       	cp	r1, r18
    242e:	13 06       	cpc	r1, r19
    2430:	e4 07       	cpc	r30, r20
    2432:	f5 07       	cpc	r31, r21
    2434:	98 f0       	brcs	.+38     	; 0x245c <__fp_cmp+0x46>
    2436:	62 1b       	sub	r22, r18
    2438:	73 0b       	sbc	r23, r19
    243a:	84 0b       	sbc	r24, r20
    243c:	95 0b       	sbc	r25, r21
    243e:	39 f4       	brne	.+14     	; 0x244e <__fp_cmp+0x38>
    2440:	0a 26       	eor	r0, r26
    2442:	61 f0       	breq	.+24     	; 0x245c <__fp_cmp+0x46>
    2444:	23 2b       	or	r18, r19
    2446:	24 2b       	or	r18, r20
    2448:	25 2b       	or	r18, r21
    244a:	21 f4       	brne	.+8      	; 0x2454 <__fp_cmp+0x3e>
    244c:	08 95       	ret
    244e:	0a 26       	eor	r0, r26
    2450:	09 f4       	brne	.+2      	; 0x2454 <__fp_cmp+0x3e>
    2452:	a1 40       	sbci	r26, 0x01	; 1
    2454:	a6 95       	lsr	r26
    2456:	8f ef       	ldi	r24, 0xFF	; 255
    2458:	81 1d       	adc	r24, r1
    245a:	81 1d       	adc	r24, r1
    245c:	08 95       	ret

0000245e <__fp_inf>:
    245e:	97 f9       	bld	r25, 7
    2460:	9f 67       	ori	r25, 0x7F	; 127
    2462:	80 e8       	ldi	r24, 0x80	; 128
    2464:	70 e0       	ldi	r23, 0x00	; 0
    2466:	60 e0       	ldi	r22, 0x00	; 0
    2468:	08 95       	ret

0000246a <__fp_nan>:
    246a:	9f ef       	ldi	r25, 0xFF	; 255
    246c:	80 ec       	ldi	r24, 0xC0	; 192
    246e:	08 95       	ret

00002470 <__fp_pscA>:
    2470:	00 24       	eor	r0, r0
    2472:	0a 94       	dec	r0
    2474:	16 16       	cp	r1, r22
    2476:	17 06       	cpc	r1, r23
    2478:	18 06       	cpc	r1, r24
    247a:	09 06       	cpc	r0, r25
    247c:	08 95       	ret

0000247e <__fp_pscB>:
    247e:	00 24       	eor	r0, r0
    2480:	0a 94       	dec	r0
    2482:	12 16       	cp	r1, r18
    2484:	13 06       	cpc	r1, r19
    2486:	14 06       	cpc	r1, r20
    2488:	05 06       	cpc	r0, r21
    248a:	08 95       	ret
    248c:	0c 94 35 12 	jmp	0x246a	; 0x246a <__fp_nan>

00002490 <__fp_rempio2>:
    2490:	0e 94 9e 12 	call	0x253c	; 0x253c <__fp_splitA>
    2494:	d8 f3       	brcs	.-10     	; 0x248c <__fp_pscB+0xe>
    2496:	e8 94       	clt
    2498:	e0 e0       	ldi	r30, 0x00	; 0
    249a:	bb 27       	eor	r27, r27
    249c:	9f 57       	subi	r25, 0x7F	; 127
    249e:	f0 f0       	brcs	.+60     	; 0x24dc <__fp_rempio2+0x4c>
    24a0:	2a ed       	ldi	r18, 0xDA	; 218
    24a2:	3f e0       	ldi	r19, 0x0F	; 15
    24a4:	49 ec       	ldi	r20, 0xC9	; 201
    24a6:	06 c0       	rjmp	.+12     	; 0x24b4 <__fp_rempio2+0x24>
    24a8:	ee 0f       	add	r30, r30
    24aa:	bb 0f       	add	r27, r27
    24ac:	66 1f       	adc	r22, r22
    24ae:	77 1f       	adc	r23, r23
    24b0:	88 1f       	adc	r24, r24
    24b2:	28 f0       	brcs	.+10     	; 0x24be <__fp_rempio2+0x2e>
    24b4:	b2 3a       	cpi	r27, 0xA2	; 162
    24b6:	62 07       	cpc	r22, r18
    24b8:	73 07       	cpc	r23, r19
    24ba:	84 07       	cpc	r24, r20
    24bc:	28 f0       	brcs	.+10     	; 0x24c8 <__fp_rempio2+0x38>
    24be:	b2 5a       	subi	r27, 0xA2	; 162
    24c0:	62 0b       	sbc	r22, r18
    24c2:	73 0b       	sbc	r23, r19
    24c4:	84 0b       	sbc	r24, r20
    24c6:	e3 95       	inc	r30
    24c8:	9a 95       	dec	r25
    24ca:	72 f7       	brpl	.-36     	; 0x24a8 <__fp_rempio2+0x18>
    24cc:	80 38       	cpi	r24, 0x80	; 128
    24ce:	30 f4       	brcc	.+12     	; 0x24dc <__fp_rempio2+0x4c>
    24d0:	9a 95       	dec	r25
    24d2:	bb 0f       	add	r27, r27
    24d4:	66 1f       	adc	r22, r22
    24d6:	77 1f       	adc	r23, r23
    24d8:	88 1f       	adc	r24, r24
    24da:	d2 f7       	brpl	.-12     	; 0x24d0 <__fp_rempio2+0x40>
    24dc:	90 48       	sbci	r25, 0x80	; 128
    24de:	0c 94 36 13 	jmp	0x266c	; 0x266c <__fp_mpack_finite>

000024e2 <__fp_round>:
    24e2:	09 2e       	mov	r0, r25
    24e4:	03 94       	inc	r0
    24e6:	00 0c       	add	r0, r0
    24e8:	11 f4       	brne	.+4      	; 0x24ee <__fp_round+0xc>
    24ea:	88 23       	and	r24, r24
    24ec:	52 f0       	brmi	.+20     	; 0x2502 <__fp_round+0x20>
    24ee:	bb 0f       	add	r27, r27
    24f0:	40 f4       	brcc	.+16     	; 0x2502 <__fp_round+0x20>
    24f2:	bf 2b       	or	r27, r31
    24f4:	11 f4       	brne	.+4      	; 0x24fa <__fp_round+0x18>
    24f6:	60 ff       	sbrs	r22, 0
    24f8:	04 c0       	rjmp	.+8      	; 0x2502 <__fp_round+0x20>
    24fa:	6f 5f       	subi	r22, 0xFF	; 255
    24fc:	7f 4f       	sbci	r23, 0xFF	; 255
    24fe:	8f 4f       	sbci	r24, 0xFF	; 255
    2500:	9f 4f       	sbci	r25, 0xFF	; 255
    2502:	08 95       	ret

00002504 <__fp_sinus>:
    2504:	ef 93       	push	r30
    2506:	e0 ff       	sbrs	r30, 0
    2508:	07 c0       	rjmp	.+14     	; 0x2518 <__fp_sinus+0x14>
    250a:	a2 ea       	ldi	r26, 0xA2	; 162
    250c:	2a ed       	ldi	r18, 0xDA	; 218
    250e:	3f e0       	ldi	r19, 0x0F	; 15
    2510:	49 ec       	ldi	r20, 0xC9	; 201
    2512:	5f eb       	ldi	r21, 0xBF	; 191
    2514:	0e 94 c7 10 	call	0x218e	; 0x218e <__addsf3x>
    2518:	0e 94 71 12 	call	0x24e2	; 0x24e2 <__fp_round>
    251c:	0f 90       	pop	r0
    251e:	03 94       	inc	r0
    2520:	01 fc       	sbrc	r0, 1
    2522:	90 58       	subi	r25, 0x80	; 128
    2524:	e4 e5       	ldi	r30, 0x54	; 84
    2526:	f0 e0       	ldi	r31, 0x00	; 0
    2528:	0c 94 42 13 	jmp	0x2684	; 0x2684 <__fp_powsodd>

0000252c <__fp_split3>:
    252c:	57 fd       	sbrc	r21, 7
    252e:	90 58       	subi	r25, 0x80	; 128
    2530:	44 0f       	add	r20, r20
    2532:	55 1f       	adc	r21, r21
    2534:	59 f0       	breq	.+22     	; 0x254c <__fp_splitA+0x10>
    2536:	5f 3f       	cpi	r21, 0xFF	; 255
    2538:	71 f0       	breq	.+28     	; 0x2556 <__fp_splitA+0x1a>
    253a:	47 95       	ror	r20

0000253c <__fp_splitA>:
    253c:	88 0f       	add	r24, r24
    253e:	97 fb       	bst	r25, 7
    2540:	99 1f       	adc	r25, r25
    2542:	61 f0       	breq	.+24     	; 0x255c <__fp_splitA+0x20>
    2544:	9f 3f       	cpi	r25, 0xFF	; 255
    2546:	79 f0       	breq	.+30     	; 0x2566 <__fp_splitA+0x2a>
    2548:	87 95       	ror	r24
    254a:	08 95       	ret
    254c:	12 16       	cp	r1, r18
    254e:	13 06       	cpc	r1, r19
    2550:	14 06       	cpc	r1, r20
    2552:	55 1f       	adc	r21, r21
    2554:	f2 cf       	rjmp	.-28     	; 0x253a <__fp_split3+0xe>
    2556:	46 95       	lsr	r20
    2558:	f1 df       	rcall	.-30     	; 0x253c <__fp_splitA>
    255a:	08 c0       	rjmp	.+16     	; 0x256c <__fp_splitA+0x30>
    255c:	16 16       	cp	r1, r22
    255e:	17 06       	cpc	r1, r23
    2560:	18 06       	cpc	r1, r24
    2562:	99 1f       	adc	r25, r25
    2564:	f1 cf       	rjmp	.-30     	; 0x2548 <__fp_splitA+0xc>
    2566:	86 95       	lsr	r24
    2568:	71 05       	cpc	r23, r1
    256a:	61 05       	cpc	r22, r1
    256c:	08 94       	sec
    256e:	08 95       	ret

00002570 <__fp_zero>:
    2570:	e8 94       	clt

00002572 <__fp_szero>:
    2572:	bb 27       	eor	r27, r27
    2574:	66 27       	eor	r22, r22
    2576:	77 27       	eor	r23, r23
    2578:	cb 01       	movw	r24, r22
    257a:	97 f9       	bld	r25, 7
    257c:	08 95       	ret

0000257e <__mulsf3>:
    257e:	0e 94 d2 12 	call	0x25a4	; 0x25a4 <__mulsf3x>
    2582:	0c 94 71 12 	jmp	0x24e2	; 0x24e2 <__fp_round>
    2586:	0e 94 38 12 	call	0x2470	; 0x2470 <__fp_pscA>
    258a:	38 f0       	brcs	.+14     	; 0x259a <__mulsf3+0x1c>
    258c:	0e 94 3f 12 	call	0x247e	; 0x247e <__fp_pscB>
    2590:	20 f0       	brcs	.+8      	; 0x259a <__mulsf3+0x1c>
    2592:	95 23       	and	r25, r21
    2594:	11 f0       	breq	.+4      	; 0x259a <__mulsf3+0x1c>
    2596:	0c 94 2f 12 	jmp	0x245e	; 0x245e <__fp_inf>
    259a:	0c 94 35 12 	jmp	0x246a	; 0x246a <__fp_nan>
    259e:	11 24       	eor	r1, r1
    25a0:	0c 94 b9 12 	jmp	0x2572	; 0x2572 <__fp_szero>

000025a4 <__mulsf3x>:
    25a4:	0e 94 96 12 	call	0x252c	; 0x252c <__fp_split3>
    25a8:	70 f3       	brcs	.-36     	; 0x2586 <__mulsf3+0x8>

000025aa <__mulsf3_pse>:
    25aa:	95 9f       	mul	r25, r21
    25ac:	c1 f3       	breq	.-16     	; 0x259e <__mulsf3+0x20>
    25ae:	95 0f       	add	r25, r21
    25b0:	50 e0       	ldi	r21, 0x00	; 0
    25b2:	55 1f       	adc	r21, r21
    25b4:	62 9f       	mul	r22, r18
    25b6:	f0 01       	movw	r30, r0
    25b8:	72 9f       	mul	r23, r18
    25ba:	bb 27       	eor	r27, r27
    25bc:	f0 0d       	add	r31, r0
    25be:	b1 1d       	adc	r27, r1
    25c0:	63 9f       	mul	r22, r19
    25c2:	aa 27       	eor	r26, r26
    25c4:	f0 0d       	add	r31, r0
    25c6:	b1 1d       	adc	r27, r1
    25c8:	aa 1f       	adc	r26, r26
    25ca:	64 9f       	mul	r22, r20
    25cc:	66 27       	eor	r22, r22
    25ce:	b0 0d       	add	r27, r0
    25d0:	a1 1d       	adc	r26, r1
    25d2:	66 1f       	adc	r22, r22
    25d4:	82 9f       	mul	r24, r18
    25d6:	22 27       	eor	r18, r18
    25d8:	b0 0d       	add	r27, r0
    25da:	a1 1d       	adc	r26, r1
    25dc:	62 1f       	adc	r22, r18
    25de:	73 9f       	mul	r23, r19
    25e0:	b0 0d       	add	r27, r0
    25e2:	a1 1d       	adc	r26, r1
    25e4:	62 1f       	adc	r22, r18
    25e6:	83 9f       	mul	r24, r19
    25e8:	a0 0d       	add	r26, r0
    25ea:	61 1d       	adc	r22, r1
    25ec:	22 1f       	adc	r18, r18
    25ee:	74 9f       	mul	r23, r20
    25f0:	33 27       	eor	r19, r19
    25f2:	a0 0d       	add	r26, r0
    25f4:	61 1d       	adc	r22, r1
    25f6:	23 1f       	adc	r18, r19
    25f8:	84 9f       	mul	r24, r20
    25fa:	60 0d       	add	r22, r0
    25fc:	21 1d       	adc	r18, r1
    25fe:	82 2f       	mov	r24, r18
    2600:	76 2f       	mov	r23, r22
    2602:	6a 2f       	mov	r22, r26
    2604:	11 24       	eor	r1, r1
    2606:	9f 57       	subi	r25, 0x7F	; 127
    2608:	50 40       	sbci	r21, 0x00	; 0
    260a:	9a f0       	brmi	.+38     	; 0x2632 <__mulsf3_pse+0x88>
    260c:	f1 f0       	breq	.+60     	; 0x264a <__mulsf3_pse+0xa0>
    260e:	88 23       	and	r24, r24
    2610:	4a f0       	brmi	.+18     	; 0x2624 <__mulsf3_pse+0x7a>
    2612:	ee 0f       	add	r30, r30
    2614:	ff 1f       	adc	r31, r31
    2616:	bb 1f       	adc	r27, r27
    2618:	66 1f       	adc	r22, r22
    261a:	77 1f       	adc	r23, r23
    261c:	88 1f       	adc	r24, r24
    261e:	91 50       	subi	r25, 0x01	; 1
    2620:	50 40       	sbci	r21, 0x00	; 0
    2622:	a9 f7       	brne	.-22     	; 0x260e <__mulsf3_pse+0x64>
    2624:	9e 3f       	cpi	r25, 0xFE	; 254
    2626:	51 05       	cpc	r21, r1
    2628:	80 f0       	brcs	.+32     	; 0x264a <__mulsf3_pse+0xa0>
    262a:	0c 94 2f 12 	jmp	0x245e	; 0x245e <__fp_inf>
    262e:	0c 94 b9 12 	jmp	0x2572	; 0x2572 <__fp_szero>
    2632:	5f 3f       	cpi	r21, 0xFF	; 255
    2634:	e4 f3       	brlt	.-8      	; 0x262e <__mulsf3_pse+0x84>
    2636:	98 3e       	cpi	r25, 0xE8	; 232
    2638:	d4 f3       	brlt	.-12     	; 0x262e <__mulsf3_pse+0x84>
    263a:	86 95       	lsr	r24
    263c:	77 95       	ror	r23
    263e:	67 95       	ror	r22
    2640:	b7 95       	ror	r27
    2642:	f7 95       	ror	r31
    2644:	e7 95       	ror	r30
    2646:	9f 5f       	subi	r25, 0xFF	; 255
    2648:	c1 f7       	brne	.-16     	; 0x263a <__mulsf3_pse+0x90>
    264a:	fe 2b       	or	r31, r30
    264c:	88 0f       	add	r24, r24
    264e:	91 1d       	adc	r25, r1
    2650:	96 95       	lsr	r25
    2652:	87 95       	ror	r24
    2654:	97 f9       	bld	r25, 7
    2656:	08 95       	ret

00002658 <sin>:
    2658:	9f 93       	push	r25
    265a:	0e 94 48 12 	call	0x2490	; 0x2490 <__fp_rempio2>
    265e:	0f 90       	pop	r0
    2660:	07 fc       	sbrc	r0, 7
    2662:	ee 5f       	subi	r30, 0xFE	; 254
    2664:	0c 94 82 12 	jmp	0x2504	; 0x2504 <__fp_sinus>

00002668 <__fp_mpack>:
    2668:	9f 3f       	cpi	r25, 0xFF	; 255
    266a:	31 f0       	breq	.+12     	; 0x2678 <__fp_mpack_finite+0xc>

0000266c <__fp_mpack_finite>:
    266c:	91 50       	subi	r25, 0x01	; 1
    266e:	20 f4       	brcc	.+8      	; 0x2678 <__fp_mpack_finite+0xc>
    2670:	87 95       	ror	r24
    2672:	77 95       	ror	r23
    2674:	67 95       	ror	r22
    2676:	b7 95       	ror	r27
    2678:	88 0f       	add	r24, r24
    267a:	91 1d       	adc	r25, r1
    267c:	96 95       	lsr	r25
    267e:	87 95       	ror	r24
    2680:	97 f9       	bld	r25, 7
    2682:	08 95       	ret

00002684 <__fp_powsodd>:
    2684:	9f 93       	push	r25
    2686:	8f 93       	push	r24
    2688:	7f 93       	push	r23
    268a:	6f 93       	push	r22
    268c:	ff 93       	push	r31
    268e:	ef 93       	push	r30
    2690:	9b 01       	movw	r18, r22
    2692:	ac 01       	movw	r20, r24
    2694:	0e 94 bf 12 	call	0x257e	; 0x257e <__mulsf3>
    2698:	ef 91       	pop	r30
    269a:	ff 91       	pop	r31
    269c:	0e 94 56 13 	call	0x26ac	; 0x26ac <__fp_powser>
    26a0:	2f 91       	pop	r18
    26a2:	3f 91       	pop	r19
    26a4:	4f 91       	pop	r20
    26a6:	5f 91       	pop	r21
    26a8:	0c 94 bf 12 	jmp	0x257e	; 0x257e <__mulsf3>

000026ac <__fp_powser>:
    26ac:	df 93       	push	r29
    26ae:	cf 93       	push	r28
    26b0:	1f 93       	push	r17
    26b2:	0f 93       	push	r16
    26b4:	ff 92       	push	r15
    26b6:	ef 92       	push	r14
    26b8:	df 92       	push	r13
    26ba:	7b 01       	movw	r14, r22
    26bc:	8c 01       	movw	r16, r24
    26be:	68 94       	set
    26c0:	06 c0       	rjmp	.+12     	; 0x26ce <__fp_powser+0x22>
    26c2:	da 2e       	mov	r13, r26
    26c4:	ef 01       	movw	r28, r30
    26c6:	0e 94 d2 12 	call	0x25a4	; 0x25a4 <__mulsf3x>
    26ca:	fe 01       	movw	r30, r28
    26cc:	e8 94       	clt
    26ce:	a5 91       	lpm	r26, Z+
    26d0:	25 91       	lpm	r18, Z+
    26d2:	35 91       	lpm	r19, Z+
    26d4:	45 91       	lpm	r20, Z+
    26d6:	55 91       	lpm	r21, Z+
    26d8:	a6 f3       	brts	.-24     	; 0x26c2 <__fp_powser+0x16>
    26da:	ef 01       	movw	r28, r30
    26dc:	0e 94 c7 10 	call	0x218e	; 0x218e <__addsf3x>
    26e0:	fe 01       	movw	r30, r28
    26e2:	97 01       	movw	r18, r14
    26e4:	a8 01       	movw	r20, r16
    26e6:	da 94       	dec	r13
    26e8:	69 f7       	brne	.-38     	; 0x26c4 <__fp_powser+0x18>
    26ea:	df 90       	pop	r13
    26ec:	ef 90       	pop	r14
    26ee:	ff 90       	pop	r15
    26f0:	0f 91       	pop	r16
    26f2:	1f 91       	pop	r17
    26f4:	cf 91       	pop	r28
    26f6:	df 91       	pop	r29
    26f8:	08 95       	ret

000026fa <__mulsi3>:
    26fa:	db 01       	movw	r26, r22
    26fc:	8f 93       	push	r24
    26fe:	9f 93       	push	r25
    2700:	0e 94 ce 13 	call	0x279c	; 0x279c <__muluhisi3>
    2704:	bf 91       	pop	r27
    2706:	af 91       	pop	r26
    2708:	a2 9f       	mul	r26, r18
    270a:	80 0d       	add	r24, r0
    270c:	91 1d       	adc	r25, r1
    270e:	a3 9f       	mul	r26, r19
    2710:	90 0d       	add	r25, r0
    2712:	b2 9f       	mul	r27, r18
    2714:	90 0d       	add	r25, r0
    2716:	11 24       	eor	r1, r1
    2718:	08 95       	ret

0000271a <__udivmodsi4>:
    271a:	a1 e2       	ldi	r26, 0x21	; 33
    271c:	1a 2e       	mov	r1, r26
    271e:	aa 1b       	sub	r26, r26
    2720:	bb 1b       	sub	r27, r27
    2722:	fd 01       	movw	r30, r26
    2724:	0d c0       	rjmp	.+26     	; 0x2740 <__udivmodsi4_ep>

00002726 <__udivmodsi4_loop>:
    2726:	aa 1f       	adc	r26, r26
    2728:	bb 1f       	adc	r27, r27
    272a:	ee 1f       	adc	r30, r30
    272c:	ff 1f       	adc	r31, r31
    272e:	a2 17       	cp	r26, r18
    2730:	b3 07       	cpc	r27, r19
    2732:	e4 07       	cpc	r30, r20
    2734:	f5 07       	cpc	r31, r21
    2736:	20 f0       	brcs	.+8      	; 0x2740 <__udivmodsi4_ep>
    2738:	a2 1b       	sub	r26, r18
    273a:	b3 0b       	sbc	r27, r19
    273c:	e4 0b       	sbc	r30, r20
    273e:	f5 0b       	sbc	r31, r21

00002740 <__udivmodsi4_ep>:
    2740:	66 1f       	adc	r22, r22
    2742:	77 1f       	adc	r23, r23
    2744:	88 1f       	adc	r24, r24
    2746:	99 1f       	adc	r25, r25
    2748:	1a 94       	dec	r1
    274a:	69 f7       	brne	.-38     	; 0x2726 <__udivmodsi4_loop>
    274c:	60 95       	com	r22
    274e:	70 95       	com	r23
    2750:	80 95       	com	r24
    2752:	90 95       	com	r25
    2754:	9b 01       	movw	r18, r22
    2756:	ac 01       	movw	r20, r24
    2758:	bd 01       	movw	r22, r26
    275a:	cf 01       	movw	r24, r30
    275c:	08 95       	ret

0000275e <__divmodsi4>:
    275e:	05 2e       	mov	r0, r21
    2760:	97 fb       	bst	r25, 7
    2762:	1e f4       	brtc	.+6      	; 0x276a <__divmodsi4+0xc>
    2764:	00 94       	com	r0
    2766:	0e 94 c6 13 	call	0x278c	; 0x278c <__negsi2>
    276a:	57 fd       	sbrc	r21, 7
    276c:	07 d0       	rcall	.+14     	; 0x277c <__divmodsi4_neg2>
    276e:	0e 94 8d 13 	call	0x271a	; 0x271a <__udivmodsi4>
    2772:	07 fc       	sbrc	r0, 7
    2774:	03 d0       	rcall	.+6      	; 0x277c <__divmodsi4_neg2>
    2776:	4e f4       	brtc	.+18     	; 0x278a <__divmodsi4_exit>
    2778:	0c 94 c6 13 	jmp	0x278c	; 0x278c <__negsi2>

0000277c <__divmodsi4_neg2>:
    277c:	50 95       	com	r21
    277e:	40 95       	com	r20
    2780:	30 95       	com	r19
    2782:	21 95       	neg	r18
    2784:	3f 4f       	sbci	r19, 0xFF	; 255
    2786:	4f 4f       	sbci	r20, 0xFF	; 255
    2788:	5f 4f       	sbci	r21, 0xFF	; 255

0000278a <__divmodsi4_exit>:
    278a:	08 95       	ret

0000278c <__negsi2>:
    278c:	90 95       	com	r25
    278e:	80 95       	com	r24
    2790:	70 95       	com	r23
    2792:	61 95       	neg	r22
    2794:	7f 4f       	sbci	r23, 0xFF	; 255
    2796:	8f 4f       	sbci	r24, 0xFF	; 255
    2798:	9f 4f       	sbci	r25, 0xFF	; 255
    279a:	08 95       	ret

0000279c <__muluhisi3>:
    279c:	0e 94 e7 13 	call	0x27ce	; 0x27ce <__umulhisi3>
    27a0:	a5 9f       	mul	r26, r21
    27a2:	90 0d       	add	r25, r0
    27a4:	b4 9f       	mul	r27, r20
    27a6:	90 0d       	add	r25, r0
    27a8:	a4 9f       	mul	r26, r20
    27aa:	80 0d       	add	r24, r0
    27ac:	91 1d       	adc	r25, r1
    27ae:	11 24       	eor	r1, r1
    27b0:	08 95       	ret

000027b2 <__mulshisi3>:
    27b2:	b7 ff       	sbrs	r27, 7
    27b4:	0c 94 ce 13 	jmp	0x279c	; 0x279c <__muluhisi3>

000027b8 <__mulohisi3>:
    27b8:	0e 94 ce 13 	call	0x279c	; 0x279c <__muluhisi3>
    27bc:	82 1b       	sub	r24, r18
    27be:	93 0b       	sbc	r25, r19
    27c0:	08 95       	ret

000027c2 <__tablejump2__>:
    27c2:	ee 0f       	add	r30, r30
    27c4:	ff 1f       	adc	r31, r31
    27c6:	05 90       	lpm	r0, Z+
    27c8:	f4 91       	lpm	r31, Z
    27ca:	e0 2d       	mov	r30, r0
    27cc:	09 94       	ijmp

000027ce <__umulhisi3>:
    27ce:	a2 9f       	mul	r26, r18
    27d0:	b0 01       	movw	r22, r0
    27d2:	b3 9f       	mul	r27, r19
    27d4:	c0 01       	movw	r24, r0
    27d6:	a3 9f       	mul	r26, r19
    27d8:	70 0d       	add	r23, r0
    27da:	81 1d       	adc	r24, r1
    27dc:	11 24       	eor	r1, r1
    27de:	91 1d       	adc	r25, r1
    27e0:	b2 9f       	mul	r27, r18
    27e2:	70 0d       	add	r23, r0
    27e4:	81 1d       	adc	r24, r1
    27e6:	11 24       	eor	r1, r1
    27e8:	91 1d       	adc	r25, r1
    27ea:	08 95       	ret

000027ec <do_rand>:
    27ec:	8f 92       	push	r8
    27ee:	9f 92       	push	r9
    27f0:	af 92       	push	r10
    27f2:	bf 92       	push	r11
    27f4:	cf 92       	push	r12
    27f6:	df 92       	push	r13
    27f8:	ef 92       	push	r14
    27fa:	ff 92       	push	r15
    27fc:	cf 93       	push	r28
    27fe:	df 93       	push	r29
    2800:	ec 01       	movw	r28, r24
    2802:	68 81       	ld	r22, Y
    2804:	79 81       	ldd	r23, Y+1	; 0x01
    2806:	8a 81       	ldd	r24, Y+2	; 0x02
    2808:	9b 81       	ldd	r25, Y+3	; 0x03
    280a:	61 15       	cp	r22, r1
    280c:	71 05       	cpc	r23, r1
    280e:	81 05       	cpc	r24, r1
    2810:	91 05       	cpc	r25, r1
    2812:	21 f4       	brne	.+8      	; 0x281c <do_rand+0x30>
    2814:	64 e2       	ldi	r22, 0x24	; 36
    2816:	79 ed       	ldi	r23, 0xD9	; 217
    2818:	8b e5       	ldi	r24, 0x5B	; 91
    281a:	97 e0       	ldi	r25, 0x07	; 7
    281c:	2d e1       	ldi	r18, 0x1D	; 29
    281e:	33 ef       	ldi	r19, 0xF3	; 243
    2820:	41 e0       	ldi	r20, 0x01	; 1
    2822:	50 e0       	ldi	r21, 0x00	; 0
    2824:	0e 94 af 13 	call	0x275e	; 0x275e <__divmodsi4>
    2828:	49 01       	movw	r8, r18
    282a:	5a 01       	movw	r10, r20
    282c:	9b 01       	movw	r18, r22
    282e:	ac 01       	movw	r20, r24
    2830:	a7 ea       	ldi	r26, 0xA7	; 167
    2832:	b1 e4       	ldi	r27, 0x41	; 65
    2834:	0e 94 ce 13 	call	0x279c	; 0x279c <__muluhisi3>
    2838:	6b 01       	movw	r12, r22
    283a:	7c 01       	movw	r14, r24
    283c:	ac ee       	ldi	r26, 0xEC	; 236
    283e:	b4 ef       	ldi	r27, 0xF4	; 244
    2840:	a5 01       	movw	r20, r10
    2842:	94 01       	movw	r18, r8
    2844:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__mulohisi3>
    2848:	dc 01       	movw	r26, r24
    284a:	cb 01       	movw	r24, r22
    284c:	8c 0d       	add	r24, r12
    284e:	9d 1d       	adc	r25, r13
    2850:	ae 1d       	adc	r26, r14
    2852:	bf 1d       	adc	r27, r15
    2854:	b7 ff       	sbrs	r27, 7
    2856:	03 c0       	rjmp	.+6      	; 0x285e <do_rand+0x72>
    2858:	01 97       	sbiw	r24, 0x01	; 1
    285a:	a1 09       	sbc	r26, r1
    285c:	b0 48       	sbci	r27, 0x80	; 128
    285e:	88 83       	st	Y, r24
    2860:	99 83       	std	Y+1, r25	; 0x01
    2862:	aa 83       	std	Y+2, r26	; 0x02
    2864:	bb 83       	std	Y+3, r27	; 0x03
    2866:	9f 77       	andi	r25, 0x7F	; 127
    2868:	df 91       	pop	r29
    286a:	cf 91       	pop	r28
    286c:	ff 90       	pop	r15
    286e:	ef 90       	pop	r14
    2870:	df 90       	pop	r13
    2872:	cf 90       	pop	r12
    2874:	bf 90       	pop	r11
    2876:	af 90       	pop	r10
    2878:	9f 90       	pop	r9
    287a:	8f 90       	pop	r8
    287c:	08 95       	ret

0000287e <rand_r>:
    287e:	0e 94 f6 13 	call	0x27ec	; 0x27ec <do_rand>
    2882:	08 95       	ret

00002884 <rand>:
    2884:	80 e6       	ldi	r24, 0x60	; 96
    2886:	90 e0       	ldi	r25, 0x00	; 0
    2888:	0e 94 f6 13 	call	0x27ec	; 0x27ec <do_rand>
    288c:	08 95       	ret

0000288e <srand>:
    288e:	a0 e0       	ldi	r26, 0x00	; 0
    2890:	b0 e0       	ldi	r27, 0x00	; 0
    2892:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
    2896:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    289a:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
    289e:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
    28a2:	08 95       	ret

000028a4 <_exit>:
    28a4:	f8 94       	cli

000028a6 <__stop_program>:
    28a6:	ff cf       	rjmp	.-2      	; 0x28a6 <__stop_program>
