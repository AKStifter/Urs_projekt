
Urs_projekt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001668  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000016bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000016bc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000016ec  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000248  00000000  00000000  00001728  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00005dde  00000000  00000000  00001970  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ca7  00000000  00000000  0000774e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001a72  00000000  00000000  000083f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000968  00000000  00000000  00009e68  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000c53  00000000  00000000  0000a7d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00003c07  00000000  00000000  0000b423  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001e0  00000000  00000000  0000f02a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 1c 06 	jmp	0xc38	; 0xc38 <__ctors_end>
       4:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
       8:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
       c:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      10:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      14:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      18:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      1c:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      20:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      24:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      28:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      2c:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      30:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      34:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      38:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      3c:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      40:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      44:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      48:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      4c:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>
      50:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__bad_interrupt>

00000054 <BigFont>:
      54:	10 10 20 5f 00 00 00 00 00 00 00 00 00 00 00 00     .. _............
	...
      7c:	07 00 0f 80 0f 80 0f 80 0f 80 0f 80 07 00 07 00     ................
      8c:	00 00 00 00 07 00 07 00 07 00 00 00 00 00 0e 38     ...............8
      9c:	0e 38 0e 38 0e 38 06 30 00 00 00 00 00 00 00 00     .8.8.8.0........
	...
      b8:	00 00 0c 30 0c 30 0c 30 7f fe 7f fe 0c 30 0c 30     ...0.0.0.....0.0
      c8:	0c 30 0c 30 7f fe 7f fe 0c 30 0c 30 0c 30 00 00     .0.0.....0.0.0..
      d8:	00 00 02 40 02 40 0f f8 1f f8 1a 40 1a 40 1f f0     ...@.@.....@.@..
      e8:	0f f8 02 58 02 58 1f f8 1f f0 02 40 02 40 00 00     ...X.X.....@.@..
      f8:	00 00 00 00 00 00 0e 10 0e 30 0e 70 00 e0 01 c0     .........0.p....
     108:	03 80 07 00 0e 70 0c 70 08 70 00 00 00 00 00 00     .....p.p.p......
     118:	00 00 00 00 0f 00 19 80 19 80 19 80 0f 00 0f 08     ................
     128:	0f 98 19 f8 18 f0 18 e0 19 f0 0f 98 00 00 00 00     ................
     138:	00 00 00 00 07 00 07 00 07 00 0e 00 00 00 00 00     ................
	...
     15c:	00 f0 01 c0 03 80 07 00 0e 00 0e 00 0e 00 0e 00     ................
     16c:	07 00 03 80 01 c0 00 f0 00 00 00 00 00 00 00 00     ................
     17c:	0f 00 03 80 01 c0 00 e0 00 70 00 70 00 70 00 70     .........p.p.p.p
     18c:	00 e0 01 c0 03 80 0f 00 00 00 00 00 00 00 00 00     ................
     19c:	01 80 11 88 09 90 07 e0 07 e0 3f fc 3f fc 07 e0     ..........?.?...
     1ac:	07 e0 09 90 11 88 01 80 00 00 00 00 00 00 00 00     ................
     1bc:	00 00 00 00 01 80 01 80 01 80 0f f0 0f f0 01 80     ................
     1cc:	01 80 01 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     1ec:	00 00 07 00 07 00 07 00 0e 00 00 00 00 00 00 00     ................
	...
     204:	00 00 1f f8 1f f8 00 00 00 00 00 00 00 00 00 00     ................
	...
     22c:	00 00 07 00 07 00 07 00 00 00 00 00 00 00 00 00     ................
     23c:	00 02 00 06 00 0e 00 1c 00 38 00 70 00 e0 01 c0     .........8.p....
     24c:	03 80 07 00 0e 00 1c 00 00 00 00 00 00 00 00 00     ................
     25c:	0f f0 1c 38 1c 78 1c f8 1c f8 1d b8 1d b8 1f 38     ...8.x.........8
     26c:	1f 38 1e 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     27c:	01 80 01 80 03 80 1f 80 1f 80 03 80 03 80 03 80     ................
     28c:	03 80 03 80 03 80 1f f0 00 00 00 00 00 00 00 00     ................
     29c:	0f e0 1c 70 1c 38 00 38 00 70 00 e0 01 c0 03 80     ...p.8.8.p......
     2ac:	07 00 0e 38 1c 38 1f f8 00 00 00 00 00 00 00 00     ...8.8..........
     2bc:	0f e0 1c 70 1c 38 00 38 00 70 03 c0 03 c0 00 70     ...p.8.8.p.....p
     2cc:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     2dc:	00 e0 01 e0 03 e0 06 e0 0c e0 18 e0 1f f8 1f f8     ................
     2ec:	00 e0 00 e0 00 e0 03 f8 00 00 00 00 00 00 00 00     ................
     2fc:	1f f8 1c 00 1c 00 1c 00 1c 00 1f e0 1f f0 00 78     ...............x
     30c:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     31c:	03 e0 07 00 0e 00 1c 00 1c 00 1f f0 1f f8 1c 38     ...............8
     32c:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     33c:	1f fc 1c 1c 1c 1c 1c 1c 00 1c 00 38 00 70 00 e0     ...........8.p..
     34c:	01 c0 03 80 03 80 03 80 00 00 00 00 00 00 00 00     ................
     35c:	0f f0 1c 38 1c 38 1c 38 1f 38 07 e0 07 e0 1c f8     ...8.8.8.8......
     36c:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     37c:	0f f0 1c 38 1c 38 1c 38 1c 38 1f f8 0f f8 00 38     ...8.8.8.8.....8
     38c:	00 38 00 70 00 e0 07 c0 00 00 00 00 00 00 00 00     .8.p............
     39c:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3ac:	03 80 03 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     3bc:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3cc:	03 80 03 80 07 00 00 00 00 00 00 00 00 00 00 70     ...............p
     3dc:	00 e0 01 c0 03 80 07 00 0e 00 1c 00 1c 00 0e 00     ................
     3ec:	07 00 03 80 01 c0 00 e0 00 70 00 00 00 00 00 00     .........p......
     3fc:	00 00 00 00 00 00 3f fc 3f fc 00 00 00 00 3f fc     ......?.?.....?.
     40c:	3f fc 00 00 00 00 00 00 00 00 00 00 00 00 1c 00     ?...............
     41c:	0e 00 07 00 03 80 01 c0 00 e0 00 70 00 70 00 e0     ...........p.p..
     42c:	01 c0 03 80 07 00 0e 00 1c 00 00 00 00 00 03 c0     ................
     43c:	0f f0 1e 78 18 38 00 38 00 70 00 e0 01 c0 01 c0     ...x.8.8.p......
     44c:	00 00 00 00 01 c0 01 c0 01 c0 00 00 00 00 0f f8     ................
     45c:	1c 1c 1c 1c 1c 1c 1c 1c 1c fc 1c fc 1c fc 1c fc     ................
     46c:	1c 00 1c 00 1c 00 1f f0 07 f8 00 00 00 00 00 00     ................
     47c:	03 c0 07 e0 0e 70 1c 38 1c 38 1c 38 1c 38 1f f8     .....p.8.8.8.8..
     48c:	1c 38 1c 38 1c 38 1c 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     49c:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 38     ...8.8.8.8.....8
     4ac:	0e 38 0e 38 0e 38 1f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     4bc:	07 f0 0e 38 1c 38 1c 00 1c 00 1c 00 1c 00 1c 00     ...8.8..........
     4cc:	1c 00 1c 38 0e 38 07 f0 00 00 00 00 00 00 00 00     ...8.8..........
     4dc:	1f e0 0e 70 0e 38 0e 38 0e 38 0e 38 0e 38 0e 38     ...p.8.8.8.8.8.8
     4ec:	0e 38 0e 38 0e 70 1f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     4fc:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     50c:	0e 00 0e 08 0e 18 1f f8 00 00 00 00 00 00 00 00     ................
     51c:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     52c:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     53c:	07 f0 0e 38 1c 38 1c 38 1c 00 1c 00 1c 00 1c f8     ...8.8.8........
     54c:	1c 38 1c 38 0e 38 07 f8 00 00 00 00 00 00 00 00     .8.8.8..........
     55c:	1c 70 1c 70 1c 70 1c 70 1c 70 1f f0 1f f0 1c 70     .p.p.p.p.p.....p
     56c:	1c 70 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     .p.p.p.p........
     57c:	0f e0 03 80 03 80 03 80 03 80 03 80 03 80 03 80     ................
     58c:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     59c:	01 fc 00 70 00 70 00 70 00 70 00 70 00 70 38 70     ...p.p.p.p.p.p8p
     5ac:	38 70 38 70 38 70 0f e0 00 00 00 00 00 00 00 00     8p8p8p..........
     5bc:	1e 38 0e 38 0e 70 0e e0 0f c0 0f 80 0f 80 0f c0     .8.8.p..........
     5cc:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     5dc:	1f 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00     ................
     5ec:	0e 08 0e 18 0e 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     5fc:	1c 1c 1e 3c 1f 7c 1f fc 1f fc 1d dc 1c 9c 1c 1c     ...<.|..........
     60c:	1c 1c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     ................
     61c:	1c 1c 1c 1c 1e 1c 1f 1c 1f 9c 1d dc 1c fc 1c 7c     ...............|
     62c:	1c 3c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     .<..............
     63c:	03 e0 07 f0 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     .....8..........
     64c:	1c 1c 0e 38 07 f0 03 e0 00 00 00 00 00 00 00 00     ...8............
     65c:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 00     ...8.8.8.8......
     66c:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     67c:	03 e0 0f 78 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 7c     ...x.8.........|
     68c:	1c fc 0f f8 0f f8 00 38 00 fc 00 00 00 00 00 00     .......8........
     69c:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 70     ...8.8.8.8.....p
     6ac:	0e 38 0e 38 0e 38 1e 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     6bc:	0f f0 1c 38 1c 38 1c 38 1c 00 0f e0 07 f0 00 38     ...8.8.8.......8
     6cc:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     6dc:	1f fc 19 cc 11 c4 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     6ec:	01 c0 01 c0 01 c0 07 f0 00 00 00 00 00 00 00 00     ................
     6fc:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     70c:	1c 70 1c 70 1c 70 0f e0 00 00 00 00 00 00 00 00     .p.p.p..........
     71c:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     72c:	1c 70 0e e0 07 c0 03 80 00 00 00 00 00 00 00 00     .p..............
     73c:	1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 1c 9c     ................
     74c:	0f f8 0f f8 07 70 07 70 00 00 00 00 00 00 00 00     .....p.p........
     75c:	1c 70 1c 70 1c 70 0e e0 07 c0 03 80 03 80 07 c0     .p.p.p..........
     76c:	0e e0 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     ...p.p.p........
     77c:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
     78c:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     79c:	1f f8 1c 38 18 38 10 70 00 e0 01 c0 03 80 07 00     ...8.8.p........
     7ac:	0e 08 1c 18 1c 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     7bc:	07 f0 07 00 07 00 07 00 07 00 07 00 07 00 07 00     ................
     7cc:	07 00 07 00 07 00 07 f0 00 00 00 00 00 00 00 00     ................
     7dc:	10 00 18 00 1c 00 0e 00 07 00 03 80 01 c0 00 e0     ................
     7ec:	00 70 00 38 00 1c 00 07 00 00 00 00 00 00 00 00     .p.8............
     7fc:	07 f0 00 70 00 70 00 70 00 70 00 70 00 70 00 70     ...p.p.p.p.p.p.p
     80c:	00 70 00 70 00 70 07 f0 00 00 00 00 00 00 01 80     .p.p.p..........
     81c:	03 c0 07 e0 0e 70 1c 38 00 00 00 00 00 00 00 00     .....p.8........
	...
     854:	7f ff 7f ff 00 00 00 00 1c 00 1c 00 07 00 07 00     ................
	...
     884:	0f e0 00 70 00 70 0f f0 1c 70 1c 70 1c 70 0f d8     ...p.p...p.p.p..
	...
     89c:	1e 00 0e 00 0e 00 0e 00 0f f0 0e 38 0e 38 0e 38     ...........8.8.8
     8ac:	0e 38 0e 38 0e 38 1b f0 00 00 00 00 00 00 00 00     .8.8.8..........
	...
     8c4:	0f e0 1c 70 1c 70 1c 00 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     8dc:	00 f8 00 70 00 70 00 70 0f f0 1c 70 1c 70 1c 70     ...p.p.p...p.p.p
     8ec:	1c 70 1c 70 1c 70 0f d8 00 00 00 00 00 00 00 00     .p.p.p..........
	...
     904:	0f e0 1c 70 1c 70 1f f0 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     91c:	03 e0 07 70 07 70 07 00 07 00 1f e0 1f e0 07 00     ...p.p..........
     92c:	07 00 07 00 07 00 1f c0 00 00 00 00 00 00 00 00     ................
	...
     944:	0f d8 1c 70 1c 70 1c 70 1c 70 0f f0 07 f0 00 70     ...p.p.p.p.....p
     954:	1c 70 0f e0 00 00 00 00 1e 00 0e 00 0e 00 0e 00     .p..............
     964:	0e f0 0f 38 0f 38 0e 38 0e 38 0e 38 0e 38 1e 38     ...8.8.8.8.8.8.8
	...
     97c:	01 c0 01 c0 01 c0 00 00 0f c0 01 c0 01 c0 01 c0     ................
     98c:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
     99c:	00 70 00 70 00 70 00 00 03 f0 00 70 00 70 00 70     .p.p.p.....p.p.p
     9ac:	00 70 00 70 00 70 1c 70 0c f0 07 e0 00 00 00 00     .p.p.p.p........
     9bc:	1e 00 0e 00 0e 00 0e 00 0e 38 0e 70 0e e0 0f c0     .........8.p....
     9cc:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     9dc:	0f c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     9ec:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
	...
     a04:	1f f8 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c     ................
	...
     a24:	1f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     ...p.p.p.p.p.p.p
	...
     a44:	0f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f e0     ...p.p.p.p.p.p..
	...
     a64:	1b f0 0e 38 0e 38 0e 38 0e 38 0e 38 0f f0 0e 00     ...8.8.8.8.8....
     a74:	0e 00 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     a84:	1f b0 38 e0 38 e0 38 e0 38 e0 38 e0 1f e0 00 e0     ..8.8.8.8.8.....
     a94:	00 e0 01 f0 00 00 00 00 00 00 00 00 00 00 00 00     ................
     aa4:	1e f0 0f f8 0f 38 0e 00 0e 00 0e 00 0e 00 1f 00     .....8..........
	...
     ac4:	0f e0 1c 30 1c 30 0f 80 03 e0 18 70 18 70 0f e0     ...0.0.....p.p..
	...
     adc:	00 00 01 00 03 00 07 00 1f f0 07 00 07 00 07 00     ................
     aec:	07 00 07 70 07 70 03 e0 00 00 00 00 00 00 00 00     ...p.p..........
	...
     b04:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f d8     .p.p.p.p.p.p.p..
	...
     b24:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
	...
     b44:	1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 0f f8 07 70 07 70     .............p.p
	...
     b64:	1c e0 1c e0 0f c0 07 80 07 80 0f c0 1c e0 1c e0     ................
	...
     b84:	0e 38 0e 38 0e 38 0e 38 0e 38 07 f0 03 e0 00 e0     .8.8.8.8.8......
     b94:	01 c0 1f 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ba4:	1f e0 18 e0 11 c0 03 80 07 00 0e 20 1c 60 1f e0     ........... .`..
	...
     bbc:	01 f8 03 80 03 80 03 80 07 00 1c 00 1c 00 07 00     ................
     bcc:	03 80 03 80 03 80 01 f8 00 00 00 00 00 00 01 c0     ................
     bdc:	01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     bec:	01 c0 01 c0 01 c0 01 c0 01 c0 00 00 00 00 00 00     ................
     bfc:	1f 80 01 c0 01 c0 01 c0 00 e0 00 38 00 38 00 e0     ...........8.8..
     c0c:	01 c0 01 c0 01 c0 1f 80 00 00 00 00 00 00 00 00     ................
     c1c:	1f 1c 3b 9c 39 dc 38 f8 00 00 00 00 00 00 00 00     ..;.9.8.........
	...

00000c38 <__ctors_end>:
     c38:	11 24       	eor	r1, r1
     c3a:	1f be       	out	0x3f, r1	; 63
     c3c:	cf e5       	ldi	r28, 0x5F	; 95
     c3e:	d4 e0       	ldi	r29, 0x04	; 4
     c40:	de bf       	out	0x3e, r29	; 62
     c42:	cd bf       	out	0x3d, r28	; 61
     c44:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <main>
     c48:	0c 94 32 0b 	jmp	0x1664	; 0x1664 <_exit>

00000c4c <__bad_interrupt>:
     c4c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000c50 <fastfill>:
// r22-r25 unsigned 32 bit number of pixels to set.
// note that only 17 bits of this are used, so max pixels
// is 131071, which is fine since we only have 320 * 240 pixels or 76800 loops
fastfill:

	clr r18
     c50:	22 27       	eor	r18, r18

	// devide by 2
	// no need for register 25 it has no bits we care about.
	lsr r24
     c52:	86 95       	lsr	r24
	ror r23
     c54:	77 95       	ror	r23
	ror r22
     c56:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
     c58:	27 95       	ror	r18

	// devide by 4
	// no need for register 24, it had a max of 1 bit we care about.
	lsr r23
     c5a:	76 95       	lsr	r23
	ror r22
     c5c:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
     c5e:	27 95       	ror	r18

	// devide by 8
	//lsr r24
	lsr r23
     c60:	76 95       	lsr	r23
	ror r22
     c62:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
     c64:	27 95       	ror	r18

	// devide by 16		
	// lsr r24
	lsr r23
     c66:	76 95       	lsr	r23
	ror r22
     c68:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
     c6a:	27 95       	ror	r18

	// finish rolling a full 8 bits aka swap nibbles
	swap r18
     c6c:	22 95       	swap	r18

	movw r24, r22
     c6e:	cb 01       	movw	r24, r22

00000c70 <fastfill2>:
// r24 + r25 hold 16 bit unsigned number of 16xloops.
// r18 holds 8 bit unsigned numner of single loops
fastfill2:

	// prepare the out port registers
	in r30, _SFR_IO_ADDR(WR_PORT)
     c70:	e5 b3       	in	r30, 0x15	; 21
	mov r31, r30
     c72:	fe 2f       	mov	r31, r30
	set
     c74:	68 94       	set
	bld r30,WR_PIN
     c76:	e6 f9       	bld	r30, 6
	clt
     c78:	e8 94       	clt
	bld r31,WR_PIN
     c7a:	f6 f9       	bld	r31, 6

	sbiw r24,0 // subtract zero and test if zero	
     c7c:	00 97       	sbiw	r24, 0x00	; 0
	breq exitloop16
     c7e:	11 f1       	breq	.+68     	; 0xcc4 <exitloop16>

00000c80 <loop16>:
loop16:
		
	TOGGLE_WR_FAST r31,r30
     c80:	f5 bb       	out	0x15, r31	; 21
     c82:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     c84:	f5 bb       	out	0x15, r31	; 21
     c86:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     c88:	f5 bb       	out	0x15, r31	; 21
     c8a:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     c8c:	f5 bb       	out	0x15, r31	; 21
     c8e:	e5 bb       	out	0x15, r30	; 21
		
	TOGGLE_WR_FAST r31,r30
     c90:	f5 bb       	out	0x15, r31	; 21
     c92:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     c94:	f5 bb       	out	0x15, r31	; 21
     c96:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     c98:	f5 bb       	out	0x15, r31	; 21
     c9a:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     c9c:	f5 bb       	out	0x15, r31	; 21
     c9e:	e5 bb       	out	0x15, r30	; 21
		
	TOGGLE_WR_FAST r31,r30
     ca0:	f5 bb       	out	0x15, r31	; 21
     ca2:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     ca4:	f5 bb       	out	0x15, r31	; 21
     ca6:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     ca8:	f5 bb       	out	0x15, r31	; 21
     caa:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     cac:	f5 bb       	out	0x15, r31	; 21
     cae:	e5 bb       	out	0x15, r30	; 21
		
	TOGGLE_WR_FAST r31,r30
     cb0:	f5 bb       	out	0x15, r31	; 21
     cb2:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     cb4:	f5 bb       	out	0x15, r31	; 21
     cb6:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     cb8:	f5 bb       	out	0x15, r31	; 21
     cba:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     cbc:	f5 bb       	out	0x15, r31	; 21
     cbe:	e5 bb       	out	0x15, r30	; 21

	sbiw r24,1	
     cc0:	01 97       	sbiw	r24, 0x01	; 1
	brne loop16
     cc2:	f1 f6       	brne	.-68     	; 0xc80 <loop16>

00000cc4 <exitloop16>:

exitloop16:

	cpi r18,0
     cc4:	20 30       	cpi	r18, 0x00	; 0
	breq exitsingleloop
     cc6:	21 f0       	breq	.+8      	; 0xcd0 <exitsingleloop>

00000cc8 <singleloop>:
singleloop:			
	TOGGLE_WR_FAST r31,r30
     cc8:	f5 bb       	out	0x15, r31	; 21
     cca:	e5 bb       	out	0x15, r30	; 21
	dec r18
     ccc:	2a 95       	dec	r18
	brne singleloop
     cce:	e1 f7       	brne	.-8      	; 0xcc8 <singleloop>

00000cd0 <exitsingleloop>:

exitsingleloop:
	ret 
     cd0:	08 95       	ret

00000cd2 <fastfill3>:

// r22-r25 unsigned 32 bit number of pixels to set.
// note that only 17 bits of this are used, so max pixels
// is 131071, which is fine since we only have 320 * 240 pixels or 76800 loops
fastfill3:
	TOGGLE_WR
     cd2:	ae 98       	cbi	0x15, 6	; 21
     cd4:	ae 9a       	sbi	0x15, 6	; 21
	SUB32 r22,r23,r24,r25,1
     cd6:	61 50       	subi	r22, 0x01	; 1
     cd8:	70 40       	sbci	r23, 0x00	; 0
     cda:	80 40       	sbci	r24, 0x00	; 0
     cdc:	90 40       	sbci	r25, 0x00	; 0
	brne fastfill3
     cde:	c9 f7       	brne	.-14     	; 0xcd2 <fastfill3>

     ce0:	08 95       	ret

00000ce2 <LCD_Write_COM>:
#include "as_macros.h"


.global LCD_Write_COM
LCD_Write_COM:
	BUS_START_REG
     ce2:	af 98       	cbi	0x15, 7	; 21
	clr r1
     ce4:	11 24       	eor	r1, r1
	out DPLIO, r24
     ce6:	82 bb       	out	0x12, r24	; 18
	out DPHIO, r1
     ce8:	1b ba       	out	0x1b, r1	; 27
	TOGGLE_WR
     cea:	ae 98       	cbi	0x15, 6	; 21
     cec:	ae 9a       	sbi	0x15, 6	; 21
	ret
     cee:	08 95       	ret

00000cf0 <LCD_Write_DATA>:

.global LCD_Write_DATA
LCD_Write_DATA:
	BUS_START_DATA	
     cf0:	af 9a       	sbi	0x15, 7	; 21
	out DPLIO, r22
     cf2:	62 bb       	out	0x12, r22	; 18
	out DPHIO, r24
     cf4:	8b bb       	out	0x1b, r24	; 27
	TOGGLE_WR
     cf6:	ae 98       	cbi	0x15, 6	; 21
     cf8:	ae 9a       	sbi	0x15, 6	; 21
	ret
     cfa:	08 95       	ret

00000cfc <LCD_Write_DATA2>:

.global LCD_Write_DATA2
LCD_Write_DATA2:
	BUS_START_DATA	
     cfc:	af 9a       	sbi	0x15, 7	; 21
	clr r1
     cfe:	11 24       	eor	r1, r1
	out DPLIO, r24
     d00:	82 bb       	out	0x12, r24	; 18
	out DPHIO, r1
     d02:	1b ba       	out	0x1b, r1	; 27
	TOGGLE_WR
     d04:	ae 98       	cbi	0x15, 6	; 21
     d06:	ae 9a       	sbi	0x15, 6	; 21
	ret
     d08:	08 95       	ret

00000d0a <LCD_Write_COM_DATA>:


.global LCD_Write_COM_DATA
LCD_Write_COM_DATA:
	
	BUS_START_REG
     d0a:	af 98       	cbi	0x15, 7	; 21
	clr r1
     d0c:	11 24       	eor	r1, r1
	out DPLIO, r24
     d0e:	82 bb       	out	0x12, r24	; 18
	out DPHIO, r1
     d10:	1b ba       	out	0x1b, r1	; 27
	TOGGLE_WR
     d12:	ae 98       	cbi	0x15, 6	; 21
     d14:	ae 9a       	sbi	0x15, 6	; 21

	BUS_START_DATA	
     d16:	af 9a       	sbi	0x15, 7	; 21
	out DPLIO, r22
     d18:	62 bb       	out	0x12, r22	; 18
	out DPHIO, r23
     d1a:	7b bb       	out	0x1b, r23	; 27
	TOGGLE_WR
     d1c:	ae 98       	cbi	0x15, 6	; 21
     d1e:	ae 9a       	sbi	0x15, 6	; 21

	ret
     d20:	08 95       	ret

00000d22 <LCD_Writ_Bus>:


.global LCD_Writ_Bus
	LCD_Writ_Bus:

	out DPHIO, r24
     d22:	8b bb       	out	0x1b, r24	; 27
	out DPLIO, r22
     d24:	62 bb       	out	0x12, r22	; 18
	TOGGLE_WR
     d26:	ae 98       	cbi	0x15, 6	; 21
     d28:	ae 9a       	sbi	0x15, 6	; 21

     d2a:	08 95       	ret

00000d2c <_Z7Touchedv>:
#include "UTFT/DefaultFonts.h"
#include "SPI_Master_H_file.h"

bool Touched() {
	// PINB3 low = touched
	if (bit_is_clear(PINB, 3)){
     d2c:	b3 99       	sbic	0x16, 3	; 22
     d2e:	02 c0       	rjmp	.+4      	; 0xd34 <_Z7Touchedv+0x8>
		return true;
     d30:	81 e0       	ldi	r24, 0x01	; 1
     d32:	08 95       	ret
		} else {
		return false;
     d34:	80 e0       	ldi	r24, 0x00	; 0
	}
}
     d36:	08 95       	ret

00000d38 <_Z4getXv>:

int getX() {
     d38:	cf 92       	push	r12
     d3a:	df 92       	push	r13
     d3c:	ef 92       	push	r14
     d3e:	ff 92       	push	r15
	SPI_Write(0X90);
     d40:	80 e9       	ldi	r24, 0x90	; 144
     d42:	0e 94 4e 07 	call	0xe9c	; 0xe9c <SPI_Write>
	float x = SPI_Read() / 120.0 * 320;
     d46:	0e 94 53 07 	call	0xea6	; 0xea6 <SPI_Read>
     d4a:	68 2f       	mov	r22, r24
     d4c:	70 e0       	ldi	r23, 0x00	; 0
     d4e:	80 e0       	ldi	r24, 0x00	; 0
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	0e 94 39 0a 	call	0x1472	; 0x1472 <__floatsisf>
     d56:	20 e0       	ldi	r18, 0x00	; 0
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	40 ef       	ldi	r20, 0xF0	; 240
     d5c:	52 e4       	ldi	r21, 0x42	; 66
     d5e:	0e 94 8f 09 	call	0x131e	; 0x131e <__divsf3>
     d62:	20 e0       	ldi	r18, 0x00	; 0
     d64:	30 e0       	ldi	r19, 0x00	; 0
     d66:	40 ea       	ldi	r20, 0xA0	; 160
     d68:	53 e4       	ldi	r21, 0x43	; 67
     d6a:	0e 94 c5 0a 	call	0x158a	; 0x158a <__mulsf3>
     d6e:	6b 01       	movw	r12, r22
     d70:	7c 01       	movw	r14, r24
	SPI_Write(0);
     d72:	80 e0       	ldi	r24, 0x00	; 0
     d74:	0e 94 4e 07 	call	0xe9c	; 0xe9c <SPI_Write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     d78:	8f ef       	ldi	r24, 0xFF	; 255
     d7a:	97 e4       	ldi	r25, 0x47	; 71
     d7c:	01 97       	sbiw	r24, 0x01	; 1
     d7e:	f1 f7       	brne	.-4      	; 0xd7c <_Z4getXv+0x44>
     d80:	00 c0       	rjmp	.+0      	; 0xd82 <_Z4getXv+0x4a>
     d82:	00 00       	nop
	_delay_ms(10);
	return (int) x;
     d84:	c7 01       	movw	r24, r14
     d86:	b6 01       	movw	r22, r12
     d88:	0e 94 01 0a 	call	0x1402	; 0x1402 <__fixsfsi>
}
     d8c:	cb 01       	movw	r24, r22
     d8e:	ff 90       	pop	r15
     d90:	ef 90       	pop	r14
     d92:	df 90       	pop	r13
     d94:	cf 90       	pop	r12
     d96:	08 95       	ret

00000d98 <_Z4getYv>:

int getY() {
     d98:	cf 92       	push	r12
     d9a:	df 92       	push	r13
     d9c:	ef 92       	push	r14
     d9e:	ff 92       	push	r15
	SPI_Write(0XD0);
     da0:	80 ed       	ldi	r24, 0xD0	; 208
     da2:	0e 94 4e 07 	call	0xe9c	; 0xe9c <SPI_Write>
	float y = SPI_Read() / 120.0 * 240;
     da6:	0e 94 53 07 	call	0xea6	; 0xea6 <SPI_Read>
     daa:	68 2f       	mov	r22, r24
     dac:	70 e0       	ldi	r23, 0x00	; 0
     dae:	80 e0       	ldi	r24, 0x00	; 0
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	0e 94 39 0a 	call	0x1472	; 0x1472 <__floatsisf>
     db6:	20 e0       	ldi	r18, 0x00	; 0
     db8:	30 e0       	ldi	r19, 0x00	; 0
     dba:	40 ef       	ldi	r20, 0xF0	; 240
     dbc:	52 e4       	ldi	r21, 0x42	; 66
     dbe:	0e 94 8f 09 	call	0x131e	; 0x131e <__divsf3>
     dc2:	20 e0       	ldi	r18, 0x00	; 0
     dc4:	30 e0       	ldi	r19, 0x00	; 0
     dc6:	40 e7       	ldi	r20, 0x70	; 112
     dc8:	53 e4       	ldi	r21, 0x43	; 67
     dca:	0e 94 c5 0a 	call	0x158a	; 0x158a <__mulsf3>
     dce:	6b 01       	movw	r12, r22
     dd0:	7c 01       	movw	r14, r24
	SPI_Write(0);
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	0e 94 4e 07 	call	0xe9c	; 0xe9c <SPI_Write>
     dd8:	8f ef       	ldi	r24, 0xFF	; 255
     dda:	97 e4       	ldi	r25, 0x47	; 71
     ddc:	01 97       	sbiw	r24, 0x01	; 1
     dde:	f1 f7       	brne	.-4      	; 0xddc <_Z4getYv+0x44>
     de0:	00 c0       	rjmp	.+0      	; 0xde2 <_Z4getYv+0x4a>
     de2:	00 00       	nop
	_delay_ms(10);
	return (int) y;
     de4:	c7 01       	movw	r24, r14
     de6:	b6 01       	movw	r22, r12
     de8:	0e 94 01 0a 	call	0x1402	; 0x1402 <__fixsfsi>
}
     dec:	cb 01       	movw	r24, r22
     dee:	ff 90       	pop	r15
     df0:	ef 90       	pop	r14
     df2:	df 90       	pop	r13
     df4:	cf 90       	pop	r12
     df6:	08 95       	ret

00000df8 <main>:


int main(void) {	
     df8:	cf 93       	push	r28
     dfa:	df 93       	push	r29
     dfc:	cd b7       	in	r28, 0x3d	; 61
     dfe:	de b7       	in	r29, 0x3e	; 62
     e00:	63 97       	sbiw	r28, 0x13	; 19
     e02:	0f b6       	in	r0, 0x3f	; 63
     e04:	f8 94       	cli
     e06:	de bf       	out	0x3e, r29	; 62
     e08:	0f be       	out	0x3f, r0	; 63
     e0a:	cd bf       	out	0x3d, r28	; 61
	UTFT display;
     e0c:	ce 01       	movw	r24, r28
     e0e:	01 96       	adiw	r24, 0x01	; 1
     e10:	0e 94 66 08 	call	0x10cc	; 0x10cc <_ZN4UTFTC1Ev>
	display.InitLCD(LANDSCAPE);
     e14:	61 e0       	ldi	r22, 0x01	; 1
     e16:	ce 01       	movw	r24, r28
     e18:	01 96       	adiw	r24, 0x01	; 1
     e1a:	0e 94 3e 09 	call	0x127c	; 0x127c <_ZN4UTFT7InitLCDEh>
	display.setFont(BigFont);
     e1e:	64 e5       	ldi	r22, 0x54	; 84
     e20:	70 e0       	ldi	r23, 0x00	; 0
     e22:	ce 01       	movw	r24, r28
     e24:	01 96       	adiw	r24, 0x01	; 1
     e26:	0e 94 74 09 	call	0x12e8	; 0x12e8 <_ZN4UTFT7setFontEPKh>
	display.clrScr();
     e2a:	ce 01       	movw	r24, r28
     e2c:	01 96       	adiw	r24, 0x01	; 1
     e2e:	0e 94 c0 08 	call	0x1180	; 0x1180 <_ZN4UTFT6clrScrEv>
	
	//T-IRQ spoje na PINB3 te je nizak samo pri dodiru, ina?e visok
	DDRB &= 0b11110111;
     e32:	87 b3       	in	r24, 0x17	; 23
     e34:	87 7f       	andi	r24, 0xF7	; 247
     e36:	87 bb       	out	0x17, r24	; 23

	SPI_Init();
     e38:	0e 94 3f 07 	call	0xe7e	; 0xe7e <SPI_Init>
	SS_Enable;
     e3c:	88 b3       	in	r24, 0x18	; 24
     e3e:	8f 7e       	andi	r24, 0xEF	; 239
     e40:	88 bb       	out	0x18, r24	; 24
	display.fillRect(110, 140, 220, 200);
	
	display.setBackColor(255, 125, 0);
	display.setColor(0, 0, 0);
	display.print("Radi!", 125, 160,0);*/
	display.setColor(255, 125, 0);
     e42:	20 e0       	ldi	r18, 0x00	; 0
     e44:	4d e7       	ldi	r20, 0x7D	; 125
     e46:	6f ef       	ldi	r22, 0xFF	; 255
     e48:	ce 01       	movw	r24, r28
     e4a:	01 96       	adiw	r24, 0x01	; 1
     e4c:	0e 94 f6 08 	call	0x11ec	; 0x11ec <_ZN4UTFT8setColorEhhh>
	display.setBackColor(255, 125, 0);
     e50:	20 e0       	ldi	r18, 0x00	; 0
     e52:	4d e7       	ldi	r20, 0x7D	; 125
     e54:	6f ef       	ldi	r22, 0xFF	; 255
     e56:	ce 01       	movw	r24, r28
     e58:	01 96       	adiw	r24, 0x01	; 1
     e5a:	0e 94 19 09 	call	0x1232	; 0x1232 <_ZN4UTFT12setBackColorEhhh>
	uint16_t x,y = 0;
	
	while (1) {
		if(Touched())
     e5e:	0e 94 96 06 	call	0xd2c	; 0xd2c <_Z7Touchedv>
     e62:	88 23       	and	r24, r24
     e64:	e1 f3       	breq	.-8      	; 0xe5e <main+0x66>
		{
			x = getX();
     e66:	0e 94 9c 06 	call	0xd38	; 0xd38 <_Z4getXv>
     e6a:	8c 01       	movw	r16, r24
			y = getY();
     e6c:	0e 94 cc 06 	call	0xd98	; 0xd98 <_Z4getYv>
			display.drawPixel(x, y);
     e70:	ac 01       	movw	r20, r24
     e72:	b8 01       	movw	r22, r16
     e74:	ce 01       	movw	r24, r28
     e76:	01 96       	adiw	r24, 0x01	; 1
     e78:	0e 94 56 09 	call	0x12ac	; 0x12ac <_ZN4UTFT9drawPixelEii>
     e7c:	f0 cf       	rjmp	.-32     	; 0xe5e <main+0x66>

00000e7e <SPI_Init>:
#include "SPI_Master_H_file.h"				/* Include SPI Master header file */


void SPI_Init()								/* SPI Initialize function */
{
	DDRB |= (1<<MOSI)|(1<<SCK)|(1<<SS);		/* Make MOSI, SCK, 0th pin direction as output pins */
     e7e:	87 b3       	in	r24, 0x17	; 23
     e80:	80 6b       	ori	r24, 0xB0	; 176
     e82:	87 bb       	out	0x17, r24	; 23
	DDRB &= ~(1<<MISO);						/* Make MISO pin as input pin */
     e84:	87 b3       	in	r24, 0x17	; 23
     e86:	8f 7b       	andi	r24, 0xBF	; 191
     e88:	87 bb       	out	0x17, r24	; 23
	PORTB |= (1<<SS);						/* Disable slave initially by making high on SS pin */
     e8a:	88 b3       	in	r24, 0x18	; 24
     e8c:	80 61       	ori	r24, 0x10	; 16
     e8e:	88 bb       	out	0x18, r24	; 24
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);	/* Enable SPI, Enable in master mode, with Fosc/16 SCK frequency */
     e90:	81 e5       	ldi	r24, 0x51	; 81
     e92:	8d b9       	out	0x0d, r24	; 13
	SPSR &= ~(1<<SPI2X);					/* Disable speed doubler */
     e94:	8e b1       	in	r24, 0x0e	; 14
     e96:	8e 7f       	andi	r24, 0xFE	; 254
     e98:	8e b9       	out	0x0e, r24	; 14
     e9a:	08 95       	ret

00000e9c <SPI_Write>:
}

void SPI_Write(char data)					/* SPI write data function */
{
	char flush_buffer;
	SPDR = data;							/* Write data to SPI data register */
     e9c:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));				/* Wait till transmission complete */
     e9e:	77 9b       	sbis	0x0e, 7	; 14
     ea0:	fe cf       	rjmp	.-4      	; 0xe9e <SPI_Write+0x2>
	flush_buffer = SPDR;					/* Flush received data */
     ea2:	8f b1       	in	r24, 0x0f	; 15
     ea4:	08 95       	ret

00000ea6 <SPI_Read>:
/* Note: SPIF flag is cleared by first reading SPSR (with SPIF set) and then accessing SPDR hence flush buffer used here to access SPDR after SPSR read */
}

char SPI_Read()								/* SPI read data function */
{
	SPDR = 0xFF;
     ea6:	8f ef       	ldi	r24, 0xFF	; 255
     ea8:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));				/* Wait till reception complete */
     eaa:	77 9b       	sbis	0x0e, 7	; 14
     eac:	fe cf       	rjmp	.-4      	; 0xeaa <SPI_Read+0x4>
	return(SPDR);							/* return received data */
     eae:	8f b1       	in	r24, 0x0f	; 15
}
     eb0:	08 95       	ret

00000eb2 <SSD1289_init>:



void SSD1289_init()
{	
	DATA_PORT_LOW_DDR = 0xff;
     eb2:	8f ef       	ldi	r24, 0xFF	; 255
     eb4:	81 bb       	out	0x11, r24	; 17
	DATA_PORT_HIGH_DDR = 0xff;
     eb6:	8a bb       	out	0x1a, r24	; 26
			
	RS_PORT_DDR |= _BV( RS_PIN);
     eb8:	84 b3       	in	r24, 0x14	; 20
     eba:	80 68       	ori	r24, 0x80	; 128
     ebc:	84 bb       	out	0x14, r24	; 20
				
	WR_PORT_DDR |= _BV(WR_PIN);
     ebe:	84 b3       	in	r24, 0x14	; 20
     ec0:	80 64       	ori	r24, 0x40	; 64
     ec2:	84 bb       	out	0x14, r24	; 20

	CS_PORT_DDR |= _BV(CS_PIN);
     ec4:	84 b3       	in	r24, 0x14	; 20
     ec6:	81 60       	ori	r24, 0x01	; 1
     ec8:	84 bb       	out	0x14, r24	; 20
		
	RD_PORT_DDR |= _BV(RD_PIN);
     eca:	87 b3       	in	r24, 0x17	; 23
     ecc:	81 60       	ori	r24, 0x01	; 1
     ece:	87 bb       	out	0x17, r24	; 23
	RD_PORT |= _BV(RD_PIN);
     ed0:	88 b3       	in	r24, 0x18	; 24
     ed2:	81 60       	ori	r24, 0x01	; 1
     ed4:	88 bb       	out	0x18, r24	; 24
		
	RESET_PORT_DDR |= _BV(RESET_PIN);
     ed6:	84 b3       	in	r24, 0x14	; 20
     ed8:	82 60       	ori	r24, 0x02	; 2
     eda:	84 bb       	out	0x14, r24	; 20
		
	BACK_LIGHT_PORT |= _BV(BACK_LIGHT_PIN);
     edc:	88 b3       	in	r24, 0x18	; 24
     ede:	82 60       	ori	r24, 0x02	; 2
     ee0:	88 bb       	out	0x18, r24	; 24
	
	BACK_LIGHT_DDR |= _BV(BACK_LIGHT_PIN);			
     ee2:	87 b3       	in	r24, 0x17	; 23
     ee4:	82 60       	ori	r24, 0x02	; 2
     ee6:	87 bb       	out	0x17, r24	; 23
	
	sbi(RESET_PORT, RESET_PIN);
     ee8:	85 b3       	in	r24, 0x15	; 21
     eea:	82 60       	ori	r24, 0x02	; 2
     eec:	85 bb       	out	0x15, r24	; 21
     eee:	8f ef       	ldi	r24, 0xFF	; 255
     ef0:	93 e2       	ldi	r25, 0x23	; 35
     ef2:	01 97       	sbiw	r24, 0x01	; 1
     ef4:	f1 f7       	brne	.-4      	; 0xef2 <SSD1289_init+0x40>
     ef6:	00 c0       	rjmp	.+0      	; 0xef8 <SSD1289_init+0x46>
     ef8:	00 00       	nop
	_delay_ms(5);
	cbi(RESET_PORT, RESET_PIN);
     efa:	85 b3       	in	r24, 0x15	; 21
     efc:	8d 7f       	andi	r24, 0xFD	; 253
     efe:	85 bb       	out	0x15, r24	; 21
     f00:	8f ef       	ldi	r24, 0xFF	; 255
     f02:	9b e6       	ldi	r25, 0x6B	; 107
     f04:	01 97       	sbiw	r24, 0x01	; 1
     f06:	f1 f7       	brne	.-4      	; 0xf04 <SSD1289_init+0x52>
     f08:	00 c0       	rjmp	.+0      	; 0xf0a <SSD1289_init+0x58>
     f0a:	00 00       	nop
	_delay_ms(15);
	sbi(RESET_PORT, RESET_PIN);
     f0c:	85 b3       	in	r24, 0x15	; 21
     f0e:	82 60       	ori	r24, 0x02	; 2
     f10:	85 bb       	out	0x15, r24	; 21
     f12:	8f ef       	ldi	r24, 0xFF	; 255
     f14:	9b e6       	ldi	r25, 0x6B	; 107
     f16:	01 97       	sbiw	r24, 0x01	; 1
     f18:	f1 f7       	brne	.-4      	; 0xf16 <SSD1289_init+0x64>
     f1a:	00 c0       	rjmp	.+0      	; 0xf1c <SSD1289_init+0x6a>
     f1c:	00 00       	nop
	_delay_ms(15);

	cbi(CS_PORT, CS_PIN);
     f1e:	85 b3       	in	r24, 0x15	; 21
     f20:	8e 7f       	andi	r24, 0xFE	; 254
     f22:	85 bb       	out	0x15, r24	; 21

	LCD_Write_COM_DATA(0x00,0x0001);
     f24:	61 e0       	ldi	r22, 0x01	; 1
     f26:	70 e0       	ldi	r23, 0x00	; 0
     f28:	80 e0       	ldi	r24, 0x00	; 0
     f2a:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x03,0xA8A4);
     f2e:	64 ea       	ldi	r22, 0xA4	; 164
     f30:	78 ea       	ldi	r23, 0xA8	; 168
     f32:	83 e0       	ldi	r24, 0x03	; 3
     f34:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0C,0x0000);
     f38:	60 e0       	ldi	r22, 0x00	; 0
     f3a:	70 e0       	ldi	r23, 0x00	; 0
     f3c:	8c e0       	ldi	r24, 0x0C	; 12
     f3e:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0D,0x080C);
     f42:	6c e0       	ldi	r22, 0x0C	; 12
     f44:	78 e0       	ldi	r23, 0x08	; 8
     f46:	8d e0       	ldi	r24, 0x0D	; 13
     f48:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0E,0x2B00);
     f4c:	60 e0       	ldi	r22, 0x00	; 0
     f4e:	7b e2       	ldi	r23, 0x2B	; 43
     f50:	8e e0       	ldi	r24, 0x0E	; 14
     f52:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x1E,0x00B7);
     f56:	67 eb       	ldi	r22, 0xB7	; 183
     f58:	70 e0       	ldi	r23, 0x00	; 0
     f5a:	8e e1       	ldi	r24, 0x1E	; 30
     f5c:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x01,0x2B3F);
     f60:	6f e3       	ldi	r22, 0x3F	; 63
     f62:	7b e2       	ldi	r23, 0x2B	; 43
     f64:	81 e0       	ldi	r24, 0x01	; 1
     f66:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x02,0x0600);
     f6a:	60 e0       	ldi	r22, 0x00	; 0
     f6c:	76 e0       	ldi	r23, 0x06	; 6
     f6e:	82 e0       	ldi	r24, 0x02	; 2
     f70:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x10,0x0000);
     f74:	60 e0       	ldi	r22, 0x00	; 0
     f76:	70 e0       	ldi	r23, 0x00	; 0
     f78:	80 e1       	ldi	r24, 0x10	; 16
     f7a:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x11,0x6070);
     f7e:	60 e7       	ldi	r22, 0x70	; 112
     f80:	70 e6       	ldi	r23, 0x60	; 96
     f82:	81 e1       	ldi	r24, 0x11	; 17
     f84:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x05,0x0000);
     f88:	60 e0       	ldi	r22, 0x00	; 0
     f8a:	70 e0       	ldi	r23, 0x00	; 0
     f8c:	85 e0       	ldi	r24, 0x05	; 5
     f8e:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x06,0x0000);
     f92:	60 e0       	ldi	r22, 0x00	; 0
     f94:	70 e0       	ldi	r23, 0x00	; 0
     f96:	86 e0       	ldi	r24, 0x06	; 6
     f98:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x16,0xEF1C);
     f9c:	6c e1       	ldi	r22, 0x1C	; 28
     f9e:	7f ee       	ldi	r23, 0xEF	; 239
     fa0:	86 e1       	ldi	r24, 0x16	; 22
     fa2:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x17,0x0003);
     fa6:	63 e0       	ldi	r22, 0x03	; 3
     fa8:	70 e0       	ldi	r23, 0x00	; 0
     faa:	87 e1       	ldi	r24, 0x17	; 23
     fac:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x07,0x0233);
     fb0:	63 e3       	ldi	r22, 0x33	; 51
     fb2:	72 e0       	ldi	r23, 0x02	; 2
     fb4:	87 e0       	ldi	r24, 0x07	; 7
     fb6:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0B,0x0000);
     fba:	60 e0       	ldi	r22, 0x00	; 0
     fbc:	70 e0       	ldi	r23, 0x00	; 0
     fbe:	8b e0       	ldi	r24, 0x0B	; 11
     fc0:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0F,0x0000);
     fc4:	60 e0       	ldi	r22, 0x00	; 0
     fc6:	70 e0       	ldi	r23, 0x00	; 0
     fc8:	8f e0       	ldi	r24, 0x0F	; 15
     fca:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x41,0x0000);
     fce:	60 e0       	ldi	r22, 0x00	; 0
     fd0:	70 e0       	ldi	r23, 0x00	; 0
     fd2:	81 e4       	ldi	r24, 0x41	; 65
     fd4:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x42,0x0000);
     fd8:	60 e0       	ldi	r22, 0x00	; 0
     fda:	70 e0       	ldi	r23, 0x00	; 0
     fdc:	82 e4       	ldi	r24, 0x42	; 66
     fde:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x48,0x0000);
     fe2:	60 e0       	ldi	r22, 0x00	; 0
     fe4:	70 e0       	ldi	r23, 0x00	; 0
     fe6:	88 e4       	ldi	r24, 0x48	; 72
     fe8:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x49,0x013F);
     fec:	6f e3       	ldi	r22, 0x3F	; 63
     fee:	71 e0       	ldi	r23, 0x01	; 1
     ff0:	89 e4       	ldi	r24, 0x49	; 73
     ff2:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4A,0x0000);
     ff6:	60 e0       	ldi	r22, 0x00	; 0
     ff8:	70 e0       	ldi	r23, 0x00	; 0
     ffa:	8a e4       	ldi	r24, 0x4A	; 74
     ffc:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4B,0x0000);
    1000:	60 e0       	ldi	r22, 0x00	; 0
    1002:	70 e0       	ldi	r23, 0x00	; 0
    1004:	8b e4       	ldi	r24, 0x4B	; 75
    1006:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x44,0xEF00);
    100a:	60 e0       	ldi	r22, 0x00	; 0
    100c:	7f ee       	ldi	r23, 0xEF	; 239
    100e:	84 e4       	ldi	r24, 0x44	; 68
    1010:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x45,0x0000);
    1014:	60 e0       	ldi	r22, 0x00	; 0
    1016:	70 e0       	ldi	r23, 0x00	; 0
    1018:	85 e4       	ldi	r24, 0x45	; 69
    101a:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x46,0x013F);
    101e:	6f e3       	ldi	r22, 0x3F	; 63
    1020:	71 e0       	ldi	r23, 0x01	; 1
    1022:	86 e4       	ldi	r24, 0x46	; 70
    1024:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x30,0x0707);
    1028:	67 e0       	ldi	r22, 0x07	; 7
    102a:	77 e0       	ldi	r23, 0x07	; 7
    102c:	80 e3       	ldi	r24, 0x30	; 48
    102e:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x31,0x0204);
    1032:	64 e0       	ldi	r22, 0x04	; 4
    1034:	72 e0       	ldi	r23, 0x02	; 2
    1036:	81 e3       	ldi	r24, 0x31	; 49
    1038:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x32,0x0204);
    103c:	64 e0       	ldi	r22, 0x04	; 4
    103e:	72 e0       	ldi	r23, 0x02	; 2
    1040:	82 e3       	ldi	r24, 0x32	; 50
    1042:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x33,0x0502);
    1046:	62 e0       	ldi	r22, 0x02	; 2
    1048:	75 e0       	ldi	r23, 0x05	; 5
    104a:	83 e3       	ldi	r24, 0x33	; 51
    104c:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x34,0x0507);
    1050:	67 e0       	ldi	r22, 0x07	; 7
    1052:	75 e0       	ldi	r23, 0x05	; 5
    1054:	84 e3       	ldi	r24, 0x34	; 52
    1056:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x35,0x0204);
    105a:	64 e0       	ldi	r22, 0x04	; 4
    105c:	72 e0       	ldi	r23, 0x02	; 2
    105e:	85 e3       	ldi	r24, 0x35	; 53
    1060:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x36,0x0204);
    1064:	64 e0       	ldi	r22, 0x04	; 4
    1066:	72 e0       	ldi	r23, 0x02	; 2
    1068:	86 e3       	ldi	r24, 0x36	; 54
    106a:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x37,0x0502);
    106e:	62 e0       	ldi	r22, 0x02	; 2
    1070:	75 e0       	ldi	r23, 0x05	; 5
    1072:	87 e3       	ldi	r24, 0x37	; 55
    1074:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x3A,0x0302);
    1078:	62 e0       	ldi	r22, 0x02	; 2
    107a:	73 e0       	ldi	r23, 0x03	; 3
    107c:	8a e3       	ldi	r24, 0x3A	; 58
    107e:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x3B,0x0302);
    1082:	62 e0       	ldi	r22, 0x02	; 2
    1084:	73 e0       	ldi	r23, 0x03	; 3
    1086:	8b e3       	ldi	r24, 0x3B	; 59
    1088:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x23,0x0000);
    108c:	60 e0       	ldi	r22, 0x00	; 0
    108e:	70 e0       	ldi	r23, 0x00	; 0
    1090:	83 e2       	ldi	r24, 0x23	; 35
    1092:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x24,0x0000);
    1096:	60 e0       	ldi	r22, 0x00	; 0
    1098:	70 e0       	ldi	r23, 0x00	; 0
    109a:	84 e2       	ldi	r24, 0x24	; 36
    109c:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x25,0x8000);
    10a0:	60 e0       	ldi	r22, 0x00	; 0
    10a2:	70 e8       	ldi	r23, 0x80	; 128
    10a4:	85 e2       	ldi	r24, 0x25	; 37
    10a6:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4f,0x0000);
    10aa:	60 e0       	ldi	r22, 0x00	; 0
    10ac:	70 e0       	ldi	r23, 0x00	; 0
    10ae:	8f e4       	ldi	r24, 0x4F	; 79
    10b0:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4e,0x0000);
    10b4:	60 e0       	ldi	r22, 0x00	; 0
    10b6:	70 e0       	ldi	r23, 0x00	; 0
    10b8:	8e e4       	ldi	r24, 0x4E	; 78
    10ba:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
	LCD_Write_COM(0x22);
    10be:	82 e2       	ldi	r24, 0x22	; 34
    10c0:	0e 94 71 06 	call	0xce2	; 0xce2 <LCD_Write_COM>


	sbi(CS_PORT, CS_PIN);
    10c4:	85 b3       	in	r24, 0x15	; 21
    10c6:	81 60       	ori	r24, 0x01	; 1
    10c8:	85 bb       	out	0x15, r24	; 21
    10ca:	08 95       	ret

000010cc <_ZN4UTFTC1Ev>:
		}
		st[c2+f]=0;
	}

	print(st,x,y);
}
    10cc:	4f ee       	ldi	r20, 0xEF	; 239
    10ce:	50 e0       	ldi	r21, 0x00	; 0
    10d0:	60 e0       	ldi	r22, 0x00	; 0
    10d2:	70 e0       	ldi	r23, 0x00	; 0
    10d4:	fc 01       	movw	r30, r24
    10d6:	45 83       	std	Z+5, r20	; 0x05
    10d8:	56 83       	std	Z+6, r21	; 0x06
    10da:	67 83       	std	Z+7, r22	; 0x07
    10dc:	70 87       	std	Z+8, r23	; 0x08
    10de:	4f e3       	ldi	r20, 0x3F	; 63
    10e0:	51 e0       	ldi	r21, 0x01	; 1
    10e2:	60 e0       	ldi	r22, 0x00	; 0
    10e4:	70 e0       	ldi	r23, 0x00	; 0
    10e6:	41 87       	std	Z+9, r20	; 0x09
    10e8:	52 87       	std	Z+10, r21	; 0x0a
    10ea:	63 87       	std	Z+11, r22	; 0x0b
    10ec:	74 87       	std	Z+12, r23	; 0x0c
    10ee:	0e 94 59 07 	call	0xeb2	; 0xeb2 <SSD1289_init>
    10f2:	08 95       	ret

000010f4 <_ZN4UTFT5setXYEjjjj>:
    10f4:	ef 92       	push	r14
    10f6:	ff 92       	push	r15
    10f8:	0f 93       	push	r16
    10fa:	1f 93       	push	r17
    10fc:	cf 93       	push	r28
    10fe:	df 93       	push	r29
    1100:	eb 01       	movw	r28, r22
    1102:	e4 2e       	mov	r14, r20
    1104:	f5 2e       	mov	r15, r21
    1106:	fc 01       	movw	r30, r24
    1108:	44 81       	ldd	r20, Z+4	; 0x04
    110a:	41 30       	cpi	r20, 0x01	; 1
    110c:	89 f4       	brne	.+34     	; 0x1130 <_ZN4UTFT5setXYEjjjj+0x3c>
    110e:	81 85       	ldd	r24, Z+9	; 0x09
    1110:	92 85       	ldd	r25, Z+10	; 0x0a
    1112:	a3 85       	ldd	r26, Z+11	; 0x0b
    1114:	b4 85       	ldd	r27, Z+12	; 0x0c
    1116:	ac 01       	movw	r20, r24
    1118:	46 1b       	sub	r20, r22
    111a:	57 0b       	sbc	r21, r23
    111c:	82 1b       	sub	r24, r18
    111e:	93 0b       	sbc	r25, r19
    1120:	20 2f       	mov	r18, r16
    1122:	31 2f       	mov	r19, r17
    1124:	04 2f       	mov	r16, r20
    1126:	15 2f       	mov	r17, r21
    1128:	ce 2d       	mov	r28, r14
    112a:	df 2d       	mov	r29, r15
    112c:	e8 2e       	mov	r14, r24
    112e:	f9 2e       	mov	r15, r25
    1130:	32 2f       	mov	r19, r18
    1132:	22 27       	eor	r18, r18
    1134:	be 01       	movw	r22, r28
    1136:	62 0f       	add	r22, r18
    1138:	73 1f       	adc	r23, r19
    113a:	84 e4       	ldi	r24, 0x44	; 68
    113c:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    1140:	6e 2d       	mov	r22, r14
    1142:	7f 2d       	mov	r23, r15
    1144:	85 e4       	ldi	r24, 0x45	; 69
    1146:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    114a:	60 2f       	mov	r22, r16
    114c:	71 2f       	mov	r23, r17
    114e:	86 e4       	ldi	r24, 0x46	; 70
    1150:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    1154:	be 01       	movw	r22, r28
    1156:	8e e4       	ldi	r24, 0x4E	; 78
    1158:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    115c:	6e 2d       	mov	r22, r14
    115e:	7f 2d       	mov	r23, r15
    1160:	8f e4       	ldi	r24, 0x4F	; 79
    1162:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    1166:	82 e2       	ldi	r24, 0x22	; 34
    1168:	0e 94 71 06 	call	0xce2	; 0xce2 <LCD_Write_COM>
    116c:	85 b3       	in	r24, 0x15	; 21
    116e:	80 68       	ori	r24, 0x80	; 128
    1170:	85 bb       	out	0x15, r24	; 21
    1172:	df 91       	pop	r29
    1174:	cf 91       	pop	r28
    1176:	1f 91       	pop	r17
    1178:	0f 91       	pop	r16
    117a:	ff 90       	pop	r15
    117c:	ef 90       	pop	r14
    117e:	08 95       	ret

00001180 <_ZN4UTFT6clrScrEv>:
    1180:	85 b3       	in	r24, 0x15	; 21
    1182:	8e 7f       	andi	r24, 0xFE	; 254
    1184:	85 bb       	out	0x15, r24	; 21
    1186:	60 e0       	ldi	r22, 0x00	; 0
    1188:	7f ee       	ldi	r23, 0xEF	; 239
    118a:	84 e4       	ldi	r24, 0x44	; 68
    118c:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    1190:	60 e0       	ldi	r22, 0x00	; 0
    1192:	70 e0       	ldi	r23, 0x00	; 0
    1194:	85 e4       	ldi	r24, 0x45	; 69
    1196:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    119a:	6f e3       	ldi	r22, 0x3F	; 63
    119c:	71 e0       	ldi	r23, 0x01	; 1
    119e:	86 e4       	ldi	r24, 0x46	; 70
    11a0:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    11a4:	60 e0       	ldi	r22, 0x00	; 0
    11a6:	70 e0       	ldi	r23, 0x00	; 0
    11a8:	8e e4       	ldi	r24, 0x4E	; 78
    11aa:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    11ae:	60 e0       	ldi	r22, 0x00	; 0
    11b0:	70 e0       	ldi	r23, 0x00	; 0
    11b2:	8f e4       	ldi	r24, 0x4F	; 79
    11b4:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    11b8:	68 e7       	ldi	r22, 0x78	; 120
    11ba:	70 e6       	ldi	r23, 0x60	; 96
    11bc:	81 e1       	ldi	r24, 0x11	; 17
    11be:	0e 94 85 06 	call	0xd0a	; 0xd0a <LCD_Write_COM_DATA>
    11c2:	82 e2       	ldi	r24, 0x22	; 34
    11c4:	0e 94 71 06 	call	0xce2	; 0xce2 <LCD_Write_COM>
    11c8:	85 b3       	in	r24, 0x15	; 21
    11ca:	80 68       	ori	r24, 0x80	; 128
    11cc:	85 bb       	out	0x15, r24	; 21
    11ce:	12 ba       	out	0x12, r1	; 18
    11d0:	1b ba       	out	0x1b, r1	; 27
    11d2:	60 e0       	ldi	r22, 0x00	; 0
    11d4:	7c e2       	ldi	r23, 0x2C	; 44
    11d6:	81 e0       	ldi	r24, 0x01	; 1
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	0e 94 28 06 	call	0xc50	; 0xc50 <fastfill>
    11de:	8f ef       	ldi	r24, 0xFF	; 255
    11e0:	82 bb       	out	0x12, r24	; 18
    11e2:	8b bb       	out	0x1b, r24	; 27
    11e4:	85 b3       	in	r24, 0x15	; 21
    11e6:	8e 7f       	andi	r24, 0xFE	; 254
    11e8:	85 bb       	out	0x15, r24	; 21
    11ea:	08 95       	ret

000011ec <_ZN4UTFT8setColorEhhh>:
    11ec:	e4 2f       	mov	r30, r20
    11ee:	f0 e0       	ldi	r31, 0x00	; 0
    11f0:	f5 95       	asr	r31
    11f2:	e7 95       	ror	r30
    11f4:	f5 95       	asr	r31
    11f6:	e7 95       	ror	r30
    11f8:	f5 95       	asr	r31
    11fa:	e7 95       	ror	r30
    11fc:	f5 95       	asr	r31
    11fe:	e7 95       	ror	r30
    1200:	f5 95       	asr	r31
    1202:	e7 95       	ror	r30
    1204:	68 7f       	andi	r22, 0xF8	; 248
    1206:	e6 2b       	or	r30, r22
    1208:	dc 01       	movw	r26, r24
    120a:	ec 93       	st	X, r30
    120c:	4c 71       	andi	r20, 0x1C	; 28
    120e:	50 e0       	ldi	r21, 0x00	; 0
    1210:	44 0f       	add	r20, r20
    1212:	55 1f       	adc	r21, r21
    1214:	44 0f       	add	r20, r20
    1216:	55 1f       	adc	r21, r21
    1218:	44 0f       	add	r20, r20
    121a:	55 1f       	adc	r21, r21
    121c:	30 e0       	ldi	r19, 0x00	; 0
    121e:	35 95       	asr	r19
    1220:	27 95       	ror	r18
    1222:	35 95       	asr	r19
    1224:	27 95       	ror	r18
    1226:	35 95       	asr	r19
    1228:	27 95       	ror	r18
    122a:	42 2b       	or	r20, r18
    122c:	11 96       	adiw	r26, 0x01	; 1
    122e:	4c 93       	st	X, r20
    1230:	08 95       	ret

00001232 <_ZN4UTFT12setBackColorEhhh>:
    1232:	e4 2f       	mov	r30, r20
    1234:	f0 e0       	ldi	r31, 0x00	; 0
    1236:	f5 95       	asr	r31
    1238:	e7 95       	ror	r30
    123a:	f5 95       	asr	r31
    123c:	e7 95       	ror	r30
    123e:	f5 95       	asr	r31
    1240:	e7 95       	ror	r30
    1242:	f5 95       	asr	r31
    1244:	e7 95       	ror	r30
    1246:	f5 95       	asr	r31
    1248:	e7 95       	ror	r30
    124a:	68 7f       	andi	r22, 0xF8	; 248
    124c:	e6 2b       	or	r30, r22
    124e:	dc 01       	movw	r26, r24
    1250:	12 96       	adiw	r26, 0x02	; 2
    1252:	ec 93       	st	X, r30
    1254:	12 97       	sbiw	r26, 0x02	; 2
    1256:	4c 71       	andi	r20, 0x1C	; 28
    1258:	50 e0       	ldi	r21, 0x00	; 0
    125a:	44 0f       	add	r20, r20
    125c:	55 1f       	adc	r21, r21
    125e:	44 0f       	add	r20, r20
    1260:	55 1f       	adc	r21, r21
    1262:	44 0f       	add	r20, r20
    1264:	55 1f       	adc	r21, r21
    1266:	30 e0       	ldi	r19, 0x00	; 0
    1268:	35 95       	asr	r19
    126a:	27 95       	ror	r18
    126c:	35 95       	asr	r19
    126e:	27 95       	ror	r18
    1270:	35 95       	asr	r19
    1272:	27 95       	ror	r18
    1274:	42 2b       	or	r20, r18
    1276:	13 96       	adiw	r26, 0x03	; 3
    1278:	4c 93       	st	X, r20
    127a:	08 95       	ret

0000127c <_ZN4UTFT7InitLCDEh>:
    127c:	cf 93       	push	r28
    127e:	df 93       	push	r29
    1280:	ec 01       	movw	r28, r24
    1282:	6c 83       	std	Y+4, r22	; 0x04
    1284:	2f ef       	ldi	r18, 0xFF	; 255
    1286:	4f ef       	ldi	r20, 0xFF	; 255
    1288:	6f ef       	ldi	r22, 0xFF	; 255
    128a:	0e 94 f6 08 	call	0x11ec	; 0x11ec <_ZN4UTFT8setColorEhhh>
    128e:	20 e0       	ldi	r18, 0x00	; 0
    1290:	40 e0       	ldi	r20, 0x00	; 0
    1292:	60 e0       	ldi	r22, 0x00	; 0
    1294:	ce 01       	movw	r24, r28
    1296:	0e 94 19 09 	call	0x1232	; 0x1232 <_ZN4UTFT12setBackColorEhhh>
    129a:	1e 86       	std	Y+14, r1	; 0x0e
    129c:	1d 86       	std	Y+13, r1	; 0x0d
    129e:	df 91       	pop	r29
    12a0:	cf 91       	pop	r28
    12a2:	08 95       	ret

000012a4 <_ZN4UTFT8setPixelEj>:
    12a4:	87 2f       	mov	r24, r23
    12a6:	0e 94 78 06 	call	0xcf0	; 0xcf0 <LCD_Write_DATA>
    12aa:	08 95       	ret

000012ac <_ZN4UTFT9drawPixelEii>:
    12ac:	0f 93       	push	r16
    12ae:	1f 93       	push	r17
    12b0:	cf 93       	push	r28
    12b2:	df 93       	push	r29
    12b4:	ec 01       	movw	r28, r24
    12b6:	85 b3       	in	r24, 0x15	; 21
    12b8:	8e 7f       	andi	r24, 0xFE	; 254
    12ba:	85 bb       	out	0x15, r24	; 21
    12bc:	8a 01       	movw	r16, r20
    12be:	9b 01       	movw	r18, r22
    12c0:	ce 01       	movw	r24, r28
    12c2:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <_ZN4UTFT5setXYEjjjj>
    12c6:	68 81       	ld	r22, Y
    12c8:	70 e0       	ldi	r23, 0x00	; 0
    12ca:	76 2f       	mov	r23, r22
    12cc:	66 27       	eor	r22, r22
    12ce:	89 81       	ldd	r24, Y+1	; 0x01
    12d0:	68 2b       	or	r22, r24
    12d2:	ce 01       	movw	r24, r28
    12d4:	0e 94 52 09 	call	0x12a4	; 0x12a4 <_ZN4UTFT8setPixelEj>
    12d8:	85 b3       	in	r24, 0x15	; 21
    12da:	81 60       	ori	r24, 0x01	; 1
    12dc:	85 bb       	out	0x15, r24	; 21
    12de:	df 91       	pop	r29
    12e0:	cf 91       	pop	r28
    12e2:	1f 91       	pop	r17
    12e4:	0f 91       	pop	r16
    12e6:	08 95       	ret

000012e8 <_ZN4UTFT7setFontEPKh>:

void UTFT::setFont(const uint8_t* font)
{
    12e8:	dc 01       	movw	r26, r24
	cfont.font=font;
    12ea:	1e 96       	adiw	r26, 0x0e	; 14
    12ec:	7c 93       	st	X, r23
    12ee:	6e 93       	st	-X, r22
    12f0:	1d 97       	sbiw	r26, 0x0d	; 13
	cfont.x_size=fontbyte(0);
    12f2:	fb 01       	movw	r30, r22
    12f4:	84 91       	lpm	r24, Z
    12f6:	1f 96       	adiw	r26, 0x0f	; 15
    12f8:	8c 93       	st	X, r24
    12fa:	1f 97       	sbiw	r26, 0x0f	; 15
	cfont.y_size=fontbyte(1);
    12fc:	31 96       	adiw	r30, 0x01	; 1
    12fe:	e4 91       	lpm	r30, Z
    1300:	50 96       	adiw	r26, 0x10	; 16
    1302:	ec 93       	st	X, r30
    1304:	50 97       	sbiw	r26, 0x10	; 16
	cfont.offset=fontbyte(2);
    1306:	fb 01       	movw	r30, r22
    1308:	32 96       	adiw	r30, 0x02	; 2
    130a:	e4 91       	lpm	r30, Z
    130c:	51 96       	adiw	r26, 0x11	; 17
    130e:	ec 93       	st	X, r30
    1310:	51 97       	sbiw	r26, 0x11	; 17
	cfont.numchars=fontbyte(3);
    1312:	fb 01       	movw	r30, r22
    1314:	33 96       	adiw	r30, 0x03	; 3
    1316:	64 91       	lpm	r22, Z
    1318:	52 96       	adiw	r26, 0x12	; 18
    131a:	6c 93       	st	X, r22
    131c:	08 95       	ret

0000131e <__divsf3>:
    131e:	0e 94 a3 09 	call	0x1346	; 0x1346 <__divsf3x>
    1322:	0c 94 8b 0a 	jmp	0x1516	; 0x1516 <__fp_round>
    1326:	0e 94 84 0a 	call	0x1508	; 0x1508 <__fp_pscB>
    132a:	58 f0       	brcs	.+22     	; 0x1342 <__divsf3+0x24>
    132c:	0e 94 7d 0a 	call	0x14fa	; 0x14fa <__fp_pscA>
    1330:	40 f0       	brcs	.+16     	; 0x1342 <__divsf3+0x24>
    1332:	29 f4       	brne	.+10     	; 0x133e <__divsf3+0x20>
    1334:	5f 3f       	cpi	r21, 0xFF	; 255
    1336:	29 f0       	breq	.+10     	; 0x1342 <__divsf3+0x24>
    1338:	0c 94 74 0a 	jmp	0x14e8	; 0x14e8 <__fp_inf>
    133c:	51 11       	cpse	r21, r1
    133e:	0c 94 bf 0a 	jmp	0x157e	; 0x157e <__fp_szero>
    1342:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <__fp_nan>

00001346 <__divsf3x>:
    1346:	0e 94 9c 0a 	call	0x1538	; 0x1538 <__fp_split3>
    134a:	68 f3       	brcs	.-38     	; 0x1326 <__divsf3+0x8>

0000134c <__divsf3_pse>:
    134c:	99 23       	and	r25, r25
    134e:	b1 f3       	breq	.-20     	; 0x133c <__divsf3+0x1e>
    1350:	55 23       	and	r21, r21
    1352:	91 f3       	breq	.-28     	; 0x1338 <__divsf3+0x1a>
    1354:	95 1b       	sub	r25, r21
    1356:	55 0b       	sbc	r21, r21
    1358:	bb 27       	eor	r27, r27
    135a:	aa 27       	eor	r26, r26
    135c:	62 17       	cp	r22, r18
    135e:	73 07       	cpc	r23, r19
    1360:	84 07       	cpc	r24, r20
    1362:	38 f0       	brcs	.+14     	; 0x1372 <__divsf3_pse+0x26>
    1364:	9f 5f       	subi	r25, 0xFF	; 255
    1366:	5f 4f       	sbci	r21, 0xFF	; 255
    1368:	22 0f       	add	r18, r18
    136a:	33 1f       	adc	r19, r19
    136c:	44 1f       	adc	r20, r20
    136e:	aa 1f       	adc	r26, r26
    1370:	a9 f3       	breq	.-22     	; 0x135c <__divsf3_pse+0x10>
    1372:	35 d0       	rcall	.+106    	; 0x13de <__divsf3_pse+0x92>
    1374:	0e 2e       	mov	r0, r30
    1376:	3a f0       	brmi	.+14     	; 0x1386 <__divsf3_pse+0x3a>
    1378:	e0 e8       	ldi	r30, 0x80	; 128
    137a:	32 d0       	rcall	.+100    	; 0x13e0 <__divsf3_pse+0x94>
    137c:	91 50       	subi	r25, 0x01	; 1
    137e:	50 40       	sbci	r21, 0x00	; 0
    1380:	e6 95       	lsr	r30
    1382:	00 1c       	adc	r0, r0
    1384:	ca f7       	brpl	.-14     	; 0x1378 <__divsf3_pse+0x2c>
    1386:	2b d0       	rcall	.+86     	; 0x13de <__divsf3_pse+0x92>
    1388:	fe 2f       	mov	r31, r30
    138a:	29 d0       	rcall	.+82     	; 0x13de <__divsf3_pse+0x92>
    138c:	66 0f       	add	r22, r22
    138e:	77 1f       	adc	r23, r23
    1390:	88 1f       	adc	r24, r24
    1392:	bb 1f       	adc	r27, r27
    1394:	26 17       	cp	r18, r22
    1396:	37 07       	cpc	r19, r23
    1398:	48 07       	cpc	r20, r24
    139a:	ab 07       	cpc	r26, r27
    139c:	b0 e8       	ldi	r27, 0x80	; 128
    139e:	09 f0       	breq	.+2      	; 0x13a2 <__divsf3_pse+0x56>
    13a0:	bb 0b       	sbc	r27, r27
    13a2:	80 2d       	mov	r24, r0
    13a4:	bf 01       	movw	r22, r30
    13a6:	ff 27       	eor	r31, r31
    13a8:	93 58       	subi	r25, 0x83	; 131
    13aa:	5f 4f       	sbci	r21, 0xFF	; 255
    13ac:	3a f0       	brmi	.+14     	; 0x13bc <__divsf3_pse+0x70>
    13ae:	9e 3f       	cpi	r25, 0xFE	; 254
    13b0:	51 05       	cpc	r21, r1
    13b2:	78 f0       	brcs	.+30     	; 0x13d2 <__divsf3_pse+0x86>
    13b4:	0c 94 74 0a 	jmp	0x14e8	; 0x14e8 <__fp_inf>
    13b8:	0c 94 bf 0a 	jmp	0x157e	; 0x157e <__fp_szero>
    13bc:	5f 3f       	cpi	r21, 0xFF	; 255
    13be:	e4 f3       	brlt	.-8      	; 0x13b8 <__divsf3_pse+0x6c>
    13c0:	98 3e       	cpi	r25, 0xE8	; 232
    13c2:	d4 f3       	brlt	.-12     	; 0x13b8 <__divsf3_pse+0x6c>
    13c4:	86 95       	lsr	r24
    13c6:	77 95       	ror	r23
    13c8:	67 95       	ror	r22
    13ca:	b7 95       	ror	r27
    13cc:	f7 95       	ror	r31
    13ce:	9f 5f       	subi	r25, 0xFF	; 255
    13d0:	c9 f7       	brne	.-14     	; 0x13c4 <__divsf3_pse+0x78>
    13d2:	88 0f       	add	r24, r24
    13d4:	91 1d       	adc	r25, r1
    13d6:	96 95       	lsr	r25
    13d8:	87 95       	ror	r24
    13da:	97 f9       	bld	r25, 7
    13dc:	08 95       	ret
    13de:	e1 e0       	ldi	r30, 0x01	; 1
    13e0:	66 0f       	add	r22, r22
    13e2:	77 1f       	adc	r23, r23
    13e4:	88 1f       	adc	r24, r24
    13e6:	bb 1f       	adc	r27, r27
    13e8:	62 17       	cp	r22, r18
    13ea:	73 07       	cpc	r23, r19
    13ec:	84 07       	cpc	r24, r20
    13ee:	ba 07       	cpc	r27, r26
    13f0:	20 f0       	brcs	.+8      	; 0x13fa <__divsf3_pse+0xae>
    13f2:	62 1b       	sub	r22, r18
    13f4:	73 0b       	sbc	r23, r19
    13f6:	84 0b       	sbc	r24, r20
    13f8:	ba 0b       	sbc	r27, r26
    13fa:	ee 1f       	adc	r30, r30
    13fc:	88 f7       	brcc	.-30     	; 0x13e0 <__divsf3_pse+0x94>
    13fe:	e0 95       	com	r30
    1400:	08 95       	ret

00001402 <__fixsfsi>:
    1402:	0e 94 08 0a 	call	0x1410	; 0x1410 <__fixunssfsi>
    1406:	68 94       	set
    1408:	b1 11       	cpse	r27, r1
    140a:	0c 94 bf 0a 	jmp	0x157e	; 0x157e <__fp_szero>
    140e:	08 95       	ret

00001410 <__fixunssfsi>:
    1410:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__fp_splitA>
    1414:	88 f0       	brcs	.+34     	; 0x1438 <__fixunssfsi+0x28>
    1416:	9f 57       	subi	r25, 0x7F	; 127
    1418:	98 f0       	brcs	.+38     	; 0x1440 <__fixunssfsi+0x30>
    141a:	b9 2f       	mov	r27, r25
    141c:	99 27       	eor	r25, r25
    141e:	b7 51       	subi	r27, 0x17	; 23
    1420:	b0 f0       	brcs	.+44     	; 0x144e <__fixunssfsi+0x3e>
    1422:	e1 f0       	breq	.+56     	; 0x145c <__fixunssfsi+0x4c>
    1424:	66 0f       	add	r22, r22
    1426:	77 1f       	adc	r23, r23
    1428:	88 1f       	adc	r24, r24
    142a:	99 1f       	adc	r25, r25
    142c:	1a f0       	brmi	.+6      	; 0x1434 <__fixunssfsi+0x24>
    142e:	ba 95       	dec	r27
    1430:	c9 f7       	brne	.-14     	; 0x1424 <__fixunssfsi+0x14>
    1432:	14 c0       	rjmp	.+40     	; 0x145c <__fixunssfsi+0x4c>
    1434:	b1 30       	cpi	r27, 0x01	; 1
    1436:	91 f0       	breq	.+36     	; 0x145c <__fixunssfsi+0x4c>
    1438:	0e 94 be 0a 	call	0x157c	; 0x157c <__fp_zero>
    143c:	b1 e0       	ldi	r27, 0x01	; 1
    143e:	08 95       	ret
    1440:	0c 94 be 0a 	jmp	0x157c	; 0x157c <__fp_zero>
    1444:	67 2f       	mov	r22, r23
    1446:	78 2f       	mov	r23, r24
    1448:	88 27       	eor	r24, r24
    144a:	b8 5f       	subi	r27, 0xF8	; 248
    144c:	39 f0       	breq	.+14     	; 0x145c <__fixunssfsi+0x4c>
    144e:	b9 3f       	cpi	r27, 0xF9	; 249
    1450:	cc f3       	brlt	.-14     	; 0x1444 <__fixunssfsi+0x34>
    1452:	86 95       	lsr	r24
    1454:	77 95       	ror	r23
    1456:	67 95       	ror	r22
    1458:	b3 95       	inc	r27
    145a:	d9 f7       	brne	.-10     	; 0x1452 <__fixunssfsi+0x42>
    145c:	3e f4       	brtc	.+14     	; 0x146c <__fixunssfsi+0x5c>
    145e:	90 95       	com	r25
    1460:	80 95       	com	r24
    1462:	70 95       	com	r23
    1464:	61 95       	neg	r22
    1466:	7f 4f       	sbci	r23, 0xFF	; 255
    1468:	8f 4f       	sbci	r24, 0xFF	; 255
    146a:	9f 4f       	sbci	r25, 0xFF	; 255
    146c:	08 95       	ret

0000146e <__floatunsisf>:
    146e:	e8 94       	clt
    1470:	09 c0       	rjmp	.+18     	; 0x1484 <__floatsisf+0x12>

00001472 <__floatsisf>:
    1472:	97 fb       	bst	r25, 7
    1474:	3e f4       	brtc	.+14     	; 0x1484 <__floatsisf+0x12>
    1476:	90 95       	com	r25
    1478:	80 95       	com	r24
    147a:	70 95       	com	r23
    147c:	61 95       	neg	r22
    147e:	7f 4f       	sbci	r23, 0xFF	; 255
    1480:	8f 4f       	sbci	r24, 0xFF	; 255
    1482:	9f 4f       	sbci	r25, 0xFF	; 255
    1484:	99 23       	and	r25, r25
    1486:	a9 f0       	breq	.+42     	; 0x14b2 <__floatsisf+0x40>
    1488:	f9 2f       	mov	r31, r25
    148a:	96 e9       	ldi	r25, 0x96	; 150
    148c:	bb 27       	eor	r27, r27
    148e:	93 95       	inc	r25
    1490:	f6 95       	lsr	r31
    1492:	87 95       	ror	r24
    1494:	77 95       	ror	r23
    1496:	67 95       	ror	r22
    1498:	b7 95       	ror	r27
    149a:	f1 11       	cpse	r31, r1
    149c:	f8 cf       	rjmp	.-16     	; 0x148e <__floatsisf+0x1c>
    149e:	fa f4       	brpl	.+62     	; 0x14de <__floatsisf+0x6c>
    14a0:	bb 0f       	add	r27, r27
    14a2:	11 f4       	brne	.+4      	; 0x14a8 <__floatsisf+0x36>
    14a4:	60 ff       	sbrs	r22, 0
    14a6:	1b c0       	rjmp	.+54     	; 0x14de <__floatsisf+0x6c>
    14a8:	6f 5f       	subi	r22, 0xFF	; 255
    14aa:	7f 4f       	sbci	r23, 0xFF	; 255
    14ac:	8f 4f       	sbci	r24, 0xFF	; 255
    14ae:	9f 4f       	sbci	r25, 0xFF	; 255
    14b0:	16 c0       	rjmp	.+44     	; 0x14de <__floatsisf+0x6c>
    14b2:	88 23       	and	r24, r24
    14b4:	11 f0       	breq	.+4      	; 0x14ba <__floatsisf+0x48>
    14b6:	96 e9       	ldi	r25, 0x96	; 150
    14b8:	11 c0       	rjmp	.+34     	; 0x14dc <__floatsisf+0x6a>
    14ba:	77 23       	and	r23, r23
    14bc:	21 f0       	breq	.+8      	; 0x14c6 <__floatsisf+0x54>
    14be:	9e e8       	ldi	r25, 0x8E	; 142
    14c0:	87 2f       	mov	r24, r23
    14c2:	76 2f       	mov	r23, r22
    14c4:	05 c0       	rjmp	.+10     	; 0x14d0 <__floatsisf+0x5e>
    14c6:	66 23       	and	r22, r22
    14c8:	71 f0       	breq	.+28     	; 0x14e6 <__floatsisf+0x74>
    14ca:	96 e8       	ldi	r25, 0x86	; 134
    14cc:	86 2f       	mov	r24, r22
    14ce:	70 e0       	ldi	r23, 0x00	; 0
    14d0:	60 e0       	ldi	r22, 0x00	; 0
    14d2:	2a f0       	brmi	.+10     	; 0x14de <__floatsisf+0x6c>
    14d4:	9a 95       	dec	r25
    14d6:	66 0f       	add	r22, r22
    14d8:	77 1f       	adc	r23, r23
    14da:	88 1f       	adc	r24, r24
    14dc:	da f7       	brpl	.-10     	; 0x14d4 <__floatsisf+0x62>
    14de:	88 0f       	add	r24, r24
    14e0:	96 95       	lsr	r25
    14e2:	87 95       	ror	r24
    14e4:	97 f9       	bld	r25, 7
    14e6:	08 95       	ret

000014e8 <__fp_inf>:
    14e8:	97 f9       	bld	r25, 7
    14ea:	9f 67       	ori	r25, 0x7F	; 127
    14ec:	80 e8       	ldi	r24, 0x80	; 128
    14ee:	70 e0       	ldi	r23, 0x00	; 0
    14f0:	60 e0       	ldi	r22, 0x00	; 0
    14f2:	08 95       	ret

000014f4 <__fp_nan>:
    14f4:	9f ef       	ldi	r25, 0xFF	; 255
    14f6:	80 ec       	ldi	r24, 0xC0	; 192
    14f8:	08 95       	ret

000014fa <__fp_pscA>:
    14fa:	00 24       	eor	r0, r0
    14fc:	0a 94       	dec	r0
    14fe:	16 16       	cp	r1, r22
    1500:	17 06       	cpc	r1, r23
    1502:	18 06       	cpc	r1, r24
    1504:	09 06       	cpc	r0, r25
    1506:	08 95       	ret

00001508 <__fp_pscB>:
    1508:	00 24       	eor	r0, r0
    150a:	0a 94       	dec	r0
    150c:	12 16       	cp	r1, r18
    150e:	13 06       	cpc	r1, r19
    1510:	14 06       	cpc	r1, r20
    1512:	05 06       	cpc	r0, r21
    1514:	08 95       	ret

00001516 <__fp_round>:
    1516:	09 2e       	mov	r0, r25
    1518:	03 94       	inc	r0
    151a:	00 0c       	add	r0, r0
    151c:	11 f4       	brne	.+4      	; 0x1522 <__fp_round+0xc>
    151e:	88 23       	and	r24, r24
    1520:	52 f0       	brmi	.+20     	; 0x1536 <__fp_round+0x20>
    1522:	bb 0f       	add	r27, r27
    1524:	40 f4       	brcc	.+16     	; 0x1536 <__fp_round+0x20>
    1526:	bf 2b       	or	r27, r31
    1528:	11 f4       	brne	.+4      	; 0x152e <__fp_round+0x18>
    152a:	60 ff       	sbrs	r22, 0
    152c:	04 c0       	rjmp	.+8      	; 0x1536 <__fp_round+0x20>
    152e:	6f 5f       	subi	r22, 0xFF	; 255
    1530:	7f 4f       	sbci	r23, 0xFF	; 255
    1532:	8f 4f       	sbci	r24, 0xFF	; 255
    1534:	9f 4f       	sbci	r25, 0xFF	; 255
    1536:	08 95       	ret

00001538 <__fp_split3>:
    1538:	57 fd       	sbrc	r21, 7
    153a:	90 58       	subi	r25, 0x80	; 128
    153c:	44 0f       	add	r20, r20
    153e:	55 1f       	adc	r21, r21
    1540:	59 f0       	breq	.+22     	; 0x1558 <__fp_splitA+0x10>
    1542:	5f 3f       	cpi	r21, 0xFF	; 255
    1544:	71 f0       	breq	.+28     	; 0x1562 <__fp_splitA+0x1a>
    1546:	47 95       	ror	r20

00001548 <__fp_splitA>:
    1548:	88 0f       	add	r24, r24
    154a:	97 fb       	bst	r25, 7
    154c:	99 1f       	adc	r25, r25
    154e:	61 f0       	breq	.+24     	; 0x1568 <__fp_splitA+0x20>
    1550:	9f 3f       	cpi	r25, 0xFF	; 255
    1552:	79 f0       	breq	.+30     	; 0x1572 <__fp_splitA+0x2a>
    1554:	87 95       	ror	r24
    1556:	08 95       	ret
    1558:	12 16       	cp	r1, r18
    155a:	13 06       	cpc	r1, r19
    155c:	14 06       	cpc	r1, r20
    155e:	55 1f       	adc	r21, r21
    1560:	f2 cf       	rjmp	.-28     	; 0x1546 <__fp_split3+0xe>
    1562:	46 95       	lsr	r20
    1564:	f1 df       	rcall	.-30     	; 0x1548 <__fp_splitA>
    1566:	08 c0       	rjmp	.+16     	; 0x1578 <__fp_splitA+0x30>
    1568:	16 16       	cp	r1, r22
    156a:	17 06       	cpc	r1, r23
    156c:	18 06       	cpc	r1, r24
    156e:	99 1f       	adc	r25, r25
    1570:	f1 cf       	rjmp	.-30     	; 0x1554 <__fp_splitA+0xc>
    1572:	86 95       	lsr	r24
    1574:	71 05       	cpc	r23, r1
    1576:	61 05       	cpc	r22, r1
    1578:	08 94       	sec
    157a:	08 95       	ret

0000157c <__fp_zero>:
    157c:	e8 94       	clt

0000157e <__fp_szero>:
    157e:	bb 27       	eor	r27, r27
    1580:	66 27       	eor	r22, r22
    1582:	77 27       	eor	r23, r23
    1584:	cb 01       	movw	r24, r22
    1586:	97 f9       	bld	r25, 7
    1588:	08 95       	ret

0000158a <__mulsf3>:
    158a:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <__mulsf3x>
    158e:	0c 94 8b 0a 	jmp	0x1516	; 0x1516 <__fp_round>
    1592:	0e 94 7d 0a 	call	0x14fa	; 0x14fa <__fp_pscA>
    1596:	38 f0       	brcs	.+14     	; 0x15a6 <__mulsf3+0x1c>
    1598:	0e 94 84 0a 	call	0x1508	; 0x1508 <__fp_pscB>
    159c:	20 f0       	brcs	.+8      	; 0x15a6 <__mulsf3+0x1c>
    159e:	95 23       	and	r25, r21
    15a0:	11 f0       	breq	.+4      	; 0x15a6 <__mulsf3+0x1c>
    15a2:	0c 94 74 0a 	jmp	0x14e8	; 0x14e8 <__fp_inf>
    15a6:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <__fp_nan>
    15aa:	11 24       	eor	r1, r1
    15ac:	0c 94 bf 0a 	jmp	0x157e	; 0x157e <__fp_szero>

000015b0 <__mulsf3x>:
    15b0:	0e 94 9c 0a 	call	0x1538	; 0x1538 <__fp_split3>
    15b4:	70 f3       	brcs	.-36     	; 0x1592 <__mulsf3+0x8>

000015b6 <__mulsf3_pse>:
    15b6:	95 9f       	mul	r25, r21
    15b8:	c1 f3       	breq	.-16     	; 0x15aa <__mulsf3+0x20>
    15ba:	95 0f       	add	r25, r21
    15bc:	50 e0       	ldi	r21, 0x00	; 0
    15be:	55 1f       	adc	r21, r21
    15c0:	62 9f       	mul	r22, r18
    15c2:	f0 01       	movw	r30, r0
    15c4:	72 9f       	mul	r23, r18
    15c6:	bb 27       	eor	r27, r27
    15c8:	f0 0d       	add	r31, r0
    15ca:	b1 1d       	adc	r27, r1
    15cc:	63 9f       	mul	r22, r19
    15ce:	aa 27       	eor	r26, r26
    15d0:	f0 0d       	add	r31, r0
    15d2:	b1 1d       	adc	r27, r1
    15d4:	aa 1f       	adc	r26, r26
    15d6:	64 9f       	mul	r22, r20
    15d8:	66 27       	eor	r22, r22
    15da:	b0 0d       	add	r27, r0
    15dc:	a1 1d       	adc	r26, r1
    15de:	66 1f       	adc	r22, r22
    15e0:	82 9f       	mul	r24, r18
    15e2:	22 27       	eor	r18, r18
    15e4:	b0 0d       	add	r27, r0
    15e6:	a1 1d       	adc	r26, r1
    15e8:	62 1f       	adc	r22, r18
    15ea:	73 9f       	mul	r23, r19
    15ec:	b0 0d       	add	r27, r0
    15ee:	a1 1d       	adc	r26, r1
    15f0:	62 1f       	adc	r22, r18
    15f2:	83 9f       	mul	r24, r19
    15f4:	a0 0d       	add	r26, r0
    15f6:	61 1d       	adc	r22, r1
    15f8:	22 1f       	adc	r18, r18
    15fa:	74 9f       	mul	r23, r20
    15fc:	33 27       	eor	r19, r19
    15fe:	a0 0d       	add	r26, r0
    1600:	61 1d       	adc	r22, r1
    1602:	23 1f       	adc	r18, r19
    1604:	84 9f       	mul	r24, r20
    1606:	60 0d       	add	r22, r0
    1608:	21 1d       	adc	r18, r1
    160a:	82 2f       	mov	r24, r18
    160c:	76 2f       	mov	r23, r22
    160e:	6a 2f       	mov	r22, r26
    1610:	11 24       	eor	r1, r1
    1612:	9f 57       	subi	r25, 0x7F	; 127
    1614:	50 40       	sbci	r21, 0x00	; 0
    1616:	9a f0       	brmi	.+38     	; 0x163e <__mulsf3_pse+0x88>
    1618:	f1 f0       	breq	.+60     	; 0x1656 <__mulsf3_pse+0xa0>
    161a:	88 23       	and	r24, r24
    161c:	4a f0       	brmi	.+18     	; 0x1630 <__mulsf3_pse+0x7a>
    161e:	ee 0f       	add	r30, r30
    1620:	ff 1f       	adc	r31, r31
    1622:	bb 1f       	adc	r27, r27
    1624:	66 1f       	adc	r22, r22
    1626:	77 1f       	adc	r23, r23
    1628:	88 1f       	adc	r24, r24
    162a:	91 50       	subi	r25, 0x01	; 1
    162c:	50 40       	sbci	r21, 0x00	; 0
    162e:	a9 f7       	brne	.-22     	; 0x161a <__mulsf3_pse+0x64>
    1630:	9e 3f       	cpi	r25, 0xFE	; 254
    1632:	51 05       	cpc	r21, r1
    1634:	80 f0       	brcs	.+32     	; 0x1656 <__mulsf3_pse+0xa0>
    1636:	0c 94 74 0a 	jmp	0x14e8	; 0x14e8 <__fp_inf>
    163a:	0c 94 bf 0a 	jmp	0x157e	; 0x157e <__fp_szero>
    163e:	5f 3f       	cpi	r21, 0xFF	; 255
    1640:	e4 f3       	brlt	.-8      	; 0x163a <__mulsf3_pse+0x84>
    1642:	98 3e       	cpi	r25, 0xE8	; 232
    1644:	d4 f3       	brlt	.-12     	; 0x163a <__mulsf3_pse+0x84>
    1646:	86 95       	lsr	r24
    1648:	77 95       	ror	r23
    164a:	67 95       	ror	r22
    164c:	b7 95       	ror	r27
    164e:	f7 95       	ror	r31
    1650:	e7 95       	ror	r30
    1652:	9f 5f       	subi	r25, 0xFF	; 255
    1654:	c1 f7       	brne	.-16     	; 0x1646 <__mulsf3_pse+0x90>
    1656:	fe 2b       	or	r31, r30
    1658:	88 0f       	add	r24, r24
    165a:	91 1d       	adc	r25, r1
    165c:	96 95       	lsr	r25
    165e:	87 95       	ror	r24
    1660:	97 f9       	bld	r25, 7
    1662:	08 95       	ret

00001664 <_exit>:
    1664:	f8 94       	cli

00001666 <__stop_program>:
    1666:	ff cf       	rjmp	.-2      	; 0x1666 <__stop_program>
