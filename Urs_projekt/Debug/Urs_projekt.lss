
Urs_projekt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003944  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000094  00800060  00003944  000039d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000003f  008000f4  008000f4  00003a6c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00003a6c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003a9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002e8  00000000  00000000  00003ad8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000791e  00000000  00000000  00003dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e06  00000000  00000000  0000b6de  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000236c  00000000  00000000  0000c4e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b9c  00000000  00000000  0000e850  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000eb5  00000000  00000000  0000f3ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004643  00000000  00000000  000102a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000260  00000000  00000000  000148e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 78 08 	jmp	0x10f0	; 0x10f0 <__ctors_end>
       4:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
       8:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
       c:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      10:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      14:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      18:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      1c:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      20:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      24:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      28:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      2c:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      30:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      34:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      38:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      3c:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      40:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      44:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      48:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      4c:	0c 94 68 0a 	jmp	0x14d0	; 0x14d0 <__vector_19>
      50:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__bad_interrupt>
      54:	c7 0b       	sbc	r28, r23
      56:	d4 0b       	sbc	r29, r20
      58:	e1 0b       	sbc	r30, r17
      5a:	ee 0b       	sbc	r30, r30
      5c:	fb 0b       	sbc	r31, r27
      5e:	08 0c       	add	r0, r8
      60:	15 0c       	add	r1, r5
      62:	22 0c       	add	r2, r2
      64:	2f 0c       	add	r2, r15
      66:	3c 0c       	add	r3, r12
      68:	49 0c       	add	r4, r9
      6a:	56 0c       	add	r5, r6
      6c:	63 0c       	add	r6, r3
      6e:	70 0c       	add	r7, r0
      70:	7d 0c       	add	r7, r13
      72:	8a 0c       	add	r8, r10
      74:	05 a8       	ldd	r0, Z+53	; 0x35
      76:	4c cd       	rjmp	.-1384   	; 0xfffffb10 <__eeprom_end+0xff7efb10>
      78:	b2 d4       	rcall	.+2404   	; 0x9de <__stack+0x57f>
      7a:	4e b9       	out	0x0e, r20	; 14
      7c:	38 36       	cpi	r19, 0x68	; 104
      7e:	a9 02       	muls	r26, r25
      80:	0c 50       	subi	r16, 0x0C	; 12
      82:	b9 91       	ld	r27, Y+
      84:	86 88       	ldd	r8, Z+22	; 0x16
      86:	08 3c       	cpi	r16, 0xC8	; 200
      88:	a6 aa       	std	Z+54, r10	; 0x36
      8a:	aa 2a       	or	r10, r26
      8c:	be 00       	.word	0x00be	; ????
      8e:	00 00       	nop
      90:	80 3f       	cpi	r24, 0xF0	; 240

00000092 <BigFont>:
      92:	10 10 20 5f 00 00 00 00 00 00 00 00 00 00 00 00     .. _............
	...
      ba:	07 00 0f 80 0f 80 0f 80 0f 80 0f 80 07 00 07 00     ................
      ca:	00 00 00 00 07 00 07 00 07 00 00 00 00 00 0e 38     ...............8
      da:	0e 38 0e 38 0e 38 06 30 00 00 00 00 00 00 00 00     .8.8.8.0........
	...
      f6:	00 00 0c 30 0c 30 0c 30 7f fe 7f fe 0c 30 0c 30     ...0.0.0.....0.0
     106:	0c 30 0c 30 7f fe 7f fe 0c 30 0c 30 0c 30 00 00     .0.0.....0.0.0..
     116:	00 00 02 40 02 40 0f f8 1f f8 1a 40 1a 40 1f f0     ...@.@.....@.@..
     126:	0f f8 02 58 02 58 1f f8 1f f0 02 40 02 40 00 00     ...X.X.....@.@..
     136:	00 00 00 00 00 00 0e 10 0e 30 0e 70 00 e0 01 c0     .........0.p....
     146:	03 80 07 00 0e 70 0c 70 08 70 00 00 00 00 00 00     .....p.p.p......
     156:	00 00 00 00 0f 00 19 80 19 80 19 80 0f 00 0f 08     ................
     166:	0f 98 19 f8 18 f0 18 e0 19 f0 0f 98 00 00 00 00     ................
     176:	00 00 00 00 07 00 07 00 07 00 0e 00 00 00 00 00     ................
	...
     19a:	00 f0 01 c0 03 80 07 00 0e 00 0e 00 0e 00 0e 00     ................
     1aa:	07 00 03 80 01 c0 00 f0 00 00 00 00 00 00 00 00     ................
     1ba:	0f 00 03 80 01 c0 00 e0 00 70 00 70 00 70 00 70     .........p.p.p.p
     1ca:	00 e0 01 c0 03 80 0f 00 00 00 00 00 00 00 00 00     ................
     1da:	01 80 11 88 09 90 07 e0 07 e0 3f fc 3f fc 07 e0     ..........?.?...
     1ea:	07 e0 09 90 11 88 01 80 00 00 00 00 00 00 00 00     ................
     1fa:	00 00 00 00 01 80 01 80 01 80 0f f0 0f f0 01 80     ................
     20a:	01 80 01 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     22a:	00 00 07 00 07 00 07 00 0e 00 00 00 00 00 00 00     ................
	...
     242:	00 00 1f f8 1f f8 00 00 00 00 00 00 00 00 00 00     ................
	...
     26a:	00 00 07 00 07 00 07 00 00 00 00 00 00 00 00 00     ................
     27a:	00 02 00 06 00 0e 00 1c 00 38 00 70 00 e0 01 c0     .........8.p....
     28a:	03 80 07 00 0e 00 1c 00 00 00 00 00 00 00 00 00     ................
     29a:	0f f0 1c 38 1c 78 1c f8 1c f8 1d b8 1d b8 1f 38     ...8.x.........8
     2aa:	1f 38 1e 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     2ba:	01 80 01 80 03 80 1f 80 1f 80 03 80 03 80 03 80     ................
     2ca:	03 80 03 80 03 80 1f f0 00 00 00 00 00 00 00 00     ................
     2da:	0f e0 1c 70 1c 38 00 38 00 70 00 e0 01 c0 03 80     ...p.8.8.p......
     2ea:	07 00 0e 38 1c 38 1f f8 00 00 00 00 00 00 00 00     ...8.8..........
     2fa:	0f e0 1c 70 1c 38 00 38 00 70 03 c0 03 c0 00 70     ...p.8.8.p.....p
     30a:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     31a:	00 e0 01 e0 03 e0 06 e0 0c e0 18 e0 1f f8 1f f8     ................
     32a:	00 e0 00 e0 00 e0 03 f8 00 00 00 00 00 00 00 00     ................
     33a:	1f f8 1c 00 1c 00 1c 00 1c 00 1f e0 1f f0 00 78     ...............x
     34a:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     35a:	03 e0 07 00 0e 00 1c 00 1c 00 1f f0 1f f8 1c 38     ...............8
     36a:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     37a:	1f fc 1c 1c 1c 1c 1c 1c 00 1c 00 38 00 70 00 e0     ...........8.p..
     38a:	01 c0 03 80 03 80 03 80 00 00 00 00 00 00 00 00     ................
     39a:	0f f0 1c 38 1c 38 1c 38 1f 38 07 e0 07 e0 1c f8     ...8.8.8.8......
     3aa:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     3ba:	0f f0 1c 38 1c 38 1c 38 1c 38 1f f8 0f f8 00 38     ...8.8.8.8.....8
     3ca:	00 38 00 70 00 e0 07 c0 00 00 00 00 00 00 00 00     .8.p............
     3da:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3ea:	03 80 03 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     3fa:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     40a:	03 80 03 80 07 00 00 00 00 00 00 00 00 00 00 70     ...............p
     41a:	00 e0 01 c0 03 80 07 00 0e 00 1c 00 1c 00 0e 00     ................
     42a:	07 00 03 80 01 c0 00 e0 00 70 00 00 00 00 00 00     .........p......
     43a:	00 00 00 00 00 00 3f fc 3f fc 00 00 00 00 3f fc     ......?.?.....?.
     44a:	3f fc 00 00 00 00 00 00 00 00 00 00 00 00 1c 00     ?...............
     45a:	0e 00 07 00 03 80 01 c0 00 e0 00 70 00 70 00 e0     ...........p.p..
     46a:	01 c0 03 80 07 00 0e 00 1c 00 00 00 00 00 03 c0     ................
     47a:	0f f0 1e 78 18 38 00 38 00 70 00 e0 01 c0 01 c0     ...x.8.8.p......
     48a:	00 00 00 00 01 c0 01 c0 01 c0 00 00 00 00 0f f8     ................
     49a:	1c 1c 1c 1c 1c 1c 1c 1c 1c fc 1c fc 1c fc 1c fc     ................
     4aa:	1c 00 1c 00 1c 00 1f f0 07 f8 00 00 00 00 00 00     ................
     4ba:	03 c0 07 e0 0e 70 1c 38 1c 38 1c 38 1c 38 1f f8     .....p.8.8.8.8..
     4ca:	1c 38 1c 38 1c 38 1c 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     4da:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 38     ...8.8.8.8.....8
     4ea:	0e 38 0e 38 0e 38 1f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     4fa:	07 f0 0e 38 1c 38 1c 00 1c 00 1c 00 1c 00 1c 00     ...8.8..........
     50a:	1c 00 1c 38 0e 38 07 f0 00 00 00 00 00 00 00 00     ...8.8..........
     51a:	1f e0 0e 70 0e 38 0e 38 0e 38 0e 38 0e 38 0e 38     ...p.8.8.8.8.8.8
     52a:	0e 38 0e 38 0e 70 1f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     53a:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     54a:	0e 00 0e 08 0e 18 1f f8 00 00 00 00 00 00 00 00     ................
     55a:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     56a:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     57a:	07 f0 0e 38 1c 38 1c 38 1c 00 1c 00 1c 00 1c f8     ...8.8.8........
     58a:	1c 38 1c 38 0e 38 07 f8 00 00 00 00 00 00 00 00     .8.8.8..........
     59a:	1c 70 1c 70 1c 70 1c 70 1c 70 1f f0 1f f0 1c 70     .p.p.p.p.p.....p
     5aa:	1c 70 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     .p.p.p.p........
     5ba:	0f e0 03 80 03 80 03 80 03 80 03 80 03 80 03 80     ................
     5ca:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     5da:	01 fc 00 70 00 70 00 70 00 70 00 70 00 70 38 70     ...p.p.p.p.p.p8p
     5ea:	38 70 38 70 38 70 0f e0 00 00 00 00 00 00 00 00     8p8p8p..........
     5fa:	1e 38 0e 38 0e 70 0e e0 0f c0 0f 80 0f 80 0f c0     .8.8.p..........
     60a:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     61a:	1f 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00     ................
     62a:	0e 08 0e 18 0e 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     63a:	1c 1c 1e 3c 1f 7c 1f fc 1f fc 1d dc 1c 9c 1c 1c     ...<.|..........
     64a:	1c 1c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     ................
     65a:	1c 1c 1c 1c 1e 1c 1f 1c 1f 9c 1d dc 1c fc 1c 7c     ...............|
     66a:	1c 3c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     .<..............
     67a:	03 e0 07 f0 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     .....8..........
     68a:	1c 1c 0e 38 07 f0 03 e0 00 00 00 00 00 00 00 00     ...8............
     69a:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 00     ...8.8.8.8......
     6aa:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     6ba:	03 e0 0f 78 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 7c     ...x.8.........|
     6ca:	1c fc 0f f8 0f f8 00 38 00 fc 00 00 00 00 00 00     .......8........
     6da:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 70     ...8.8.8.8.....p
     6ea:	0e 38 0e 38 0e 38 1e 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     6fa:	0f f0 1c 38 1c 38 1c 38 1c 00 0f e0 07 f0 00 38     ...8.8.8.......8
     70a:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     71a:	1f fc 19 cc 11 c4 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     72a:	01 c0 01 c0 01 c0 07 f0 00 00 00 00 00 00 00 00     ................
     73a:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     74a:	1c 70 1c 70 1c 70 0f e0 00 00 00 00 00 00 00 00     .p.p.p..........
     75a:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     76a:	1c 70 0e e0 07 c0 03 80 00 00 00 00 00 00 00 00     .p..............
     77a:	1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 1c 9c     ................
     78a:	0f f8 0f f8 07 70 07 70 00 00 00 00 00 00 00 00     .....p.p........
     79a:	1c 70 1c 70 1c 70 0e e0 07 c0 03 80 03 80 07 c0     .p.p.p..........
     7aa:	0e e0 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     ...p.p.p........
     7ba:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
     7ca:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     7da:	1f f8 1c 38 18 38 10 70 00 e0 01 c0 03 80 07 00     ...8.8.p........
     7ea:	0e 08 1c 18 1c 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     7fa:	07 f0 07 00 07 00 07 00 07 00 07 00 07 00 07 00     ................
     80a:	07 00 07 00 07 00 07 f0 00 00 00 00 00 00 00 00     ................
     81a:	10 00 18 00 1c 00 0e 00 07 00 03 80 01 c0 00 e0     ................
     82a:	00 70 00 38 00 1c 00 07 00 00 00 00 00 00 00 00     .p.8............
     83a:	07 f0 00 70 00 70 00 70 00 70 00 70 00 70 00 70     ...p.p.p.p.p.p.p
     84a:	00 70 00 70 00 70 07 f0 00 00 00 00 00 00 01 80     .p.p.p..........
     85a:	03 c0 07 e0 0e 70 1c 38 00 00 00 00 00 00 00 00     .....p.8........
	...
     892:	7f ff 7f ff 00 00 00 00 1c 00 1c 00 07 00 07 00     ................
	...
     8c2:	0f e0 00 70 00 70 0f f0 1c 70 1c 70 1c 70 0f d8     ...p.p...p.p.p..
	...
     8da:	1e 00 0e 00 0e 00 0e 00 0f f0 0e 38 0e 38 0e 38     ...........8.8.8
     8ea:	0e 38 0e 38 0e 38 1b f0 00 00 00 00 00 00 00 00     .8.8.8..........
	...
     902:	0f e0 1c 70 1c 70 1c 00 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     91a:	00 f8 00 70 00 70 00 70 0f f0 1c 70 1c 70 1c 70     ...p.p.p...p.p.p
     92a:	1c 70 1c 70 1c 70 0f d8 00 00 00 00 00 00 00 00     .p.p.p..........
	...
     942:	0f e0 1c 70 1c 70 1f f0 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     95a:	03 e0 07 70 07 70 07 00 07 00 1f e0 1f e0 07 00     ...p.p..........
     96a:	07 00 07 00 07 00 1f c0 00 00 00 00 00 00 00 00     ................
	...
     982:	0f d8 1c 70 1c 70 1c 70 1c 70 0f f0 07 f0 00 70     ...p.p.p.p.....p
     992:	1c 70 0f e0 00 00 00 00 1e 00 0e 00 0e 00 0e 00     .p..............
     9a2:	0e f0 0f 38 0f 38 0e 38 0e 38 0e 38 0e 38 1e 38     ...8.8.8.8.8.8.8
	...
     9ba:	01 c0 01 c0 01 c0 00 00 0f c0 01 c0 01 c0 01 c0     ................
     9ca:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
     9da:	00 70 00 70 00 70 00 00 03 f0 00 70 00 70 00 70     .p.p.p.....p.p.p
     9ea:	00 70 00 70 00 70 1c 70 0c f0 07 e0 00 00 00 00     .p.p.p.p........
     9fa:	1e 00 0e 00 0e 00 0e 00 0e 38 0e 70 0e e0 0f c0     .........8.p....
     a0a:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     a1a:	0f c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     a2a:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
	...
     a42:	1f f8 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c     ................
	...
     a62:	1f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     ...p.p.p.p.p.p.p
	...
     a82:	0f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f e0     ...p.p.p.p.p.p..
	...
     aa2:	1b f0 0e 38 0e 38 0e 38 0e 38 0e 38 0f f0 0e 00     ...8.8.8.8.8....
     ab2:	0e 00 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ac2:	1f b0 38 e0 38 e0 38 e0 38 e0 38 e0 1f e0 00 e0     ..8.8.8.8.8.....
     ad2:	00 e0 01 f0 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ae2:	1e f0 0f f8 0f 38 0e 00 0e 00 0e 00 0e 00 1f 00     .....8..........
	...
     b02:	0f e0 1c 30 1c 30 0f 80 03 e0 18 70 18 70 0f e0     ...0.0.....p.p..
	...
     b1a:	00 00 01 00 03 00 07 00 1f f0 07 00 07 00 07 00     ................
     b2a:	07 00 07 70 07 70 03 e0 00 00 00 00 00 00 00 00     ...p.p..........
	...
     b42:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f d8     .p.p.p.p.p.p.p..
	...
     b62:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
	...
     b82:	1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 0f f8 07 70 07 70     .............p.p
	...
     ba2:	1c e0 1c e0 0f c0 07 80 07 80 0f c0 1c e0 1c e0     ................
	...
     bc2:	0e 38 0e 38 0e 38 0e 38 0e 38 07 f0 03 e0 00 e0     .8.8.8.8.8......
     bd2:	01 c0 1f 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     be2:	1f e0 18 e0 11 c0 03 80 07 00 0e 20 1c 60 1f e0     ........... .`..
	...
     bfa:	01 f8 03 80 03 80 03 80 07 00 1c 00 1c 00 07 00     ................
     c0a:	03 80 03 80 03 80 01 f8 00 00 00 00 00 00 01 c0     ................
     c1a:	01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     c2a:	01 c0 01 c0 01 c0 01 c0 01 c0 00 00 00 00 00 00     ................
     c3a:	1f 80 01 c0 01 c0 01 c0 00 e0 00 38 00 38 00 e0     ...........8.8..
     c4a:	01 c0 01 c0 01 c0 1f 80 00 00 00 00 00 00 00 00     ................
     c5a:	1f 1c 3b 9c 39 dc 38 f8 00 00 00 00 00 00 00 00     ..;.9.8.........
	...

00000c76 <SmallFont>:
     c76:	08 0c 20 5f 00 00 00 00 00 00 00 00 00 00 00 00     .. _............
     c86:	00 00 20 20 20 20 20 20 00 20 00 00 00 28 50 50     ..      . ...(PP
	...
     c9e:	00 00 28 28 fc 28 50 fc 50 50 00 00 00 20 78 a8     ..((.(P.PP... x.
     cae:	a0 60 30 28 a8 f0 20 00 00 00 48 a8 b0 50 28 34     .`0(.. ...H..P(4
     cbe:	54 48 00 00 00 00 20 50 50 78 a8 a8 90 6c 00 00     TH.... PPx...l..
     cce:	00 40 40 80 00 00 00 00 00 00 00 00 00 04 08 10     .@@.............
     cde:	10 10 10 10 10 08 04 00 00 40 20 10 10 10 10 10     .........@ .....
     cee:	10 20 40 00 00 00 00 20 a8 70 70 a8 20 00 00 00     . @.... .pp. ...
     cfe:	00 00 20 20 20 f8 20 20 20 00 00 00 00 00 00 00     ..   .   .......
     d0e:	00 00 00 00 00 40 40 80 00 00 00 00 00 f8 00 00     .....@@.........
	...
     d2a:	00 40 00 00 00 08 10 10 10 20 20 40 40 40 80 00     .@.......  @@@..
     d3a:	00 00 70 88 88 88 88 88 88 70 00 00 00 00 20 60     ..p......p.... `
     d4a:	20 20 20 20 20 70 00 00 00 00 70 88 88 10 20 40          p....p... @
     d5a:	80 f8 00 00 00 00 70 88 08 30 08 08 88 70 00 00     ......p..0...p..
     d6a:	00 00 10 30 50 50 90 78 10 18 00 00 00 00 f8 80     ...0PP.x........
     d7a:	80 f0 08 08 88 70 00 00 00 00 70 90 80 f0 88 88     .....p....p.....
     d8a:	88 70 00 00 00 00 f8 90 10 20 20 20 20 20 00 00     .p.......     ..
     d9a:	00 00 70 88 88 70 88 88 88 70 00 00 00 00 70 88     ..p..p...p....p.
     daa:	88 88 78 08 48 70 00 00 00 00 00 00 20 00 00 00     ..x.Hp...... ...
     dba:	00 20 00 00 00 00 00 00 00 20 00 00 00 20 20 00     . ....... ...  .
     dca:	00 04 08 10 20 40 20 10 08 04 00 00 00 00 00 00     .... @ .........
     dda:	f8 00 00 f8 00 00 00 00 00 40 20 10 08 04 08 10     .........@ .....
     dea:	20 40 00 00 00 00 70 88 88 10 20 20 00 20 00 00      @....p...  . ..
     dfa:	00 00 70 88 98 a8 a8 b8 80 78 00 00 00 00 20 20     ..p......x....  
     e0a:	30 50 50 78 48 cc 00 00 00 00 f0 48 48 70 48 48     0PPxH......HHpHH
     e1a:	48 f0 00 00 00 00 78 88 80 80 80 80 88 70 00 00     H.....x......p..
     e2a:	00 00 f0 48 48 48 48 48 48 f0 00 00 00 00 f8 48     ...HHHHHH......H
     e3a:	50 70 50 40 48 f8 00 00 00 00 f8 48 50 70 50 40     PpP@H......HPpP@
     e4a:	40 e0 00 00 00 00 38 48 80 80 9c 88 48 30 00 00     @.....8H....H0..
     e5a:	00 00 cc 48 48 78 48 48 48 cc 00 00 00 00 f8 20     ...HHxHHH...... 
     e6a:	20 20 20 20 20 f8 00 00 00 00 7c 10 10 10 10 10          .....|.....
     e7a:	10 90 e0 00 00 00 ec 48 50 60 50 50 48 ec 00 00     .......HP`PPH...
     e8a:	00 00 e0 40 40 40 40 40 44 fc 00 00 00 00 d8 d8     ...@@@@@D.......
     e9a:	d8 d8 a8 a8 a8 a8 00 00 00 00 dc 48 68 68 58 58     ...........HhhXX
     eaa:	48 e8 00 00 00 00 70 88 88 88 88 88 88 70 00 00     H.....p......p..
     eba:	00 00 f0 48 48 70 40 40 40 e0 00 00 00 00 70 88     ...HHp@@@.....p.
     eca:	88 88 88 e8 98 70 18 00 00 00 f0 48 48 70 50 48     .....p.....HHpPH
     eda:	48 ec 00 00 00 00 78 88 80 60 10 08 88 f0 00 00     H.....x..`......
     eea:	00 00 f8 a8 20 20 20 20 20 70 00 00 00 00 cc 48     ....     p.....H
     efa:	48 48 48 48 48 30 00 00 00 00 cc 48 48 50 50 30     HHHHH0.....HHPP0
     f0a:	20 20 00 00 00 00 a8 a8 a8 70 50 50 50 50 00 00       .......pPPPP..
     f1a:	00 00 d8 50 50 20 20 50 50 d8 00 00 00 00 d8 50     ...PP  PP......P
     f2a:	50 20 20 20 20 70 00 00 00 00 f8 90 10 20 20 40     P    p.......  @
     f3a:	48 f8 00 00 00 38 20 20 20 20 20 20 20 20 38 00     H....8        8.
     f4a:	00 40 40 40 20 20 10 10 10 08 00 00 00 70 10 10     .@@@  .......p..
     f5a:	10 10 10 10 10 10 70 00 00 20 50 00 00 00 00 00     ......p.. P.....
	...
     f76:	00 00 00 fc 00 20 00 00 00 00 00 00 00 00 00 00     ..... ..........
     f86:	00 00 00 00 00 30 48 38 48 3c 00 00 00 00 c0 40     .....0H8H<.....@
     f96:	40 70 48 48 48 70 00 00 00 00 00 00 00 38 48 40     @pHHHp.......8H@
     fa6:	40 38 00 00 00 00 18 08 08 38 48 48 48 3c 00 00     @8.......8HHH<..
     fb6:	00 00 00 00 00 30 48 78 40 38 00 00 00 00 1c 20     .....0Hx@8..... 
     fc6:	20 78 20 20 20 78 00 00 00 00 00 00 00 3c 48 30      x   x.......<H0
     fd6:	40 78 44 38 00 00 c0 40 40 70 48 48 48 ec 00 00     @xD8...@@pHHH...
     fe6:	00 00 20 00 00 60 20 20 20 70 00 00 00 00 10 00     .. ..`   p......
     ff6:	00 30 10 10 10 10 10 e0 00 00 c0 40 40 5c 50 70     .0.........@@\Pp
    1006:	48 ec 00 00 00 00 e0 20 20 20 20 20 20 f8 00 00     H......      ...
    1016:	00 00 00 00 00 f0 a8 a8 a8 a8 00 00 00 00 00 00     ................
    1026:	00 f0 48 48 48 ec 00 00 00 00 00 00 00 30 48 48     ..HHH........0HH
    1036:	48 30 00 00 00 00 00 00 00 f0 48 48 48 70 40 e0     H0........HHHp@.
    1046:	00 00 00 00 00 38 48 48 48 38 08 1c 00 00 00 00     .....8HHH8......
    1056:	00 d8 60 40 40 e0 00 00 00 00 00 00 00 78 40 30     ..`@@........x@0
    1066:	08 78 00 00 00 00 00 20 20 70 20 20 20 18 00 00     .x.....  p   ...
    1076:	00 00 00 00 00 d8 48 48 48 3c 00 00 00 00 00 00     ......HHH<......
    1086:	00 ec 48 50 30 20 00 00 00 00 00 00 00 a8 a8 70     ..HP0 .........p
    1096:	50 50 00 00 00 00 00 00 00 d8 50 20 50 d8 00 00     PP........P P...
    10a6:	00 00 00 00 00 ec 48 50 30 20 20 c0 00 00 00 00     ......HP0  .....
    10b6:	00 78 10 20 20 78 00 00 00 18 10 10 10 20 10 10     .x.  x....... ..
    10c6:	10 10 18 00 10 10 10 10 10 10 10 10 10 10 10 10     ................
    10d6:	00 60 20 20 20 10 20 20 20 20 60 00 40 a4 18 00     .`   .    `.@...
	...

000010ee <__ctors_start>:
    10ee:	6e 11       	cpse	r22, r14

000010f0 <__ctors_end>:
    10f0:	11 24       	eor	r1, r1
    10f2:	1f be       	out	0x3f, r1	; 63
    10f4:	cf e5       	ldi	r28, 0x5F	; 95
    10f6:	d4 e0       	ldi	r29, 0x04	; 4
    10f8:	de bf       	out	0x3e, r29	; 62
    10fa:	cd bf       	out	0x3d, r28	; 61

000010fc <__do_copy_data>:
    10fc:	10 e0       	ldi	r17, 0x00	; 0
    10fe:	a0 e6       	ldi	r26, 0x60	; 96
    1100:	b0 e0       	ldi	r27, 0x00	; 0
    1102:	e4 e4       	ldi	r30, 0x44	; 68
    1104:	f9 e3       	ldi	r31, 0x39	; 57
    1106:	02 c0       	rjmp	.+4      	; 0x110c <__do_copy_data+0x10>
    1108:	05 90       	lpm	r0, Z+
    110a:	0d 92       	st	X+, r0
    110c:	a4 3f       	cpi	r26, 0xF4	; 244
    110e:	b1 07       	cpc	r27, r17
    1110:	d9 f7       	brne	.-10     	; 0x1108 <__do_copy_data+0xc>

00001112 <__do_clear_bss>:
    1112:	21 e0       	ldi	r18, 0x01	; 1
    1114:	a4 ef       	ldi	r26, 0xF4	; 244
    1116:	b0 e0       	ldi	r27, 0x00	; 0
    1118:	01 c0       	rjmp	.+2      	; 0x111c <.do_clear_bss_start>

0000111a <.do_clear_bss_loop>:
    111a:	1d 92       	st	X+, r1

0000111c <.do_clear_bss_start>:
    111c:	a3 33       	cpi	r26, 0x33	; 51
    111e:	b2 07       	cpc	r27, r18
    1120:	e1 f7       	brne	.-8      	; 0x111a <.do_clear_bss_loop>

00001122 <__do_global_ctors>:
    1122:	18 e0       	ldi	r17, 0x08	; 8
    1124:	c8 e7       	ldi	r28, 0x78	; 120
    1126:	d8 e0       	ldi	r29, 0x08	; 8
    1128:	04 c0       	rjmp	.+8      	; 0x1132 <__do_global_ctors+0x10>
    112a:	21 97       	sbiw	r28, 0x01	; 1
    112c:	fe 01       	movw	r30, r28
    112e:	0e 94 1c 1c 	call	0x3838	; 0x3838 <__tablejump2__>
    1132:	c7 37       	cpi	r28, 0x77	; 119
    1134:	d1 07       	cpc	r29, r17
    1136:	c9 f7       	brne	.-14     	; 0x112a <__do_global_ctors+0x8>
    1138:	0e 94 32 11 	call	0x2264	; 0x2264 <main>
    113c:	0c 94 a0 1c 	jmp	0x3940	; 0x3940 <_exit>

00001140 <__bad_interrupt>:
    1140:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001144 <fastbitmap_1bit>:
		r20:r21 fg color 
		r18:r19 bg color
	*/

	/* this block sets up the TOGGLE_WR_FAST registers r30:r31 */
	in r26, _SFR_IO_ADDR(WR_PORT)
    1144:	a5 b3       	in	r26, 0x15	; 21
	mov r27, r26
    1146:	ba 2f       	mov	r27, r26
	set
    1148:	68 94       	set
	bld r26,WR_PIN
    114a:	a6 f9       	bld	r26, 6
	clt
    114c:	e8 94       	clt
	bld r27,WR_PIN
    114e:	b6 f9       	bld	r27, 6
	
	movw r30, r22
    1150:	fb 01       	movw	r30, r22

00001152 <FB1BIT_LOOP>:

FB1BIT_LOOP:

	LPM r0, Z+
    1152:	05 90       	lpm	r0, Z+

	PLOT_MONO_PIXEL r0,7
    1154:	07 fa       	bst	r0, 7
    1156:	1e f4       	brtc	.+6      	; 0x115e <FB1BIT_LOOP+0xc>
    1158:	42 bb       	out	0x12, r20	; 18
    115a:	5b bb       	out	0x1b, r21	; 27
    115c:	02 c0       	rjmp	.+4      	; 0x1162 <FB1BIT_LOOP+0x10>
    115e:	22 bb       	out	0x12, r18	; 18
    1160:	3b bb       	out	0x1b, r19	; 27
    1162:	b5 bb       	out	0x15, r27	; 21
    1164:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,6
    1166:	06 fa       	bst	r0, 6
    1168:	1e f4       	brtc	.+6      	; 0x1170 <FB1BIT_LOOP+0x1e>
    116a:	42 bb       	out	0x12, r20	; 18
    116c:	5b bb       	out	0x1b, r21	; 27
    116e:	02 c0       	rjmp	.+4      	; 0x1174 <FB1BIT_LOOP+0x22>
    1170:	22 bb       	out	0x12, r18	; 18
    1172:	3b bb       	out	0x1b, r19	; 27
    1174:	b5 bb       	out	0x15, r27	; 21
    1176:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,5
    1178:	05 fa       	bst	r0, 5
    117a:	1e f4       	brtc	.+6      	; 0x1182 <FB1BIT_LOOP+0x30>
    117c:	42 bb       	out	0x12, r20	; 18
    117e:	5b bb       	out	0x1b, r21	; 27
    1180:	02 c0       	rjmp	.+4      	; 0x1186 <FB1BIT_LOOP+0x34>
    1182:	22 bb       	out	0x12, r18	; 18
    1184:	3b bb       	out	0x1b, r19	; 27
    1186:	b5 bb       	out	0x15, r27	; 21
    1188:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,4
    118a:	04 fa       	bst	r0, 4
    118c:	1e f4       	brtc	.+6      	; 0x1194 <FB1BIT_LOOP+0x42>
    118e:	42 bb       	out	0x12, r20	; 18
    1190:	5b bb       	out	0x1b, r21	; 27
    1192:	02 c0       	rjmp	.+4      	; 0x1198 <FB1BIT_LOOP+0x46>
    1194:	22 bb       	out	0x12, r18	; 18
    1196:	3b bb       	out	0x1b, r19	; 27
    1198:	b5 bb       	out	0x15, r27	; 21
    119a:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,3
    119c:	03 fa       	bst	r0, 3
    119e:	1e f4       	brtc	.+6      	; 0x11a6 <FB1BIT_LOOP+0x54>
    11a0:	42 bb       	out	0x12, r20	; 18
    11a2:	5b bb       	out	0x1b, r21	; 27
    11a4:	02 c0       	rjmp	.+4      	; 0x11aa <FB1BIT_LOOP+0x58>
    11a6:	22 bb       	out	0x12, r18	; 18
    11a8:	3b bb       	out	0x1b, r19	; 27
    11aa:	b5 bb       	out	0x15, r27	; 21
    11ac:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,2
    11ae:	02 fa       	bst	r0, 2
    11b0:	1e f4       	brtc	.+6      	; 0x11b8 <FB1BIT_LOOP+0x66>
    11b2:	42 bb       	out	0x12, r20	; 18
    11b4:	5b bb       	out	0x1b, r21	; 27
    11b6:	02 c0       	rjmp	.+4      	; 0x11bc <FB1BIT_LOOP+0x6a>
    11b8:	22 bb       	out	0x12, r18	; 18
    11ba:	3b bb       	out	0x1b, r19	; 27
    11bc:	b5 bb       	out	0x15, r27	; 21
    11be:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,1
    11c0:	01 fa       	bst	r0, 1
    11c2:	1e f4       	brtc	.+6      	; 0x11ca <FB1BIT_LOOP+0x78>
    11c4:	42 bb       	out	0x12, r20	; 18
    11c6:	5b bb       	out	0x1b, r21	; 27
    11c8:	02 c0       	rjmp	.+4      	; 0x11ce <FB1BIT_LOOP+0x7c>
    11ca:	22 bb       	out	0x12, r18	; 18
    11cc:	3b bb       	out	0x1b, r19	; 27
    11ce:	b5 bb       	out	0x15, r27	; 21
    11d0:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,0
    11d2:	00 fa       	bst	r0, 0
    11d4:	1e f4       	brtc	.+6      	; 0x11dc <FB1BIT_LOOP+0x8a>
    11d6:	42 bb       	out	0x12, r20	; 18
    11d8:	5b bb       	out	0x1b, r21	; 27
    11da:	02 c0       	rjmp	.+4      	; 0x11e0 <FB1BIT_LOOP+0x8e>
    11dc:	22 bb       	out	0x12, r18	; 18
    11de:	3b bb       	out	0x1b, r19	; 27
    11e0:	b5 bb       	out	0x15, r27	; 21
    11e2:	a5 bb       	out	0x15, r26	; 21

	SUB16 r24,r25,1
    11e4:	81 50       	subi	r24, 0x01	; 1
    11e6:	90 40       	sbci	r25, 0x00	; 0

	cpi r24,0
    11e8:	80 30       	cpi	r24, 0x00	; 0
	cpc r25,r1
    11ea:	91 05       	cpc	r25, r1
	breq FB1BIT_DONE
    11ec:	11 f0       	breq	.+4      	; 0x11f2 <FB1BIT_DONE>
	jmp FB1BIT_LOOP
    11ee:	0c 94 a9 08 	jmp	0x1152	; 0x1152 <FB1BIT_LOOP>

000011f2 <FB1BIT_DONE>:


FB1BIT_DONE:

	ret;
    11f2:	08 95       	ret

000011f4 <fastbitmap_16bit>:
		r24:r25 lenght in pixels/words
		r22:r23 pointer to data
	*/

	/* this block sets up the TOGGLE_WR_FAST registers r30:r31 */
	in r26, _SFR_IO_ADDR(WR_PORT)
    11f4:	a5 b3       	in	r26, 0x15	; 21
	mov r27, r26
    11f6:	ba 2f       	mov	r27, r26
	set
    11f8:	68 94       	set
	bld r26,WR_PIN
    11fa:	a6 f9       	bld	r26, 6
	clt
    11fc:	e8 94       	clt
	bld r27,WR_PIN
    11fe:	b6 f9       	bld	r27, 6
	
	movw r30, r22
    1200:	fb 01       	movw	r30, r22

00001202 <FB16BIT_LOOP>:

FB16BIT_LOOP:

	
	LPM r0, Z+	
    1202:	05 90       	lpm	r0, Z+
	out DPHIO, r0	
    1204:	0b ba       	out	0x1b, r0	; 27
	LPM r0, Z+	
    1206:	05 90       	lpm	r0, Z+
	out DPLIO, r0
    1208:	02 ba       	out	0x12, r0	; 18

	TOGGLE_WR_FAST r27,r26	// place a pixel!
    120a:	b5 bb       	out	0x15, r27	; 21
    120c:	a5 bb       	out	0x15, r26	; 21

	SUB16 r24,r25,1
    120e:	81 50       	subi	r24, 0x01	; 1
    1210:	90 40       	sbci	r25, 0x00	; 0

	cpi r24,0
    1212:	80 30       	cpi	r24, 0x00	; 0
	cpc r25,r1
    1214:	91 05       	cpc	r25, r1
	breq FB16BIT_DONE
    1216:	11 f0       	breq	.+4      	; 0x121c <FB16BIT_DONE>
	jmp FB16BIT_LOOP
    1218:	0c 94 01 09 	jmp	0x1202	; 0x1202 <FB16BIT_LOOP>

0000121c <FB16BIT_DONE>:


FB16BIT_DONE:

	ret;
    121c:	08 95       	ret

0000121e <fastbitmap_pb565>:
		r24:r25 data
		
	*/

	/* this block sets up the TOGGLE_WR_FAST registers r30:r31 */
	in r26, _SFR_IO_ADDR(WR_PORT)
    121e:	a5 b3       	in	r26, 0x15	; 21
	mov r27, r26
    1220:	ba 2f       	mov	r27, r26
	set
    1222:	68 94       	set
	bld r26,WR_PIN
    1224:	a6 f9       	bld	r26, 6
	clt
    1226:	e8 94       	clt
	bld r27,WR_PIN
    1228:	b6 f9       	bld	r27, 6
	
	movw r30, r24
    122a:	fc 01       	movw	r30, r24

	clr r1
    122c:	11 24       	eor	r1, r1

0000122e <PB565BIT_LOOP>:

PB565BIT_LOOP:
	
	LPM r18, Z+	
    122e:	25 91       	lpm	r18, Z+
	cpi r18,0
    1230:	20 30       	cpi	r18, 0x00	; 0
	breq PB565BIT_DONE
    1232:	a9 f0       	breq	.+42     	; 0x125e <PB565BIT_DONE>
	
	bst r18,7
    1234:	27 fb       	bst	r18, 7
	brtc PB565PLAIN
    1236:	56 f4       	brtc	.+20     	; 0x124c <PB565PLAIN>
	
	// compressed loop.
	andi r18,0x7F
    1238:	2f 77       	andi	r18, 0x7F	; 127
	LPM r0, Z+
    123a:	05 90       	lpm	r0, Z+
	out DPHIO, r0
    123c:	0b ba       	out	0x1b, r0	; 27
	LPM r0, Z+
    123e:	05 90       	lpm	r0, Z+
	out DPLIO, r0
    1240:	02 ba       	out	0x12, r0	; 18

00001242 <PB565COMPRESSED>:
	

PB565COMPRESSED:
	TOGGLE_WR_FAST r27,r26
    1242:	b5 bb       	out	0x15, r27	; 21
    1244:	a5 bb       	out	0x15, r26	; 21
	dec r18
    1246:	2a 95       	dec	r18
	brne PB565COMPRESSED
    1248:	e1 f7       	brne	.-8      	; 0x1242 <PB565COMPRESSED>
	rjmp PB565BIT_LOOP
    124a:	f1 cf       	rjmp	.-30     	; 0x122e <PB565BIT_LOOP>

0000124c <PB565PLAIN>:


PB565PLAIN:

	LPM r0, Z+
    124c:	05 90       	lpm	r0, Z+
	out DPHIO, r0
    124e:	0b ba       	out	0x1b, r0	; 27
	LPM r0, Z+
    1250:	05 90       	lpm	r0, Z+
	out DPLIO, r0
    1252:	02 ba       	out	0x12, r0	; 18
	TOGGLE_WR_FAST r27,r26
    1254:	b5 bb       	out	0x15, r27	; 21
    1256:	a5 bb       	out	0x15, r26	; 21
	dec r18
    1258:	2a 95       	dec	r18
	brne PB565PLAIN
    125a:	c1 f7       	brne	.-16     	; 0x124c <PB565PLAIN>
	rjmp PB565BIT_LOOP
    125c:	e8 cf       	rjmp	.-48     	; 0x122e <PB565BIT_LOOP>

0000125e <PB565BIT_DONE>:




PB565BIT_DONE:
	clr r0
    125e:	00 24       	eor	r0, r0
    1260:	08 95       	ret

00001262 <fastfill>:
// r22-r25 unsigned 32 bit number of pixels to set.
// note that only 17 bits of this are used, so max pixels
// is 131071, which is fine since we only have 320 * 240 pixels or 76800 loops
fastfill:

	clr r18
    1262:	22 27       	eor	r18, r18

	// devide by 2
	// no need for register 25 it has no bits we care about.
	lsr r24
    1264:	86 95       	lsr	r24
	ror r23
    1266:	77 95       	ror	r23
	ror r22
    1268:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
    126a:	27 95       	ror	r18

	// devide by 4
	// no need for register 24, it had a max of 1 bit we care about.
	lsr r23
    126c:	76 95       	lsr	r23
	ror r22
    126e:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
    1270:	27 95       	ror	r18

	// devide by 8
	//lsr r24
	lsr r23
    1272:	76 95       	lsr	r23
	ror r22
    1274:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
    1276:	27 95       	ror	r18

	// devide by 16		
	// lsr r24
	lsr r23
    1278:	76 95       	lsr	r23
	ror r22
    127a:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
    127c:	27 95       	ror	r18

	// finish rolling a full 8 bits aka swap nibbles
	swap r18
    127e:	22 95       	swap	r18

	movw r24, r22
    1280:	cb 01       	movw	r24, r22

00001282 <fastfill2>:
// r24 + r25 hold 16 bit unsigned number of 16xloops.
// r18 holds 8 bit unsigned numner of single loops
fastfill2:

	// prepare the out port registers
	in r30, _SFR_IO_ADDR(WR_PORT)
    1282:	e5 b3       	in	r30, 0x15	; 21
	mov r31, r30
    1284:	fe 2f       	mov	r31, r30
	set
    1286:	68 94       	set
	bld r30,WR_PIN
    1288:	e6 f9       	bld	r30, 6
	clt
    128a:	e8 94       	clt
	bld r31,WR_PIN
    128c:	f6 f9       	bld	r31, 6

	sbiw r24,0 // subtract zero and test if zero	
    128e:	00 97       	sbiw	r24, 0x00	; 0
	breq exitloop16
    1290:	11 f1       	breq	.+68     	; 0x12d6 <exitloop16>

00001292 <loop16>:
loop16:
		
	TOGGLE_WR_FAST r31,r30
    1292:	f5 bb       	out	0x15, r31	; 21
    1294:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
    1296:	f5 bb       	out	0x15, r31	; 21
    1298:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
    129a:	f5 bb       	out	0x15, r31	; 21
    129c:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
    129e:	f5 bb       	out	0x15, r31	; 21
    12a0:	e5 bb       	out	0x15, r30	; 21
		
	TOGGLE_WR_FAST r31,r30
    12a2:	f5 bb       	out	0x15, r31	; 21
    12a4:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
    12a6:	f5 bb       	out	0x15, r31	; 21
    12a8:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
    12aa:	f5 bb       	out	0x15, r31	; 21
    12ac:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
    12ae:	f5 bb       	out	0x15, r31	; 21
    12b0:	e5 bb       	out	0x15, r30	; 21
		
	TOGGLE_WR_FAST r31,r30
    12b2:	f5 bb       	out	0x15, r31	; 21
    12b4:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
    12b6:	f5 bb       	out	0x15, r31	; 21
    12b8:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
    12ba:	f5 bb       	out	0x15, r31	; 21
    12bc:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
    12be:	f5 bb       	out	0x15, r31	; 21
    12c0:	e5 bb       	out	0x15, r30	; 21
		
	TOGGLE_WR_FAST r31,r30
    12c2:	f5 bb       	out	0x15, r31	; 21
    12c4:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
    12c6:	f5 bb       	out	0x15, r31	; 21
    12c8:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
    12ca:	f5 bb       	out	0x15, r31	; 21
    12cc:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
    12ce:	f5 bb       	out	0x15, r31	; 21
    12d0:	e5 bb       	out	0x15, r30	; 21

	sbiw r24,1	
    12d2:	01 97       	sbiw	r24, 0x01	; 1
	brne loop16
    12d4:	f1 f6       	brne	.-68     	; 0x1292 <loop16>

000012d6 <exitloop16>:

exitloop16:

	cpi r18,0
    12d6:	20 30       	cpi	r18, 0x00	; 0
	breq exitsingleloop
    12d8:	21 f0       	breq	.+8      	; 0x12e2 <exitsingleloop>

000012da <singleloop>:
singleloop:			
	TOGGLE_WR_FAST r31,r30
    12da:	f5 bb       	out	0x15, r31	; 21
    12dc:	e5 bb       	out	0x15, r30	; 21
	dec r18
    12de:	2a 95       	dec	r18
	brne singleloop
    12e0:	e1 f7       	brne	.-8      	; 0x12da <singleloop>

000012e2 <exitsingleloop>:

exitsingleloop:
	ret 
    12e2:	08 95       	ret

000012e4 <fastfill3>:

// r22-r25 unsigned 32 bit number of pixels to set.
// note that only 17 bits of this are used, so max pixels
// is 131071, which is fine since we only have 320 * 240 pixels or 76800 loops
fastfill3:
	TOGGLE_WR
    12e4:	ae 98       	cbi	0x15, 6	; 21
    12e6:	ae 9a       	sbi	0x15, 6	; 21
	SUB32 r22,r23,r24,r25,1
    12e8:	61 50       	subi	r22, 0x01	; 1
    12ea:	70 40       	sbci	r23, 0x00	; 0
    12ec:	80 40       	sbci	r24, 0x00	; 0
    12ee:	90 40       	sbci	r25, 0x00	; 0
	brne fastfill3
    12f0:	c9 f7       	brne	.-14     	; 0x12e4 <fastfill3>

    12f2:	08 95       	ret

000012f4 <LCD_Write_COM>:
#include "as_macros.h"


.global LCD_Write_COM
LCD_Write_COM:
	BUS_START_REG
    12f4:	af 98       	cbi	0x15, 7	; 21
	clr r1
    12f6:	11 24       	eor	r1, r1
	out DPLIO, r24
    12f8:	82 bb       	out	0x12, r24	; 18
	out DPHIO, r1
    12fa:	1b ba       	out	0x1b, r1	; 27
	TOGGLE_WR
    12fc:	ae 98       	cbi	0x15, 6	; 21
    12fe:	ae 9a       	sbi	0x15, 6	; 21
	ret
    1300:	08 95       	ret

00001302 <LCD_Write_DATA>:

.global LCD_Write_DATA
LCD_Write_DATA:
	BUS_START_DATA	
    1302:	af 9a       	sbi	0x15, 7	; 21
	out DPLIO, r22
    1304:	62 bb       	out	0x12, r22	; 18
	out DPHIO, r24
    1306:	8b bb       	out	0x1b, r24	; 27
	TOGGLE_WR
    1308:	ae 98       	cbi	0x15, 6	; 21
    130a:	ae 9a       	sbi	0x15, 6	; 21
	ret
    130c:	08 95       	ret

0000130e <LCD_Write_DATA2>:

.global LCD_Write_DATA2
LCD_Write_DATA2:
	BUS_START_DATA	
    130e:	af 9a       	sbi	0x15, 7	; 21
	clr r1
    1310:	11 24       	eor	r1, r1
	out DPLIO, r24
    1312:	82 bb       	out	0x12, r24	; 18
	out DPHIO, r1
    1314:	1b ba       	out	0x1b, r1	; 27
	TOGGLE_WR
    1316:	ae 98       	cbi	0x15, 6	; 21
    1318:	ae 9a       	sbi	0x15, 6	; 21
	ret
    131a:	08 95       	ret

0000131c <LCD_Write_COM_DATA>:


.global LCD_Write_COM_DATA
LCD_Write_COM_DATA:
	
	BUS_START_REG
    131c:	af 98       	cbi	0x15, 7	; 21
	clr r1
    131e:	11 24       	eor	r1, r1
	out DPLIO, r24
    1320:	82 bb       	out	0x12, r24	; 18
	out DPHIO, r1
    1322:	1b ba       	out	0x1b, r1	; 27
	TOGGLE_WR
    1324:	ae 98       	cbi	0x15, 6	; 21
    1326:	ae 9a       	sbi	0x15, 6	; 21

	BUS_START_DATA	
    1328:	af 9a       	sbi	0x15, 7	; 21
	out DPLIO, r22
    132a:	62 bb       	out	0x12, r22	; 18
	out DPHIO, r23
    132c:	7b bb       	out	0x1b, r23	; 27
	TOGGLE_WR
    132e:	ae 98       	cbi	0x15, 6	; 21
    1330:	ae 9a       	sbi	0x15, 6	; 21

	ret
    1332:	08 95       	ret

00001334 <LCD_Writ_Bus>:


.global LCD_Writ_Bus
	LCD_Writ_Bus:

	out DPHIO, r24
    1334:	8b bb       	out	0x1b, r24	; 27
	out DPLIO, r22
    1336:	62 bb       	out	0x12, r22	; 18
	TOGGLE_WR
    1338:	ae 98       	cbi	0x15, 6	; 21
    133a:	ae 9a       	sbi	0x15, 6	; 21

    133c:	08 95       	ret

0000133e <_Z41__static_initialization_and_destruction_0ii>:
			menu = 1;
		} else if (menu == 1) {
			memoryGame();
		}
	}
}
    133e:	01 97       	sbiw	r24, 0x01	; 1
    1340:	39 f4       	brne	.+14     	; 0x1350 <_Z41__static_initialization_and_destruction_0ii+0x12>
    1342:	6f 3f       	cpi	r22, 0xFF	; 255
    1344:	7f 4f       	sbci	r23, 0xFF	; 255
    1346:	21 f4       	brne	.+8      	; 0x1350 <_Z41__static_initialization_and_destruction_0ii+0x12>
// gumb za resetiranje highscores
#define RESET_X1 220
#define RESET_X2 310
#define RESET_TEXT_X 245

UTFT display;
    1348:	80 e2       	ldi	r24, 0x20	; 32
    134a:	91 e0       	ldi	r25, 0x01	; 1
    134c:	0e 94 9c 12 	call	0x2538	; 0x2538 <_ZN4UTFTC1Ev>
    1350:	08 95       	ret

00001352 <_Z7Touchedv>:

bool Touched() {
	// PINB3(T-IRQ) nizak pri dodiru
	if (bit_is_clear(PINB, T_IRQ)){
    1352:	b3 99       	sbic	0x16, 3	; 22
    1354:	02 c0       	rjmp	.+4      	; 0x135a <_Z7Touchedv+0x8>
		return true;
    1356:	81 e0       	ldi	r24, 0x01	; 1
    1358:	08 95       	ret
		} else {
		return false;
    135a:	80 e0       	ldi	r24, 0x00	; 0
	}
}
    135c:	08 95       	ret

0000135e <_Z4getXv>:

uint16_t getX() {
    135e:	cf 92       	push	r12
    1360:	df 92       	push	r13
    1362:	ef 92       	push	r14
    1364:	ff 92       	push	r15
	SPI_Write(0X90);
    1366:	80 e9       	ldi	r24, 0x90	; 144
    1368:	0e 94 84 11 	call	0x2308	; 0x2308 <SPI_Write>
	float x = SPI_Read() / 120.0 * 320 - 15;
    136c:	0e 94 89 11 	call	0x2312	; 0x2312 <SPI_Read>
    1370:	68 2f       	mov	r22, r24
    1372:	70 e0       	ldi	r23, 0x00	; 0
    1374:	80 e0       	ldi	r24, 0x00	; 0
    1376:	90 e0       	ldi	r25, 0x00	; 0
    1378:	0e 94 1e 1a 	call	0x343c	; 0x343c <__floatsisf>
    137c:	20 e0       	ldi	r18, 0x00	; 0
    137e:	30 e0       	ldi	r19, 0x00	; 0
    1380:	40 ef       	ldi	r20, 0xF0	; 240
    1382:	52 e4       	ldi	r21, 0x42	; 66
    1384:	0e 94 74 19 	call	0x32e8	; 0x32e8 <__divsf3>
    1388:	20 e0       	ldi	r18, 0x00	; 0
    138a:	30 e0       	ldi	r19, 0x00	; 0
    138c:	40 ea       	ldi	r20, 0xA0	; 160
    138e:	53 e4       	ldi	r21, 0x43	; 67
    1390:	0e 94 0d 1b 	call	0x361a	; 0x361a <__mulsf3>
    1394:	20 e0       	ldi	r18, 0x00	; 0
    1396:	30 e0       	ldi	r19, 0x00	; 0
    1398:	40 e7       	ldi	r20, 0x70	; 112
    139a:	51 e4       	ldi	r21, 0x41	; 65
    139c:	0e 94 fd 18 	call	0x31fa	; 0x31fa <__subsf3>
    13a0:	6b 01       	movw	r12, r22
    13a2:	7c 01       	movw	r14, r24
	SPI_Write(0);
    13a4:	80 e0       	ldi	r24, 0x00	; 0
    13a6:	0e 94 84 11 	call	0x2308	; 0x2308 <SPI_Write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    13aa:	8f ef       	ldi	r24, 0xFF	; 255
    13ac:	97 e4       	ldi	r25, 0x47	; 71
    13ae:	01 97       	sbiw	r24, 0x01	; 1
    13b0:	f1 f7       	brne	.-4      	; 0x13ae <_Z4getXv+0x50>
    13b2:	00 c0       	rjmp	.+0      	; 0x13b4 <_Z4getXv+0x56>
    13b4:	00 00       	nop
	_delay_ms(10);
	return (uint16_t) x;
    13b6:	c7 01       	movw	r24, r14
    13b8:	b6 01       	movw	r22, r12
    13ba:	0e 94 ed 19 	call	0x33da	; 0x33da <__fixunssfsi>
}
    13be:	cb 01       	movw	r24, r22
    13c0:	ff 90       	pop	r15
    13c2:	ef 90       	pop	r14
    13c4:	df 90       	pop	r13
    13c6:	cf 90       	pop	r12
    13c8:	08 95       	ret

000013ca <_Z4getYv>:

uint16_t getY() {
    13ca:	cf 92       	push	r12
    13cc:	df 92       	push	r13
    13ce:	ef 92       	push	r14
    13d0:	ff 92       	push	r15
	float y = 0;
    13d2:	c1 2c       	mov	r12, r1
    13d4:	d1 2c       	mov	r13, r1
    13d6:	76 01       	movw	r14, r12
	while(y <= 0 ){
    13d8:	20 e0       	ldi	r18, 0x00	; 0
    13da:	30 e0       	ldi	r19, 0x00	; 0
    13dc:	a9 01       	movw	r20, r18
    13de:	c7 01       	movw	r24, r14
    13e0:	b6 01       	movw	r22, r12
    13e2:	0e 94 6a 19 	call	0x32d4	; 0x32d4 <__cmpsf2>
    13e6:	18 16       	cp	r1, r24
    13e8:	ec f0       	brlt	.+58     	; 0x1424 <_Z4getYv+0x5a>
		SPI_Write(0XD0);
    13ea:	80 ed       	ldi	r24, 0xD0	; 208
    13ec:	0e 94 84 11 	call	0x2308	; 0x2308 <SPI_Write>
		y = SPI_Read() / 120.0 * 240;
    13f0:	0e 94 89 11 	call	0x2312	; 0x2312 <SPI_Read>
    13f4:	68 2f       	mov	r22, r24
    13f6:	70 e0       	ldi	r23, 0x00	; 0
    13f8:	80 e0       	ldi	r24, 0x00	; 0
    13fa:	90 e0       	ldi	r25, 0x00	; 0
    13fc:	0e 94 1e 1a 	call	0x343c	; 0x343c <__floatsisf>
    1400:	20 e0       	ldi	r18, 0x00	; 0
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	40 ef       	ldi	r20, 0xF0	; 240
    1406:	52 e4       	ldi	r21, 0x42	; 66
    1408:	0e 94 74 19 	call	0x32e8	; 0x32e8 <__divsf3>
    140c:	20 e0       	ldi	r18, 0x00	; 0
    140e:	30 e0       	ldi	r19, 0x00	; 0
    1410:	40 e7       	ldi	r20, 0x70	; 112
    1412:	53 e4       	ldi	r21, 0x43	; 67
    1414:	0e 94 0d 1b 	call	0x361a	; 0x361a <__mulsf3>
    1418:	6b 01       	movw	r12, r22
    141a:	7c 01       	movw	r14, r24
		SPI_Write(0);
    141c:	80 e0       	ldi	r24, 0x00	; 0
    141e:	0e 94 84 11 	call	0x2308	; 0x2308 <SPI_Write>
	return (uint16_t) x;
}

uint16_t getY() {
	float y = 0;
	while(y <= 0 ){
    1422:	da cf       	rjmp	.-76     	; 0x13d8 <_Z4getYv+0xe>
    1424:	8f ef       	ldi	r24, 0xFF	; 255
    1426:	97 e4       	ldi	r25, 0x47	; 71
    1428:	01 97       	sbiw	r24, 0x01	; 1
    142a:	f1 f7       	brne	.-4      	; 0x1428 <_Z4getYv+0x5e>
    142c:	00 c0       	rjmp	.+0      	; 0x142e <_Z4getYv+0x64>
    142e:	00 00       	nop
		SPI_Write(0XD0);
		y = SPI_Read() / 120.0 * 240;
		SPI_Write(0);
	}
	_delay_ms(10);
	return (uint16_t) y;
    1430:	c7 01       	movw	r24, r14
    1432:	b6 01       	movw	r22, r12
    1434:	0e 94 ed 19 	call	0x33da	; 0x33da <__fixunssfsi>
}
    1438:	cb 01       	movw	r24, r22
    143a:	ff 90       	pop	r15
    143c:	ef 90       	pop	r14
    143e:	df 90       	pop	r13
    1440:	cf 90       	pop	r12
    1442:	08 95       	ret

00001444 <_Z9printTimev>:
uint8_t roundCounter = 0;                 // brojac koliko krugova igre smo odigrali                         TODO - resetira se kad se ide na glavni ekran (back button?)        
uint8_t roundStreak = 0;                  // najduze odigrana igra u rundama, povecava se na kraju igre
bool menu = 0;                         // 0 - main menu, 1 - in game


void printTime() {
    1444:	cf 92       	push	r12
    1446:	ef 92       	push	r14
    1448:	ff 92       	push	r15
    144a:	0f 93       	push	r16
    144c:	1f 93       	push	r17
    144e:	cf 93       	push	r28
    1450:	df 93       	push	r29
	display.printNumI(currentTime[0], 0, 160);
    1452:	c8 ef       	ldi	r28, 0xF8	; 248
    1454:	d0 e0       	ldi	r29, 0x00	; 0
    1456:	48 81       	ld	r20, Y
    1458:	50 e0       	ldi	r21, 0x00	; 0
    145a:	60 e0       	ldi	r22, 0x00	; 0
    145c:	70 e0       	ldi	r23, 0x00	; 0
    145e:	68 94       	set
    1460:	cc 24       	eor	r12, r12
    1462:	c5 f8       	bld	r12, 5
    1464:	e1 2c       	mov	r14, r1
    1466:	f1 2c       	mov	r15, r1
    1468:	00 ea       	ldi	r16, 0xA0	; 160
    146a:	10 e0       	ldi	r17, 0x00	; 0
    146c:	20 e0       	ldi	r18, 0x00	; 0
    146e:	30 e0       	ldi	r19, 0x00	; 0
    1470:	80 e2       	ldi	r24, 0x20	; 32
    1472:	91 e0       	ldi	r25, 0x01	; 1
    1474:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
	display.print("m", 30, 160);
    1478:	00 e0       	ldi	r16, 0x00	; 0
    147a:	10 e0       	ldi	r17, 0x00	; 0
    147c:	20 ea       	ldi	r18, 0xA0	; 160
    147e:	30 e0       	ldi	r19, 0x00	; 0
    1480:	4e e1       	ldi	r20, 0x1E	; 30
    1482:	50 e0       	ldi	r21, 0x00	; 0
    1484:	68 e6       	ldi	r22, 0x68	; 104
    1486:	70 e0       	ldi	r23, 0x00	; 0
    1488:	80 e2       	ldi	r24, 0x20	; 32
    148a:	91 e0       	ldi	r25, 0x01	; 1
    148c:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	display.printNumI(currentTime[1], 0, 180);
    1490:	49 81       	ldd	r20, Y+1	; 0x01
    1492:	50 e0       	ldi	r21, 0x00	; 0
    1494:	60 e0       	ldi	r22, 0x00	; 0
    1496:	70 e0       	ldi	r23, 0x00	; 0
    1498:	04 eb       	ldi	r16, 0xB4	; 180
    149a:	10 e0       	ldi	r17, 0x00	; 0
    149c:	20 e0       	ldi	r18, 0x00	; 0
    149e:	30 e0       	ldi	r19, 0x00	; 0
    14a0:	80 e2       	ldi	r24, 0x20	; 32
    14a2:	91 e0       	ldi	r25, 0x01	; 1
    14a4:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
	display.print("s", 30, 180);
    14a8:	00 e0       	ldi	r16, 0x00	; 0
    14aa:	10 e0       	ldi	r17, 0x00	; 0
    14ac:	24 eb       	ldi	r18, 0xB4	; 180
    14ae:	30 e0       	ldi	r19, 0x00	; 0
    14b0:	4e e1       	ldi	r20, 0x1E	; 30
    14b2:	50 e0       	ldi	r21, 0x00	; 0
    14b4:	60 e7       	ldi	r22, 0x70	; 112
    14b6:	70 e0       	ldi	r23, 0x00	; 0
    14b8:	80 e2       	ldi	r24, 0x20	; 32
    14ba:	91 e0       	ldi	r25, 0x01	; 1
    14bc:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
}
    14c0:	df 91       	pop	r29
    14c2:	cf 91       	pop	r28
    14c4:	1f 91       	pop	r17
    14c6:	0f 91       	pop	r16
    14c8:	ff 90       	pop	r15
    14ca:	ef 90       	pop	r14
    14cc:	cf 90       	pop	r12
    14ce:	08 95       	ret

000014d0 <__vector_19>:

// broji stotinke, sekunde i minute provedene u igri
ISR(TIMER0_COMP_vect) {
    14d0:	1f 92       	push	r1
    14d2:	0f 92       	push	r0
    14d4:	0f b6       	in	r0, 0x3f	; 63
    14d6:	0f 92       	push	r0
    14d8:	11 24       	eor	r1, r1
    14da:	2f 93       	push	r18
    14dc:	3f 93       	push	r19
    14de:	4f 93       	push	r20
    14e0:	5f 93       	push	r21
    14e2:	6f 93       	push	r22
    14e4:	7f 93       	push	r23
    14e6:	8f 93       	push	r24
    14e8:	9f 93       	push	r25
    14ea:	af 93       	push	r26
    14ec:	bf 93       	push	r27
    14ee:	ef 93       	push	r30
    14f0:	ff 93       	push	r31
	if (started) {  //osigurava da se ne broji dok ne igramo
    14f2:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <started>
    14f6:	88 23       	and	r24, r24
    14f8:	c9 f0       	breq	.+50     	; 0x152c <__vector_19+0x5c>
		currentTime[2]++;
    14fa:	e8 ef       	ldi	r30, 0xF8	; 248
    14fc:	f0 e0       	ldi	r31, 0x00	; 0
    14fe:	82 81       	ldd	r24, Z+2	; 0x02
    1500:	8f 5f       	subi	r24, 0xFF	; 255
    1502:	82 83       	std	Z+2, r24	; 0x02

		if (currentTime[2] == 100) {
    1504:	84 36       	cpi	r24, 0x64	; 100
    1506:	91 f4       	brne	.+36     	; 0x152c <__vector_19+0x5c>
			currentTime[2] = 0;
    1508:	12 82       	std	Z+2, r1	; 0x02

			currentTime[1]++; 
    150a:	81 81       	ldd	r24, Z+1	; 0x01
    150c:	8f 5f       	subi	r24, 0xFF	; 255
    150e:	81 83       	std	Z+1, r24	; 0x01
			if (currentTime[1] == 60) {
    1510:	8c 33       	cpi	r24, 0x3C	; 60
    1512:	21 f4       	brne	.+8      	; 0x151c <__vector_19+0x4c>
				currentTime[1] = 0;
    1514:	11 82       	std	Z+1, r1	; 0x01
				currentTime[0]++;
    1516:	80 81       	ld	r24, Z
    1518:	8f 5f       	subi	r24, 0xFF	; 255
    151a:	80 83       	st	Z, r24
			}
			if (currentTime[0] == 60) {
    151c:	80 91 f8 00 	lds	r24, 0x00F8	; 0x8000f8 <currentTime>
    1520:	8c 33       	cpi	r24, 0x3C	; 60
    1522:	11 f4       	brne	.+4      	; 0x1528 <__vector_19+0x58>
				currentTime[0] = 0;
    1524:	10 92 f8 00 	sts	0x00F8, r1	; 0x8000f8 <currentTime>
			}
			printTime();
    1528:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z9printTimev>
		}
	}
}
    152c:	ff 91       	pop	r31
    152e:	ef 91       	pop	r30
    1530:	bf 91       	pop	r27
    1532:	af 91       	pop	r26
    1534:	9f 91       	pop	r25
    1536:	8f 91       	pop	r24
    1538:	7f 91       	pop	r23
    153a:	6f 91       	pop	r22
    153c:	5f 91       	pop	r21
    153e:	4f 91       	pop	r20
    1540:	3f 91       	pop	r19
    1542:	2f 91       	pop	r18
    1544:	0f 90       	pop	r0
    1546:	0f be       	out	0x3f, r0	; 63
    1548:	0f 90       	pop	r0
    154a:	1f 90       	pop	r1
    154c:	18 95       	reti

0000154e <_Z9fillBoardv>:

// popuni plocu nasumicno simbolima, koristimo obicne brojeve zbog jednostavnosti implementacije
void fillBoard() {
    154e:	cf 93       	push	r28
	uint8_t index, i;
	for (i = 0; i < 16; i++) {
    1550:	c0 e0       	ldi	r28, 0x00	; 0
    1552:	c0 31       	cpi	r28, 0x10	; 16
    1554:	08 f5       	brcc	.+66     	; 0x1598 <_Z9fillBoardv+0x4a>
		index = rand() % 16;
    1556:	0e 94 90 1c 	call	0x3920	; 0x3920 <rand>
    155a:	8f 70       	andi	r24, 0x0F	; 15
    155c:	90 78       	andi	r25, 0x80	; 128
    155e:	99 23       	and	r25, r25
    1560:	34 f4       	brge	.+12     	; 0x156e <_Z9fillBoardv+0x20>
    1562:	01 97       	sbiw	r24, 0x01	; 1
    1564:	80 6f       	ori	r24, 0xF0	; 240
    1566:	9f 6f       	ori	r25, 0xFF	; 255
    1568:	01 96       	adiw	r24, 0x01	; 1
    156a:	01 c0       	rjmp	.+2      	; 0x156e <_Z9fillBoardv+0x20>
		while(board[index] != 0) { //ako se izabere polje koje je vec popunjeno, biraj sljedece
			index++;
			if (index > 15) {
				index = 0;
    156c:	80 e0       	ldi	r24, 0x00	; 0
// popuni plocu nasumicno simbolima, koristimo obicne brojeve zbog jednostavnosti implementacije
void fillBoard() {
	uint8_t index, i;
	for (i = 0; i < 16; i++) {
		index = rand() % 16;
		while(board[index] != 0) { //ako se izabere polje koje je vec popunjeno, biraj sljedece
    156e:	28 2f       	mov	r18, r24
    1570:	30 e0       	ldi	r19, 0x00	; 0
    1572:	f9 01       	movw	r30, r18
    1574:	e0 5f       	subi	r30, 0xF0	; 240
    1576:	fe 4f       	sbci	r31, 0xFE	; 254
    1578:	90 81       	ld	r25, Z
    157a:	99 23       	and	r25, r25
    157c:	21 f0       	breq	.+8      	; 0x1586 <_Z9fillBoardv+0x38>
			index++;
    157e:	8f 5f       	subi	r24, 0xFF	; 255
			if (index > 15) {
    1580:	80 31       	cpi	r24, 0x10	; 16
    1582:	a8 f3       	brcs	.-22     	; 0x156e <_Z9fillBoardv+0x20>
    1584:	f3 cf       	rjmp	.-26     	; 0x156c <_Z9fillBoardv+0x1e>
				index = 0;
			}
		}
		board[index] = (i % 8) + 1;
    1586:	f9 01       	movw	r30, r18
    1588:	e0 5f       	subi	r30, 0xF0	; 240
    158a:	fe 4f       	sbci	r31, 0xFE	; 254
    158c:	8c 2f       	mov	r24, r28
    158e:	87 70       	andi	r24, 0x07	; 7
    1590:	8f 5f       	subi	r24, 0xFF	; 255
    1592:	80 83       	st	Z, r24
}

// popuni plocu nasumicno simbolima, koristimo obicne brojeve zbog jednostavnosti implementacije
void fillBoard() {
	uint8_t index, i;
	for (i = 0; i < 16; i++) {
    1594:	cf 5f       	subi	r28, 0xFF	; 255
    1596:	dd cf       	rjmp	.-70     	; 0x1552 <_Z9fillBoardv+0x4>
				index = 0;
			}
		}
		board[index] = (i % 8) + 1;
	}
}
    1598:	cf 91       	pop	r28
    159a:	08 95       	ret

0000159c <_Z14memoryGetInputv>:

// vraca indeks + 1 karte na koju smo kliknuli, 0 je za kad kliknemo izvan ploce
uint8_t memoryGetInput() {
    159c:	cf 93       	push	r28
    159e:	df 93       	push	r29
	while(!Touched());
    15a0:	0e 94 a9 09 	call	0x1352	; 0x1352 <_Z7Touchedv>
    15a4:	88 23       	and	r24, r24
    15a6:	e1 f3       	breq	.-8      	; 0x15a0 <_Z14memoryGetInputv+0x4>
	uint16_t x = getX();
    15a8:	0e 94 af 09 	call	0x135e	; 0x135e <_Z4getXv>
    15ac:	ec 01       	movw	r28, r24
	uint16_t y = getY();
    15ae:	0e 94 e5 09 	call	0x13ca	; 0x13ca <_Z4getYv>
	
	if ((x > BACK_X1) && (x < BACK_X2) && (y > BACK_Y1) && (y < BACK_Y2)) return 20;
    15b2:	9e 01       	movw	r18, r28
    15b4:	21 50       	subi	r18, 0x01	; 1
    15b6:	31 09       	sbc	r19, r1
    15b8:	27 32       	cpi	r18, 0x27	; 39
    15ba:	31 05       	cpc	r19, r1
    15bc:	30 f4       	brcc	.+12     	; 0x15ca <_Z14memoryGetInputv+0x2e>
    15be:	00 97       	sbiw	r24, 0x00	; 0
    15c0:	21 f0       	breq	.+8      	; 0x15ca <_Z14memoryGetInputv+0x2e>
    15c2:	88 32       	cpi	r24, 0x28	; 40
    15c4:	91 05       	cpc	r25, r1
    15c6:	08 f4       	brcc	.+2      	; 0x15ca <_Z14memoryGetInputv+0x2e>
    15c8:	a3 c0       	rjmp	.+326    	; 0x1710 <_Z14memoryGetInputv+0x174>
	else if ((x > X1_1) && (x < X2_1) && (y > Y1_1) && (y < Y2_1)) return 1;
    15ca:	9e 01       	movw	r18, r28
    15cc:	20 55       	subi	r18, 0x50	; 80
    15ce:	31 09       	sbc	r19, r1
    15d0:	27 33       	cpi	r18, 0x37	; 55
    15d2:	31 05       	cpc	r19, r1
    15d4:	30 f4       	brcc	.+12     	; 0x15e2 <_Z14memoryGetInputv+0x46>
    15d6:	00 97       	sbiw	r24, 0x00	; 0
    15d8:	21 f0       	breq	.+8      	; 0x15e2 <_Z14memoryGetInputv+0x46>
    15da:	88 33       	cpi	r24, 0x38	; 56
    15dc:	91 05       	cpc	r25, r1
    15de:	08 f4       	brcc	.+2      	; 0x15e2 <_Z14memoryGetInputv+0x46>
    15e0:	99 c0       	rjmp	.+306    	; 0x1714 <_Z14memoryGetInputv+0x178>
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_1) && (y < Y2_1)) return 2;
    15e2:	ae 01       	movw	r20, r28
    15e4:	4d 58       	subi	r20, 0x8D	; 141
    15e6:	51 09       	sbc	r21, r1
    15e8:	47 33       	cpi	r20, 0x37	; 55
    15ea:	51 05       	cpc	r21, r1
    15ec:	30 f4       	brcc	.+12     	; 0x15fa <_Z14memoryGetInputv+0x5e>
    15ee:	00 97       	sbiw	r24, 0x00	; 0
    15f0:	21 f0       	breq	.+8      	; 0x15fa <_Z14memoryGetInputv+0x5e>
    15f2:	88 33       	cpi	r24, 0x38	; 56
    15f4:	91 05       	cpc	r25, r1
    15f6:	08 f4       	brcc	.+2      	; 0x15fa <_Z14memoryGetInputv+0x5e>
    15f8:	8f c0       	rjmp	.+286    	; 0x1718 <_Z14memoryGetInputv+0x17c>
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_1) && (y < Y2_1)) return 3;
    15fa:	be 01       	movw	r22, r28
    15fc:	6a 5c       	subi	r22, 0xCA	; 202
    15fe:	71 09       	sbc	r23, r1
    1600:	67 33       	cpi	r22, 0x37	; 55
    1602:	71 05       	cpc	r23, r1
    1604:	30 f4       	brcc	.+12     	; 0x1612 <_Z14memoryGetInputv+0x76>
    1606:	00 97       	sbiw	r24, 0x00	; 0
    1608:	21 f0       	breq	.+8      	; 0x1612 <_Z14memoryGetInputv+0x76>
    160a:	88 33       	cpi	r24, 0x38	; 56
    160c:	91 05       	cpc	r25, r1
    160e:	08 f4       	brcc	.+2      	; 0x1612 <_Z14memoryGetInputv+0x76>
    1610:	85 c0       	rjmp	.+266    	; 0x171c <_Z14memoryGetInputv+0x180>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_1) && (y < Y2_1)) return 4;
    1612:	c7 50       	subi	r28, 0x07	; 7
    1614:	d1 40       	sbci	r29, 0x01	; 1
    1616:	c7 33       	cpi	r28, 0x37	; 55
    1618:	d1 05       	cpc	r29, r1
    161a:	30 f4       	brcc	.+12     	; 0x1628 <_Z14memoryGetInputv+0x8c>
    161c:	00 97       	sbiw	r24, 0x00	; 0
    161e:	21 f0       	breq	.+8      	; 0x1628 <_Z14memoryGetInputv+0x8c>
    1620:	88 33       	cpi	r24, 0x38	; 56
    1622:	91 05       	cpc	r25, r1
    1624:	08 f4       	brcc	.+2      	; 0x1628 <_Z14memoryGetInputv+0x8c>
    1626:	7c c0       	rjmp	.+248    	; 0x1720 <_Z14memoryGetInputv+0x184>
	
	else if ((x > X1_1) && (x < X2_1) && (y > Y1_2) && (y < Y2_2)) return 5;
    1628:	27 33       	cpi	r18, 0x37	; 55
    162a:	31 05       	cpc	r19, r1
    162c:	38 f4       	brcc	.+14     	; 0x163c <_Z14memoryGetInputv+0xa0>
    162e:	8e 33       	cpi	r24, 0x3E	; 62
    1630:	91 05       	cpc	r25, r1
    1632:	20 f0       	brcs	.+8      	; 0x163c <_Z14memoryGetInputv+0xa0>
    1634:	85 37       	cpi	r24, 0x75	; 117
    1636:	91 05       	cpc	r25, r1
    1638:	08 f4       	brcc	.+2      	; 0x163c <_Z14memoryGetInputv+0xa0>
    163a:	74 c0       	rjmp	.+232    	; 0x1724 <_Z14memoryGetInputv+0x188>
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_2) && (y < Y2_2)) return 6;
    163c:	47 33       	cpi	r20, 0x37	; 55
    163e:	51 05       	cpc	r21, r1
    1640:	38 f4       	brcc	.+14     	; 0x1650 <_Z14memoryGetInputv+0xb4>
    1642:	8e 33       	cpi	r24, 0x3E	; 62
    1644:	91 05       	cpc	r25, r1
    1646:	20 f0       	brcs	.+8      	; 0x1650 <_Z14memoryGetInputv+0xb4>
    1648:	85 37       	cpi	r24, 0x75	; 117
    164a:	91 05       	cpc	r25, r1
    164c:	08 f4       	brcc	.+2      	; 0x1650 <_Z14memoryGetInputv+0xb4>
    164e:	6c c0       	rjmp	.+216    	; 0x1728 <_Z14memoryGetInputv+0x18c>
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_2) && (y < Y2_2)) return 7;
    1650:	67 33       	cpi	r22, 0x37	; 55
    1652:	71 05       	cpc	r23, r1
    1654:	38 f4       	brcc	.+14     	; 0x1664 <_Z14memoryGetInputv+0xc8>
    1656:	8e 33       	cpi	r24, 0x3E	; 62
    1658:	91 05       	cpc	r25, r1
    165a:	20 f0       	brcs	.+8      	; 0x1664 <_Z14memoryGetInputv+0xc8>
    165c:	85 37       	cpi	r24, 0x75	; 117
    165e:	91 05       	cpc	r25, r1
    1660:	08 f4       	brcc	.+2      	; 0x1664 <_Z14memoryGetInputv+0xc8>
    1662:	64 c0       	rjmp	.+200    	; 0x172c <_Z14memoryGetInputv+0x190>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_2) && (y < Y2_2)) return 8;
    1664:	c7 33       	cpi	r28, 0x37	; 55
    1666:	d1 05       	cpc	r29, r1
    1668:	38 f4       	brcc	.+14     	; 0x1678 <_Z14memoryGetInputv+0xdc>
    166a:	8e 33       	cpi	r24, 0x3E	; 62
    166c:	91 05       	cpc	r25, r1
    166e:	20 f0       	brcs	.+8      	; 0x1678 <_Z14memoryGetInputv+0xdc>
    1670:	85 37       	cpi	r24, 0x75	; 117
    1672:	91 05       	cpc	r25, r1
    1674:	08 f4       	brcc	.+2      	; 0x1678 <_Z14memoryGetInputv+0xdc>
    1676:	5c c0       	rjmp	.+184    	; 0x1730 <_Z14memoryGetInputv+0x194>
	
	else if ((x > X1_1) && (x < X2_1) && (y > Y1_3) && (y < Y2_3)) return 9;
    1678:	27 33       	cpi	r18, 0x37	; 55
    167a:	31 05       	cpc	r19, r1
    167c:	38 f4       	brcc	.+14     	; 0x168c <_Z14memoryGetInputv+0xf0>
    167e:	8b 37       	cpi	r24, 0x7B	; 123
    1680:	91 05       	cpc	r25, r1
    1682:	20 f0       	brcs	.+8      	; 0x168c <_Z14memoryGetInputv+0xf0>
    1684:	82 3b       	cpi	r24, 0xB2	; 178
    1686:	91 05       	cpc	r25, r1
    1688:	08 f4       	brcc	.+2      	; 0x168c <_Z14memoryGetInputv+0xf0>
    168a:	54 c0       	rjmp	.+168    	; 0x1734 <_Z14memoryGetInputv+0x198>
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_3) && (y < Y2_3)) return 10;
    168c:	47 33       	cpi	r20, 0x37	; 55
    168e:	51 05       	cpc	r21, r1
    1690:	38 f4       	brcc	.+14     	; 0x16a0 <_Z14memoryGetInputv+0x104>
    1692:	8b 37       	cpi	r24, 0x7B	; 123
    1694:	91 05       	cpc	r25, r1
    1696:	20 f0       	brcs	.+8      	; 0x16a0 <_Z14memoryGetInputv+0x104>
    1698:	82 3b       	cpi	r24, 0xB2	; 178
    169a:	91 05       	cpc	r25, r1
    169c:	08 f4       	brcc	.+2      	; 0x16a0 <_Z14memoryGetInputv+0x104>
    169e:	4c c0       	rjmp	.+152    	; 0x1738 <_Z14memoryGetInputv+0x19c>
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_3) && (y < Y2_3)) return 11;
    16a0:	67 33       	cpi	r22, 0x37	; 55
    16a2:	71 05       	cpc	r23, r1
    16a4:	38 f4       	brcc	.+14     	; 0x16b4 <_Z14memoryGetInputv+0x118>
    16a6:	8b 37       	cpi	r24, 0x7B	; 123
    16a8:	91 05       	cpc	r25, r1
    16aa:	20 f0       	brcs	.+8      	; 0x16b4 <_Z14memoryGetInputv+0x118>
    16ac:	82 3b       	cpi	r24, 0xB2	; 178
    16ae:	91 05       	cpc	r25, r1
    16b0:	08 f4       	brcc	.+2      	; 0x16b4 <_Z14memoryGetInputv+0x118>
    16b2:	44 c0       	rjmp	.+136    	; 0x173c <_Z14memoryGetInputv+0x1a0>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_3) && (y < Y2_3)) return 12;
    16b4:	c7 33       	cpi	r28, 0x37	; 55
    16b6:	d1 05       	cpc	r29, r1
    16b8:	30 f4       	brcc	.+12     	; 0x16c6 <_Z14memoryGetInputv+0x12a>
    16ba:	8b 37       	cpi	r24, 0x7B	; 123
    16bc:	91 05       	cpc	r25, r1
    16be:	18 f0       	brcs	.+6      	; 0x16c6 <_Z14memoryGetInputv+0x12a>
    16c0:	82 3b       	cpi	r24, 0xB2	; 178
    16c2:	91 05       	cpc	r25, r1
    16c4:	e8 f1       	brcs	.+122    	; 0x1740 <_Z14memoryGetInputv+0x1a4>
	
	else if ((x > X1_1) && (x < X2_1) && (y > Y1_4) && (y < Y2_4)) return 13;
    16c6:	27 33       	cpi	r18, 0x37	; 55
    16c8:	31 05       	cpc	r19, r1
    16ca:	30 f4       	brcc	.+12     	; 0x16d8 <_Z14memoryGetInputv+0x13c>
    16cc:	88 3b       	cpi	r24, 0xB8	; 184
    16ce:	91 05       	cpc	r25, r1
    16d0:	18 f0       	brcs	.+6      	; 0x16d8 <_Z14memoryGetInputv+0x13c>
    16d2:	8f 3e       	cpi	r24, 0xEF	; 239
    16d4:	91 05       	cpc	r25, r1
    16d6:	b0 f1       	brcs	.+108    	; 0x1744 <_Z14memoryGetInputv+0x1a8>
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_4) && (y < Y2_4)) return 14;
    16d8:	47 33       	cpi	r20, 0x37	; 55
    16da:	51 05       	cpc	r21, r1
    16dc:	30 f4       	brcc	.+12     	; 0x16ea <_Z14memoryGetInputv+0x14e>
    16de:	88 3b       	cpi	r24, 0xB8	; 184
    16e0:	91 05       	cpc	r25, r1
    16e2:	18 f0       	brcs	.+6      	; 0x16ea <_Z14memoryGetInputv+0x14e>
    16e4:	8f 3e       	cpi	r24, 0xEF	; 239
    16e6:	91 05       	cpc	r25, r1
    16e8:	78 f1       	brcs	.+94     	; 0x1748 <_Z14memoryGetInputv+0x1ac>
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_4) && (y < Y2_4)) return 15;
    16ea:	67 33       	cpi	r22, 0x37	; 55
    16ec:	71 05       	cpc	r23, r1
    16ee:	30 f4       	brcc	.+12     	; 0x16fc <_Z14memoryGetInputv+0x160>
    16f0:	88 3b       	cpi	r24, 0xB8	; 184
    16f2:	91 05       	cpc	r25, r1
    16f4:	18 f0       	brcs	.+6      	; 0x16fc <_Z14memoryGetInputv+0x160>
    16f6:	8f 3e       	cpi	r24, 0xEF	; 239
    16f8:	91 05       	cpc	r25, r1
    16fa:	40 f1       	brcs	.+80     	; 0x174c <_Z14memoryGetInputv+0x1b0>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_4) && (y < Y2_4)) return 16;
    16fc:	e7 97       	sbiw	r28, 0x37	; 55
    16fe:	40 f5       	brcc	.+80     	; 0x1750 <_Z14memoryGetInputv+0x1b4>
    1700:	88 3b       	cpi	r24, 0xB8	; 184
    1702:	91 05       	cpc	r25, r1
    1704:	38 f1       	brcs	.+78     	; 0x1754 <_Z14memoryGetInputv+0x1b8>
    1706:	8f 3e       	cpi	r24, 0xEF	; 239
    1708:	91 05       	cpc	r25, r1
    170a:	30 f1       	brcs	.+76     	; 0x1758 <_Z14memoryGetInputv+0x1bc>
	
	else return 0;
    170c:	80 e0       	ldi	r24, 0x00	; 0
    170e:	25 c0       	rjmp	.+74     	; 0x175a <_Z14memoryGetInputv+0x1be>
uint8_t memoryGetInput() {
	while(!Touched());
	uint16_t x = getX();
	uint16_t y = getY();
	
	if ((x > BACK_X1) && (x < BACK_X2) && (y > BACK_Y1) && (y < BACK_Y2)) return 20;
    1710:	84 e1       	ldi	r24, 0x14	; 20
    1712:	23 c0       	rjmp	.+70     	; 0x175a <_Z14memoryGetInputv+0x1be>
	else if ((x > X1_1) && (x < X2_1) && (y > Y1_1) && (y < Y2_1)) return 1;
    1714:	81 e0       	ldi	r24, 0x01	; 1
    1716:	21 c0       	rjmp	.+66     	; 0x175a <_Z14memoryGetInputv+0x1be>
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_1) && (y < Y2_1)) return 2;
    1718:	82 e0       	ldi	r24, 0x02	; 2
    171a:	1f c0       	rjmp	.+62     	; 0x175a <_Z14memoryGetInputv+0x1be>
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_1) && (y < Y2_1)) return 3;
    171c:	83 e0       	ldi	r24, 0x03	; 3
    171e:	1d c0       	rjmp	.+58     	; 0x175a <_Z14memoryGetInputv+0x1be>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_1) && (y < Y2_1)) return 4;
    1720:	84 e0       	ldi	r24, 0x04	; 4
    1722:	1b c0       	rjmp	.+54     	; 0x175a <_Z14memoryGetInputv+0x1be>
	
	else if ((x > X1_1) && (x < X2_1) && (y > Y1_2) && (y < Y2_2)) return 5;
    1724:	85 e0       	ldi	r24, 0x05	; 5
    1726:	19 c0       	rjmp	.+50     	; 0x175a <_Z14memoryGetInputv+0x1be>
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_2) && (y < Y2_2)) return 6;
    1728:	86 e0       	ldi	r24, 0x06	; 6
    172a:	17 c0       	rjmp	.+46     	; 0x175a <_Z14memoryGetInputv+0x1be>
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_2) && (y < Y2_2)) return 7;
    172c:	87 e0       	ldi	r24, 0x07	; 7
    172e:	15 c0       	rjmp	.+42     	; 0x175a <_Z14memoryGetInputv+0x1be>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_2) && (y < Y2_2)) return 8;
    1730:	88 e0       	ldi	r24, 0x08	; 8
    1732:	13 c0       	rjmp	.+38     	; 0x175a <_Z14memoryGetInputv+0x1be>
	
	else if ((x > X1_1) && (x < X2_1) && (y > Y1_3) && (y < Y2_3)) return 9;
    1734:	89 e0       	ldi	r24, 0x09	; 9
    1736:	11 c0       	rjmp	.+34     	; 0x175a <_Z14memoryGetInputv+0x1be>
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_3) && (y < Y2_3)) return 10;
    1738:	8a e0       	ldi	r24, 0x0A	; 10
    173a:	0f c0       	rjmp	.+30     	; 0x175a <_Z14memoryGetInputv+0x1be>
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_3) && (y < Y2_3)) return 11;
    173c:	8b e0       	ldi	r24, 0x0B	; 11
    173e:	0d c0       	rjmp	.+26     	; 0x175a <_Z14memoryGetInputv+0x1be>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_3) && (y < Y2_3)) return 12;
    1740:	8c e0       	ldi	r24, 0x0C	; 12
    1742:	0b c0       	rjmp	.+22     	; 0x175a <_Z14memoryGetInputv+0x1be>
	
	else if ((x > X1_1) && (x < X2_1) && (y > Y1_4) && (y < Y2_4)) return 13;
    1744:	8d e0       	ldi	r24, 0x0D	; 13
    1746:	09 c0       	rjmp	.+18     	; 0x175a <_Z14memoryGetInputv+0x1be>
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_4) && (y < Y2_4)) return 14;
    1748:	8e e0       	ldi	r24, 0x0E	; 14
    174a:	07 c0       	rjmp	.+14     	; 0x175a <_Z14memoryGetInputv+0x1be>
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_4) && (y < Y2_4)) return 15;
    174c:	8f e0       	ldi	r24, 0x0F	; 15
    174e:	05 c0       	rjmp	.+10     	; 0x175a <_Z14memoryGetInputv+0x1be>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_4) && (y < Y2_4)) return 16;
	
	else return 0;
    1750:	80 e0       	ldi	r24, 0x00	; 0
    1752:	03 c0       	rjmp	.+6      	; 0x175a <_Z14memoryGetInputv+0x1be>
    1754:	80 e0       	ldi	r24, 0x00	; 0
    1756:	01 c0       	rjmp	.+2      	; 0x175a <_Z14memoryGetInputv+0x1be>
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_3) && (y < Y2_3)) return 12;
	
	else if ((x > X1_1) && (x < X2_1) && (y > Y1_4) && (y < Y2_4)) return 13;
	else if ((x > X1_2) && (x < X2_2) && (y > Y1_4) && (y < Y2_4)) return 14;
	else if ((x > X1_3) && (x < X2_3) && (y > Y1_4) && (y < Y2_4)) return 15;
	else if ((x > X1_4) && (x < X2_4) && (y > Y1_4) && (y < Y2_4)) return 16;
    1758:	80 e1       	ldi	r24, 0x10	; 16
	
	else return 0;
}
    175a:	df 91       	pop	r29
    175c:	cf 91       	pop	r28
    175e:	08 95       	ret

00001760 <_Z9closeCardh>:

// "pokriva" kartu crtanjem crnog kvadrata preko simbola
void closeCard(uint8_t index) {
    1760:	0f 93       	push	r16
    1762:	1f 93       	push	r17
    1764:	cf 93       	push	r28
    1766:	c8 2f       	mov	r28, r24
	display.setColor(0, 0, 0);
    1768:	20 e0       	ldi	r18, 0x00	; 0
    176a:	40 e0       	ldi	r20, 0x00	; 0
    176c:	60 e0       	ldi	r22, 0x00	; 0
    176e:	80 e2       	ldi	r24, 0x20	; 32
    1770:	91 e0       	ldi	r25, 0x01	; 1
    1772:	0e 94 8c 13 	call	0x2718	; 0x2718 <_ZN4UTFT8setColorEhhh>
	switch(index) {
    1776:	8c 2f       	mov	r24, r28
    1778:	90 e0       	ldi	r25, 0x00	; 0
    177a:	fc 01       	movw	r30, r24
    177c:	31 97       	sbiw	r30, 0x01	; 1
    177e:	e0 31       	cpi	r30, 0x10	; 16
    1780:	f1 05       	cpc	r31, r1
    1782:	08 f0       	brcs	.+2      	; 0x1786 <_Z9closeCardh+0x26>
    1784:	d3 c0       	rjmp	.+422    	; 0x192c <_Z9closeCardh+0x1cc>
    1786:	e6 5d       	subi	r30, 0xD6	; 214
    1788:	ff 4f       	sbci	r31, 0xFF	; 255
    178a:	0c 94 1c 1c 	jmp	0x3838	; 0x3838 <__tablejump2__>
		case 1:
			display.fillRect(X1_1 + 2, Y1_1 + 1, X2_1 - 1, Y2_1 - 1);
    178e:	07 e3       	ldi	r16, 0x37	; 55
    1790:	10 e0       	ldi	r17, 0x00	; 0
    1792:	26 e8       	ldi	r18, 0x86	; 134
    1794:	30 e0       	ldi	r19, 0x00	; 0
    1796:	41 e0       	ldi	r20, 0x01	; 1
    1798:	50 e0       	ldi	r21, 0x00	; 0
    179a:	61 e5       	ldi	r22, 0x51	; 81
    179c:	70 e0       	ldi	r23, 0x00	; 0
    179e:	80 e2       	ldi	r24, 0x20	; 32
    17a0:	91 e0       	ldi	r25, 0x01	; 1
    17a2:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
			break;
    17a6:	c2 c0       	rjmp	.+388    	; 0x192c <_Z9closeCardh+0x1cc>
		case 2:
			display.fillRect(X1_2 + 2, Y1_1 + 1, X2_2 - 1, Y2_1 - 1);
    17a8:	07 e3       	ldi	r16, 0x37	; 55
    17aa:	10 e0       	ldi	r17, 0x00	; 0
    17ac:	23 ec       	ldi	r18, 0xC3	; 195
    17ae:	30 e0       	ldi	r19, 0x00	; 0
    17b0:	41 e0       	ldi	r20, 0x01	; 1
    17b2:	50 e0       	ldi	r21, 0x00	; 0
    17b4:	6e e8       	ldi	r22, 0x8E	; 142
    17b6:	70 e0       	ldi	r23, 0x00	; 0
    17b8:	80 e2       	ldi	r24, 0x20	; 32
    17ba:	91 e0       	ldi	r25, 0x01	; 1
    17bc:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
			break;
    17c0:	b5 c0       	rjmp	.+362    	; 0x192c <_Z9closeCardh+0x1cc>
		case 3:
			display.fillRect(X1_3 + 2, Y1_1 + 1, X2_3 - 1, Y2_1 - 1);
    17c2:	07 e3       	ldi	r16, 0x37	; 55
    17c4:	10 e0       	ldi	r17, 0x00	; 0
    17c6:	20 e0       	ldi	r18, 0x00	; 0
    17c8:	31 e0       	ldi	r19, 0x01	; 1
    17ca:	41 e0       	ldi	r20, 0x01	; 1
    17cc:	50 e0       	ldi	r21, 0x00	; 0
    17ce:	6b ec       	ldi	r22, 0xCB	; 203
    17d0:	70 e0       	ldi	r23, 0x00	; 0
    17d2:	80 e2       	ldi	r24, 0x20	; 32
    17d4:	91 e0       	ldi	r25, 0x01	; 1
    17d6:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
			break;
    17da:	a8 c0       	rjmp	.+336    	; 0x192c <_Z9closeCardh+0x1cc>
		case 4:
			display.fillRect(X1_4 + 2, Y1_1 + 1, X2_4 - 1, Y2_1 - 1);
    17dc:	07 e3       	ldi	r16, 0x37	; 55
    17de:	10 e0       	ldi	r17, 0x00	; 0
    17e0:	2d e3       	ldi	r18, 0x3D	; 61
    17e2:	31 e0       	ldi	r19, 0x01	; 1
    17e4:	41 e0       	ldi	r20, 0x01	; 1
    17e6:	50 e0       	ldi	r21, 0x00	; 0
    17e8:	68 e0       	ldi	r22, 0x08	; 8
    17ea:	71 e0       	ldi	r23, 0x01	; 1
    17ec:	80 e2       	ldi	r24, 0x20	; 32
    17ee:	91 e0       	ldi	r25, 0x01	; 1
    17f0:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
			break;
    17f4:	9b c0       	rjmp	.+310    	; 0x192c <_Z9closeCardh+0x1cc>
		case 5:
			display.fillRect(X1_1 + 2, Y1_2 + 1, X2_1 - 1, Y2_2 - 1);
    17f6:	04 e7       	ldi	r16, 0x74	; 116
    17f8:	10 e0       	ldi	r17, 0x00	; 0
    17fa:	26 e8       	ldi	r18, 0x86	; 134
    17fc:	30 e0       	ldi	r19, 0x00	; 0
    17fe:	4e e3       	ldi	r20, 0x3E	; 62
    1800:	50 e0       	ldi	r21, 0x00	; 0
    1802:	61 e5       	ldi	r22, 0x51	; 81
    1804:	70 e0       	ldi	r23, 0x00	; 0
    1806:	80 e2       	ldi	r24, 0x20	; 32
    1808:	91 e0       	ldi	r25, 0x01	; 1
    180a:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
			break;
    180e:	8e c0       	rjmp	.+284    	; 0x192c <_Z9closeCardh+0x1cc>
		case 6:
			display.fillRect(X1_2 + 2, Y1_2 + 1, X2_2 - 1, Y2_2 - 1);
    1810:	04 e7       	ldi	r16, 0x74	; 116
    1812:	10 e0       	ldi	r17, 0x00	; 0
    1814:	23 ec       	ldi	r18, 0xC3	; 195
    1816:	30 e0       	ldi	r19, 0x00	; 0
    1818:	4e e3       	ldi	r20, 0x3E	; 62
    181a:	50 e0       	ldi	r21, 0x00	; 0
    181c:	6e e8       	ldi	r22, 0x8E	; 142
    181e:	70 e0       	ldi	r23, 0x00	; 0
    1820:	80 e2       	ldi	r24, 0x20	; 32
    1822:	91 e0       	ldi	r25, 0x01	; 1
    1824:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
			break;
    1828:	81 c0       	rjmp	.+258    	; 0x192c <_Z9closeCardh+0x1cc>
		case 7:
			display.fillRect(X1_3 + 2, Y1_2 + 1, X2_3 - 1, Y2_2 - 1);
    182a:	04 e7       	ldi	r16, 0x74	; 116
    182c:	10 e0       	ldi	r17, 0x00	; 0
    182e:	20 e0       	ldi	r18, 0x00	; 0
    1830:	31 e0       	ldi	r19, 0x01	; 1
    1832:	4e e3       	ldi	r20, 0x3E	; 62
    1834:	50 e0       	ldi	r21, 0x00	; 0
    1836:	6b ec       	ldi	r22, 0xCB	; 203
    1838:	70 e0       	ldi	r23, 0x00	; 0
    183a:	80 e2       	ldi	r24, 0x20	; 32
    183c:	91 e0       	ldi	r25, 0x01	; 1
    183e:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
			break;
    1842:	74 c0       	rjmp	.+232    	; 0x192c <_Z9closeCardh+0x1cc>
		case 8:
			display.fillRect(X1_4 + 2, Y1_2 + 1, X2_4 - 1, Y2_2 - 1);
    1844:	04 e7       	ldi	r16, 0x74	; 116
    1846:	10 e0       	ldi	r17, 0x00	; 0
    1848:	2d e3       	ldi	r18, 0x3D	; 61
    184a:	31 e0       	ldi	r19, 0x01	; 1
    184c:	4e e3       	ldi	r20, 0x3E	; 62
    184e:	50 e0       	ldi	r21, 0x00	; 0
    1850:	68 e0       	ldi	r22, 0x08	; 8
    1852:	71 e0       	ldi	r23, 0x01	; 1
    1854:	80 e2       	ldi	r24, 0x20	; 32
    1856:	91 e0       	ldi	r25, 0x01	; 1
    1858:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
			break;	
    185c:	67 c0       	rjmp	.+206    	; 0x192c <_Z9closeCardh+0x1cc>
		case 9:
			display.fillRect(X1_1 + 2, Y1_3 + 1, X2_1 - 1, Y2_3 - 1);
    185e:	01 eb       	ldi	r16, 0xB1	; 177
    1860:	10 e0       	ldi	r17, 0x00	; 0
    1862:	26 e8       	ldi	r18, 0x86	; 134
    1864:	30 e0       	ldi	r19, 0x00	; 0
    1866:	4b e7       	ldi	r20, 0x7B	; 123
    1868:	50 e0       	ldi	r21, 0x00	; 0
    186a:	61 e5       	ldi	r22, 0x51	; 81
    186c:	70 e0       	ldi	r23, 0x00	; 0
    186e:	80 e2       	ldi	r24, 0x20	; 32
    1870:	91 e0       	ldi	r25, 0x01	; 1
    1872:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
			break;
    1876:	5a c0       	rjmp	.+180    	; 0x192c <_Z9closeCardh+0x1cc>
		case 10:
			display.fillRect(X1_2 + 2, Y1_3 + 1, X2_2 - 1, Y2_3 - 1);
    1878:	01 eb       	ldi	r16, 0xB1	; 177
    187a:	10 e0       	ldi	r17, 0x00	; 0
    187c:	23 ec       	ldi	r18, 0xC3	; 195
    187e:	30 e0       	ldi	r19, 0x00	; 0
    1880:	4b e7       	ldi	r20, 0x7B	; 123
    1882:	50 e0       	ldi	r21, 0x00	; 0
    1884:	6e e8       	ldi	r22, 0x8E	; 142
    1886:	70 e0       	ldi	r23, 0x00	; 0
    1888:	80 e2       	ldi	r24, 0x20	; 32
    188a:	91 e0       	ldi	r25, 0x01	; 1
    188c:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
			break;
    1890:	4d c0       	rjmp	.+154    	; 0x192c <_Z9closeCardh+0x1cc>
		case 11:
			display.fillRect(X1_3 + 2, Y1_3 + 1, X2_3 - 1, Y2_3 - 1);
    1892:	01 eb       	ldi	r16, 0xB1	; 177
    1894:	10 e0       	ldi	r17, 0x00	; 0
    1896:	20 e0       	ldi	r18, 0x00	; 0
    1898:	31 e0       	ldi	r19, 0x01	; 1
    189a:	4b e7       	ldi	r20, 0x7B	; 123
    189c:	50 e0       	ldi	r21, 0x00	; 0
    189e:	6b ec       	ldi	r22, 0xCB	; 203
    18a0:	70 e0       	ldi	r23, 0x00	; 0
    18a2:	80 e2       	ldi	r24, 0x20	; 32
    18a4:	91 e0       	ldi	r25, 0x01	; 1
    18a6:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
			break;
    18aa:	40 c0       	rjmp	.+128    	; 0x192c <_Z9closeCardh+0x1cc>
		case 12:
			display.fillRect(X1_4 + 2, Y1_3 + 1, X2_4 - 1, Y2_3 - 1);
    18ac:	01 eb       	ldi	r16, 0xB1	; 177
    18ae:	10 e0       	ldi	r17, 0x00	; 0
    18b0:	2d e3       	ldi	r18, 0x3D	; 61
    18b2:	31 e0       	ldi	r19, 0x01	; 1
    18b4:	4b e7       	ldi	r20, 0x7B	; 123
    18b6:	50 e0       	ldi	r21, 0x00	; 0
    18b8:	68 e0       	ldi	r22, 0x08	; 8
    18ba:	71 e0       	ldi	r23, 0x01	; 1
    18bc:	80 e2       	ldi	r24, 0x20	; 32
    18be:	91 e0       	ldi	r25, 0x01	; 1
    18c0:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
			break;
    18c4:	33 c0       	rjmp	.+102    	; 0x192c <_Z9closeCardh+0x1cc>
		case 13:
			display.fillRect(X1_1 + 2, Y1_4 + 1, X2_1 - 1, Y2_4 - 1);
    18c6:	0e ee       	ldi	r16, 0xEE	; 238
    18c8:	10 e0       	ldi	r17, 0x00	; 0
    18ca:	26 e8       	ldi	r18, 0x86	; 134
    18cc:	30 e0       	ldi	r19, 0x00	; 0
    18ce:	48 eb       	ldi	r20, 0xB8	; 184
    18d0:	50 e0       	ldi	r21, 0x00	; 0
    18d2:	61 e5       	ldi	r22, 0x51	; 81
    18d4:	70 e0       	ldi	r23, 0x00	; 0
    18d6:	80 e2       	ldi	r24, 0x20	; 32
    18d8:	91 e0       	ldi	r25, 0x01	; 1
    18da:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
			break;
    18de:	26 c0       	rjmp	.+76     	; 0x192c <_Z9closeCardh+0x1cc>
		case 14:
			display.fillRect(X1_2 + 2, Y1_4 + 1, X2_2 - 1, Y2_4 - 1);
    18e0:	0e ee       	ldi	r16, 0xEE	; 238
    18e2:	10 e0       	ldi	r17, 0x00	; 0
    18e4:	23 ec       	ldi	r18, 0xC3	; 195
    18e6:	30 e0       	ldi	r19, 0x00	; 0
    18e8:	48 eb       	ldi	r20, 0xB8	; 184
    18ea:	50 e0       	ldi	r21, 0x00	; 0
    18ec:	6e e8       	ldi	r22, 0x8E	; 142
    18ee:	70 e0       	ldi	r23, 0x00	; 0
    18f0:	80 e2       	ldi	r24, 0x20	; 32
    18f2:	91 e0       	ldi	r25, 0x01	; 1
    18f4:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
			break;
    18f8:	19 c0       	rjmp	.+50     	; 0x192c <_Z9closeCardh+0x1cc>
		case 15:
			display.fillRect(X1_3 + 2, Y1_4 + 1, X2_3 - 1, Y2_4 - 1);
    18fa:	0e ee       	ldi	r16, 0xEE	; 238
    18fc:	10 e0       	ldi	r17, 0x00	; 0
    18fe:	20 e0       	ldi	r18, 0x00	; 0
    1900:	31 e0       	ldi	r19, 0x01	; 1
    1902:	48 eb       	ldi	r20, 0xB8	; 184
    1904:	50 e0       	ldi	r21, 0x00	; 0
    1906:	6b ec       	ldi	r22, 0xCB	; 203
    1908:	70 e0       	ldi	r23, 0x00	; 0
    190a:	80 e2       	ldi	r24, 0x20	; 32
    190c:	91 e0       	ldi	r25, 0x01	; 1
    190e:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
			break;
    1912:	0c c0       	rjmp	.+24     	; 0x192c <_Z9closeCardh+0x1cc>
		case 16:
			display.fillRect(X1_4 + 2, Y1_4 + 1, X2_4 - 1, Y2_4 - 1);
    1914:	0e ee       	ldi	r16, 0xEE	; 238
    1916:	10 e0       	ldi	r17, 0x00	; 0
    1918:	2d e3       	ldi	r18, 0x3D	; 61
    191a:	31 e0       	ldi	r19, 0x01	; 1
    191c:	48 eb       	ldi	r20, 0xB8	; 184
    191e:	50 e0       	ldi	r21, 0x00	; 0
    1920:	68 e0       	ldi	r22, 0x08	; 8
    1922:	71 e0       	ldi	r23, 0x01	; 1
    1924:	80 e2       	ldi	r24, 0x20	; 32
    1926:	91 e0       	ldi	r25, 0x01	; 1
    1928:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
			break;
	}
}
    192c:	cf 91       	pop	r28
    192e:	1f 91       	pop	r17
    1930:	0f 91       	pop	r16
    1932:	08 95       	ret

00001934 <_Z9checkOpenv>:

// provjera ako je memory karta vec okrenuta
void checkOpen() {
	if (board[c1 - 1] != board[c2 - 1] && control[c1 - 1] == 0 && control[c2 - 1] == 0) {  //ako su karte razlicite i kontrolno polje je 0 za obje
    1934:	80 91 ff 00 	lds	r24, 0x00FF	; 0x8000ff <c1>
    1938:	48 2f       	mov	r20, r24
    193a:	50 e0       	ldi	r21, 0x00	; 0
    193c:	41 50       	subi	r20, 0x01	; 1
    193e:	51 09       	sbc	r21, r1
    1940:	fa 01       	movw	r30, r20
    1942:	e0 5f       	subi	r30, 0xF0	; 240
    1944:	fe 4f       	sbci	r31, 0xFE	; 254
    1946:	60 81       	ld	r22, Z
    1948:	20 91 fe 00 	lds	r18, 0x00FE	; 0x8000fe <c2>
    194c:	30 e0       	ldi	r19, 0x00	; 0
    194e:	21 50       	subi	r18, 0x01	; 1
    1950:	31 09       	sbc	r19, r1
    1952:	f9 01       	movw	r30, r18
    1954:	e0 5f       	subi	r30, 0xF0	; 240
    1956:	fe 4f       	sbci	r31, 0xFE	; 254
    1958:	90 81       	ld	r25, Z
    195a:	69 17       	cp	r22, r25
    195c:	d1 f0       	breq	.+52     	; 0x1992 <_Z9checkOpenv+0x5e>
    195e:	fa 01       	movw	r30, r20
    1960:	e0 50       	subi	r30, 0x00	; 0
    1962:	ff 4f       	sbci	r31, 0xFF	; 255
    1964:	90 81       	ld	r25, Z
    1966:	91 11       	cpse	r25, r1
    1968:	14 c0       	rjmp	.+40     	; 0x1992 <_Z9checkOpenv+0x5e>
    196a:	f9 01       	movw	r30, r18
    196c:	e0 50       	subi	r30, 0x00	; 0
    196e:	ff 4f       	sbci	r31, 0xFF	; 255
    1970:	90 81       	ld	r25, Z
    1972:	91 11       	cpse	r25, r1
    1974:	0e c0       	rjmp	.+28     	; 0x1992 <_Z9checkOpenv+0x5e>
		closeCard(c1);
    1976:	0e 94 b0 0b 	call	0x1760	; 0x1760 <_Z9closeCardh>
		closeCard(c2);  //TEMP
    197a:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <c2>
    197e:	0e 94 b0 0b 	call	0x1760	; 0x1760 <_Z9closeCardh>
		display.setColor(255, 255, 255);
    1982:	2f ef       	ldi	r18, 0xFF	; 255
    1984:	4f ef       	ldi	r20, 0xFF	; 255
    1986:	6f ef       	ldi	r22, 0xFF	; 255
    1988:	80 e2       	ldi	r24, 0x20	; 32
    198a:	91 e0       	ldi	r25, 0x01	; 1
    198c:	0e 94 8c 13 	call	0x2718	; 0x2718 <_ZN4UTFT8setColorEhhh>
    1990:	0e c0       	rjmp	.+28     	; 0x19ae <_Z9checkOpenv+0x7a>
	} else { //ako su isti okrenuti, postavi kontrolno polje u 1 i povecaj broj pogodjenih parova
		control[c1-1] = 1;
    1992:	fa 01       	movw	r30, r20
    1994:	e0 50       	subi	r30, 0x00	; 0
    1996:	ff 4f       	sbci	r31, 0xFF	; 255
    1998:	81 e0       	ldi	r24, 0x01	; 1
    199a:	80 83       	st	Z, r24
		control[c2-1] = 1;
    199c:	f9 01       	movw	r30, r18
    199e:	e0 50       	subi	r30, 0x00	; 0
    19a0:	ff 4f       	sbci	r31, 0xFF	; 255
    19a2:	80 83       	st	Z, r24
		matched++;
    19a4:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <matched>
    19a8:	8f 5f       	subi	r24, 0xFF	; 255
    19aa:	80 93 fc 00 	sts	0x00FC, r24	; 0x8000fc <matched>
	}
	state = c1 = c2 = 0;
    19ae:	10 92 fe 00 	sts	0x00FE, r1	; 0x8000fe <c2>
    19b2:	10 92 ff 00 	sts	0x00FF, r1	; 0x8000ff <c1>
    19b6:	10 92 fd 00 	sts	0x00FD, r1	; 0x8000fd <state>
	moveCounter++;
    19ba:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <moveCounter>
    19be:	8f 5f       	subi	r24, 0xFF	; 255
    19c0:	80 93 fb 00 	sts	0x00FB, r24	; 0x8000fb <moveCounter>
    19c4:	08 95       	ret

000019c6 <_Z10revealCardh>:
}

// otkrivanje karte - crtanje simbola iz polja na plocu
void revealCard(uint8_t input) {
    19c6:	cf 92       	push	r12
    19c8:	ef 92       	push	r14
    19ca:	ff 92       	push	r15
    19cc:	0f 93       	push	r16
    19ce:	1f 93       	push	r17
    19d0:	98 2f       	mov	r25, r24
    19d2:	93 70       	andi	r25, 0x03	; 3
	uint16_t x = 0, y = 0;
	
	if (input % 4 == 1) {                 // prvi stupac
    19d4:	91 30       	cpi	r25, 0x01	; 1
    19d6:	49 f0       	breq	.+18     	; 0x19ea <_Z10revealCardh+0x24>
		x = X1_1;
	} else if (input % 4 == 2) {      // drugi stupac
    19d8:	92 30       	cpi	r25, 0x02	; 2
    19da:	51 f0       	breq	.+20     	; 0x19f0 <_Z10revealCardh+0x2a>
		x = X1_2;
	} else if (input % 4 == 3) {      // treci stupac
    19dc:	93 30       	cpi	r25, 0x03	; 3
    19de:	59 f0       	breq	.+22     	; 0x19f6 <_Z10revealCardh+0x30>
		x = X1_3;
	} else if (input % 4 == 0) {      // cetvrti stupac
    19e0:	99 23       	and	r25, r25
    19e2:	61 f0       	breq	.+24     	; 0x19fc <_Z10revealCardh+0x36>
	moveCounter++;
}

// otkrivanje karte - crtanje simbola iz polja na plocu
void revealCard(uint8_t input) {
	uint16_t x = 0, y = 0;
    19e4:	20 e0       	ldi	r18, 0x00	; 0
    19e6:	30 e0       	ldi	r19, 0x00	; 0
    19e8:	0b c0       	rjmp	.+22     	; 0x1a00 <_Z10revealCardh+0x3a>
	
	if (input % 4 == 1) {                 // prvi stupac
		x = X1_1;
    19ea:	2f e4       	ldi	r18, 0x4F	; 79
    19ec:	30 e0       	ldi	r19, 0x00	; 0
    19ee:	08 c0       	rjmp	.+16     	; 0x1a00 <_Z10revealCardh+0x3a>
	} else if (input % 4 == 2) {      // drugi stupac
		x = X1_2;
    19f0:	2c e8       	ldi	r18, 0x8C	; 140
    19f2:	30 e0       	ldi	r19, 0x00	; 0
    19f4:	05 c0       	rjmp	.+10     	; 0x1a00 <_Z10revealCardh+0x3a>
	} else if (input % 4 == 3) {      // treci stupac
		x = X1_3;
    19f6:	29 ec       	ldi	r18, 0xC9	; 201
    19f8:	30 e0       	ldi	r19, 0x00	; 0
    19fa:	02 c0       	rjmp	.+4      	; 0x1a00 <_Z10revealCardh+0x3a>
	} else if (input % 4 == 0) {      // cetvrti stupac
		x = X1_4;
    19fc:	26 e0       	ldi	r18, 0x06	; 6
    19fe:	31 e0       	ldi	r19, 0x01	; 1
	}
	
	if ((input > 0) && (input < 5)) {                   // prvi red
    1a00:	9f ef       	ldi	r25, 0xFF	; 255
    1a02:	98 0f       	add	r25, r24
    1a04:	94 30       	cpi	r25, 0x04	; 4
    1a06:	78 f0       	brcs	.+30     	; 0x1a26 <_Z10revealCardh+0x60>
		y = Y1_1;
	} else if ((input > 4) && (input < 9)) {        // drugi stupac
    1a08:	9b ef       	ldi	r25, 0xFB	; 251
    1a0a:	98 0f       	add	r25, r24
    1a0c:	94 30       	cpi	r25, 0x04	; 4
    1a0e:	70 f0       	brcs	.+28     	; 0x1a2c <_Z10revealCardh+0x66>
		y = Y1_2;
	} else if ((input > 8) && (input < 13)) {       // treci stupac
    1a10:	97 ef       	ldi	r25, 0xF7	; 247
    1a12:	98 0f       	add	r25, r24
    1a14:	94 30       	cpi	r25, 0x04	; 4
    1a16:	68 f0       	brcs	.+26     	; 0x1a32 <_Z10revealCardh+0x6c>
		y = Y1_3;
	} else if ((input > 12) && (input < 17)) {      // cetvrti stupac
    1a18:	93 ef       	ldi	r25, 0xF3	; 243
    1a1a:	98 0f       	add	r25, r24
    1a1c:	94 30       	cpi	r25, 0x04	; 4
    1a1e:	60 f0       	brcs	.+24     	; 0x1a38 <_Z10revealCardh+0x72>
	moveCounter++;
}

// otkrivanje karte - crtanje simbola iz polja na plocu
void revealCard(uint8_t input) {
	uint16_t x = 0, y = 0;
    1a20:	00 e0       	ldi	r16, 0x00	; 0
    1a22:	10 e0       	ldi	r17, 0x00	; 0
    1a24:	0b c0       	rjmp	.+22     	; 0x1a3c <_Z10revealCardh+0x76>
	} else if (input % 4 == 0) {      // cetvrti stupac
		x = X1_4;
	}
	
	if ((input > 0) && (input < 5)) {                   // prvi red
		y = Y1_1;
    1a26:	00 e0       	ldi	r16, 0x00	; 0
    1a28:	10 e0       	ldi	r17, 0x00	; 0
    1a2a:	08 c0       	rjmp	.+16     	; 0x1a3c <_Z10revealCardh+0x76>
	} else if ((input > 4) && (input < 9)) {        // drugi stupac
		y = Y1_2;
    1a2c:	0d e3       	ldi	r16, 0x3D	; 61
    1a2e:	10 e0       	ldi	r17, 0x00	; 0
    1a30:	05 c0       	rjmp	.+10     	; 0x1a3c <_Z10revealCardh+0x76>
	} else if ((input > 8) && (input < 13)) {       // treci stupac
		y = Y1_3;
    1a32:	0a e7       	ldi	r16, 0x7A	; 122
    1a34:	10 e0       	ldi	r17, 0x00	; 0
    1a36:	02 c0       	rjmp	.+4      	; 0x1a3c <_Z10revealCardh+0x76>
	} else if ((input > 12) && (input < 17)) {      // cetvrti stupac
		y = Y1_4;
    1a38:	07 eb       	ldi	r16, 0xB7	; 183
    1a3a:	10 e0       	ldi	r17, 0x00	; 0
	}
	
	uint8_t openSymbol = board[input - 1];
    1a3c:	e8 2f       	mov	r30, r24
    1a3e:	f0 e0       	ldi	r31, 0x00	; 0
    1a40:	e1 5f       	subi	r30, 0xF1	; 241
    1a42:	fe 4f       	sbci	r31, 0xFE	; 254
    1a44:	40 81       	ld	r20, Z
	
	display.printNumI(openSymbol, x + 20, y + 20);
    1a46:	0c 5e       	subi	r16, 0xEC	; 236
    1a48:	1f 4f       	sbci	r17, 0xFF	; 255
    1a4a:	2c 5e       	subi	r18, 0xEC	; 236
    1a4c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a4e:	50 e0       	ldi	r21, 0x00	; 0
    1a50:	60 e0       	ldi	r22, 0x00	; 0
    1a52:	70 e0       	ldi	r23, 0x00	; 0
    1a54:	68 94       	set
    1a56:	cc 24       	eor	r12, r12
    1a58:	c5 f8       	bld	r12, 5
    1a5a:	e1 2c       	mov	r14, r1
    1a5c:	f1 2c       	mov	r15, r1
    1a5e:	80 e2       	ldi	r24, 0x20	; 32
    1a60:	91 e0       	ldi	r25, 0x01	; 1
    1a62:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
    1a66:	2f ef       	ldi	r18, 0xFF	; 255
    1a68:	8f e7       	ldi	r24, 0x7F	; 127
    1a6a:	94 e0       	ldi	r25, 0x04	; 4
    1a6c:	21 50       	subi	r18, 0x01	; 1
    1a6e:	80 40       	sbci	r24, 0x00	; 0
    1a70:	90 40       	sbci	r25, 0x00	; 0
    1a72:	e1 f7       	brne	.-8      	; 0x1a6c <_Z10revealCardh+0xa6>
    1a74:	00 c0       	rjmp	.+0      	; 0x1a76 <_Z10revealCardh+0xb0>
    1a76:	00 00       	nop
	
	_delay_ms(200);                                     // Debounce cekanjem
}
    1a78:	1f 91       	pop	r17
    1a7a:	0f 91       	pop	r16
    1a7c:	ff 90       	pop	r15
    1a7e:	ef 90       	pop	r14
    1a80:	cf 90       	pop	r12
    1a82:	08 95       	ret

00001a84 <_Z10memoryInitv>:

// inicijalno stanje memory igre - generiranje sadrzaja polja i crtanje ploce
void memoryInit() {
    1a84:	0f 93       	push	r16
    1a86:	1f 93       	push	r17
	fillBoard();
    1a88:	0e 94 a7 0a 	call	0x154e	; 0x154e <_Z9fillBoardv>
	
	display.clrScr();
    1a8c:	80 e2       	ldi	r24, 0x20	; 32
    1a8e:	91 e0       	ldi	r25, 0x01	; 1
    1a90:	0e 94 56 13 	call	0x26ac	; 0x26ac <_ZN4UTFT6clrScrEv>
	
	// gumb za povratak
	display.drawRect(BACK_X1, BACK_Y1, BACK_X2, BACK_Y2);
    1a94:	08 e2       	ldi	r16, 0x28	; 40
    1a96:	10 e0       	ldi	r17, 0x00	; 0
    1a98:	28 e2       	ldi	r18, 0x28	; 40
    1a9a:	30 e0       	ldi	r19, 0x00	; 0
    1a9c:	40 e0       	ldi	r20, 0x00	; 0
    1a9e:	50 e0       	ldi	r21, 0x00	; 0
    1aa0:	60 e0       	ldi	r22, 0x00	; 0
    1aa2:	70 e0       	ldi	r23, 0x00	; 0
    1aa4:	80 e2       	ldi	r24, 0x20	; 32
    1aa6:	91 e0       	ldi	r25, 0x01	; 1
    1aa8:	0e 94 4e 14 	call	0x289c	; 0x289c <_ZN4UTFT8drawRectEiiii>
	display.print("<", BACK_TEXT_X, BACK_TEXT_Y);
    1aac:	00 e0       	ldi	r16, 0x00	; 0
    1aae:	10 e0       	ldi	r17, 0x00	; 0
    1ab0:	2c e0       	ldi	r18, 0x0C	; 12
    1ab2:	30 e0       	ldi	r19, 0x00	; 0
    1ab4:	4c e0       	ldi	r20, 0x0C	; 12
    1ab6:	50 e0       	ldi	r21, 0x00	; 0
    1ab8:	6a e6       	ldi	r22, 0x6A	; 106
    1aba:	70 e0       	ldi	r23, 0x00	; 0
    1abc:	80 e2       	ldi	r24, 0x20	; 32
    1abe:	91 e0       	ldi	r25, 0x01	; 1
    1ac0:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	
	display.print("Moves", 0, 60); // labela za broj poteza
    1ac4:	2c e3       	ldi	r18, 0x3C	; 60
    1ac6:	30 e0       	ldi	r19, 0x00	; 0
    1ac8:	40 e0       	ldi	r20, 0x00	; 0
    1aca:	50 e0       	ldi	r21, 0x00	; 0
    1acc:	6c e6       	ldi	r22, 0x6C	; 108
    1ace:	70 e0       	ldi	r23, 0x00	; 0
    1ad0:	80 e2       	ldi	r24, 0x20	; 32
    1ad2:	91 e0       	ldi	r25, 0x01	; 1
    1ad4:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	display.print("Time", 0, 140); // labela za vrijeme
    1ad8:	2c e8       	ldi	r18, 0x8C	; 140
    1ada:	30 e0       	ldi	r19, 0x00	; 0
    1adc:	40 e0       	ldi	r20, 0x00	; 0
    1ade:	50 e0       	ldi	r21, 0x00	; 0
    1ae0:	62 e7       	ldi	r22, 0x72	; 114
    1ae2:	70 e0       	ldi	r23, 0x00	; 0
    1ae4:	80 e2       	ldi	r24, 0x20	; 32
    1ae6:	91 e0       	ldi	r25, 0x01	; 1
    1ae8:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	
	//crtanje ploce
	display.fillRect(BORDER_L, BOARD_Y1, BORDER_L + BORDER_WIDTH, BOARD_Y2);
    1aec:	0f ee       	ldi	r16, 0xEF	; 239
    1aee:	10 e0       	ldi	r17, 0x00	; 0
    1af0:	2d e8       	ldi	r18, 0x8D	; 141
    1af2:	30 e0       	ldi	r19, 0x00	; 0
    1af4:	40 e0       	ldi	r20, 0x00	; 0
    1af6:	50 e0       	ldi	r21, 0x00	; 0
    1af8:	68 e8       	ldi	r22, 0x88	; 136
    1afa:	70 e0       	ldi	r23, 0x00	; 0
    1afc:	80 e2       	ldi	r24, 0x20	; 32
    1afe:	91 e0       	ldi	r25, 0x01	; 1
    1b00:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
	display.fillRect(BORDER_C, BOARD_Y1, BORDER_C + BORDER_WIDTH, BOARD_Y2);
    1b04:	2a ec       	ldi	r18, 0xCA	; 202
    1b06:	30 e0       	ldi	r19, 0x00	; 0
    1b08:	40 e0       	ldi	r20, 0x00	; 0
    1b0a:	50 e0       	ldi	r21, 0x00	; 0
    1b0c:	65 ec       	ldi	r22, 0xC5	; 197
    1b0e:	70 e0       	ldi	r23, 0x00	; 0
    1b10:	80 e2       	ldi	r24, 0x20	; 32
    1b12:	91 e0       	ldi	r25, 0x01	; 1
    1b14:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
	display.fillRect(BORDER_R, BOARD_Y1, BORDER_R + BORDER_WIDTH, BOARD_Y2);
    1b18:	27 e0       	ldi	r18, 0x07	; 7
    1b1a:	31 e0       	ldi	r19, 0x01	; 1
    1b1c:	40 e0       	ldi	r20, 0x00	; 0
    1b1e:	50 e0       	ldi	r21, 0x00	; 0
    1b20:	62 e0       	ldi	r22, 0x02	; 2
    1b22:	71 e0       	ldi	r23, 0x01	; 1
    1b24:	80 e2       	ldi	r24, 0x20	; 32
    1b26:	91 e0       	ldi	r25, 0x01	; 1
    1b28:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
	display.fillRect(BOARD_X1, BORDER_T, BOARD_X2, BORDER_T + BORDER_WIDTH);
    1b2c:	0d e3       	ldi	r16, 0x3D	; 61
    1b2e:	10 e0       	ldi	r17, 0x00	; 0
    1b30:	2e e3       	ldi	r18, 0x3E	; 62
    1b32:	31 e0       	ldi	r19, 0x01	; 1
    1b34:	48 e3       	ldi	r20, 0x38	; 56
    1b36:	50 e0       	ldi	r21, 0x00	; 0
    1b38:	6f e4       	ldi	r22, 0x4F	; 79
    1b3a:	70 e0       	ldi	r23, 0x00	; 0
    1b3c:	80 e2       	ldi	r24, 0x20	; 32
    1b3e:	91 e0       	ldi	r25, 0x01	; 1
    1b40:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
	display.fillRect(BOARD_X1, BORDER_M, BOARD_X2, BORDER_M + BORDER_WIDTH);
    1b44:	0a e7       	ldi	r16, 0x7A	; 122
    1b46:	10 e0       	ldi	r17, 0x00	; 0
    1b48:	2e e3       	ldi	r18, 0x3E	; 62
    1b4a:	31 e0       	ldi	r19, 0x01	; 1
    1b4c:	45 e7       	ldi	r20, 0x75	; 117
    1b4e:	50 e0       	ldi	r21, 0x00	; 0
    1b50:	6f e4       	ldi	r22, 0x4F	; 79
    1b52:	70 e0       	ldi	r23, 0x00	; 0
    1b54:	80 e2       	ldi	r24, 0x20	; 32
    1b56:	91 e0       	ldi	r25, 0x01	; 1
    1b58:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
	display.fillRect(BOARD_X1, BORDER_B, BOARD_X2, BORDER_B + BORDER_WIDTH);
    1b5c:	07 eb       	ldi	r16, 0xB7	; 183
    1b5e:	10 e0       	ldi	r17, 0x00	; 0
    1b60:	2e e3       	ldi	r18, 0x3E	; 62
    1b62:	31 e0       	ldi	r19, 0x01	; 1
    1b64:	42 eb       	ldi	r20, 0xB2	; 178
    1b66:	50 e0       	ldi	r21, 0x00	; 0
    1b68:	6f e4       	ldi	r22, 0x4F	; 79
    1b6a:	70 e0       	ldi	r23, 0x00	; 0
    1b6c:	80 e2       	ldi	r24, 0x20	; 32
    1b6e:	91 e0       	ldi	r25, 0x01	; 1
    1b70:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN4UTFT8fillRectEiiii>
}
    1b74:	1f 91       	pop	r17
    1b76:	0f 91       	pop	r16
    1b78:	08 95       	ret

00001b7a <_Z20memoryResetVariablesv>:

// postavlja varijable u pocetne vrijednosti (ne highscores, ne broj rundi)
void memoryResetVariables() {
	  for (uint8_t i = 0; i < 16; i++) {
    1b7a:	20 e0       	ldi	r18, 0x00	; 0
    1b7c:	20 31       	cpi	r18, 0x10	; 16
    1b7e:	60 f4       	brcc	.+24     	; 0x1b98 <_Z20memoryResetVariablesv+0x1e>
		  board[i] = 0;
    1b80:	82 2f       	mov	r24, r18
    1b82:	90 e0       	ldi	r25, 0x00	; 0
    1b84:	fc 01       	movw	r30, r24
    1b86:	e0 5f       	subi	r30, 0xF0	; 240
    1b88:	fe 4f       	sbci	r31, 0xFE	; 254
    1b8a:	10 82       	st	Z, r1
		  control[i] = 0;
    1b8c:	fc 01       	movw	r30, r24
    1b8e:	e0 50       	subi	r30, 0x00	; 0
    1b90:	ff 4f       	sbci	r31, 0xFF	; 255
    1b92:	10 82       	st	Z, r1
	display.fillRect(BOARD_X1, BORDER_B, BOARD_X2, BORDER_B + BORDER_WIDTH);
}

// postavlja varijable u pocetne vrijednosti (ne highscores, ne broj rundi)
void memoryResetVariables() {
	  for (uint8_t i = 0; i < 16; i++) {
    1b94:	2f 5f       	subi	r18, 0xFF	; 255
    1b96:	f2 cf       	rjmp	.-28     	; 0x1b7c <_Z20memoryResetVariablesv+0x2>
		  board[i] = 0;
		  control[i] = 0;
	  }
	  c1 = c2 = 0;
    1b98:	10 92 fe 00 	sts	0x00FE, r1	; 0x8000fe <c2>
    1b9c:	10 92 ff 00 	sts	0x00FF, r1	; 0x8000ff <c1>
	  state = 0;
    1ba0:	10 92 fd 00 	sts	0x00FD, r1	; 0x8000fd <state>
	  matched = 0;
    1ba4:	10 92 fc 00 	sts	0x00FC, r1	; 0x8000fc <matched>
	  moveCounter = 0;
    1ba8:	10 92 fb 00 	sts	0x00FB, r1	; 0x8000fb <moveCounter>
	  currentTime[0] = currentTime[1] = currentTime[2] = 0;
    1bac:	e8 ef       	ldi	r30, 0xF8	; 248
    1bae:	f0 e0       	ldi	r31, 0x00	; 0
    1bb0:	12 82       	std	Z+2, r1	; 0x02
    1bb2:	11 82       	std	Z+1, r1	; 0x01
    1bb4:	10 82       	st	Z, r1
    1bb6:	08 95       	ret

00001bb8 <_Z13memoryEndGamev>:
	roundStreak = 0;
}
*/

// iscrtava ekran za kraj igre, povecava broj runde, stavlja igru u not-started stanje, resetira varijable
void memoryEndGame() {
    1bb8:	cf 92       	push	r12
    1bba:	ef 92       	push	r14
    1bbc:	ff 92       	push	r15
    1bbe:	0f 93       	push	r16
    1bc0:	1f 93       	push	r17
    1bc2:	cf 93       	push	r28
    1bc4:	df 93       	push	r29
	roundCounter++;
    1bc6:	80 91 f6 00 	lds	r24, 0x00F6	; 0x8000f6 <roundCounter>
    1bca:	8f 5f       	subi	r24, 0xFF	; 255
    1bcc:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <roundCounter>
	started = 0;
    1bd0:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <started>
		
	if (moveCounter < bestMoves) bestMoves = moveCounter;
    1bd4:	90 91 fb 00 	lds	r25, 0x00FB	; 0x8000fb <moveCounter>
    1bd8:	20 91 67 00 	lds	r18, 0x0067	; 0x800067 <bestMoves>
    1bdc:	92 17       	cp	r25, r18
    1bde:	10 f4       	brcc	.+4      	; 0x1be4 <_Z13memoryEndGamev+0x2c>
    1be0:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <bestMoves>
	
	if (currentTime[0] <= bestTime[0]) {
    1be4:	90 91 f8 00 	lds	r25, 0x00F8	; 0x8000f8 <currentTime>
    1be8:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <bestTime>
    1bec:	29 17       	cp	r18, r25
    1bee:	78 f0       	brcs	.+30     	; 0x1c0e <_Z13memoryEndGamev+0x56>
		if (currentTime[1] <= bestTime[1]) {
    1bf0:	30 91 f9 00 	lds	r19, 0x00F9	; 0x8000f9 <currentTime+0x1>
    1bf4:	40 91 65 00 	lds	r20, 0x0065	; 0x800065 <bestTime+0x1>
    1bf8:	43 17       	cp	r20, r19
    1bfa:	48 f0       	brcs	.+18     	; 0x1c0e <_Z13memoryEndGamev+0x56>
			if (currentTime[0] < bestTime[0]) {
    1bfc:	92 17       	cp	r25, r18
    1bfe:	38 f4       	brcc	.+14     	; 0x1c0e <_Z13memoryEndGamev+0x56>
				bestTime[0] = currentTime[0];
    1c00:	e4 e6       	ldi	r30, 0x64	; 100
    1c02:	f0 e0       	ldi	r31, 0x00	; 0
    1c04:	90 83       	st	Z, r25
				bestTime[1] = currentTime[1];
    1c06:	31 83       	std	Z+1, r19	; 0x01
				bestTime[2] = currentTime[2];
    1c08:	90 91 fa 00 	lds	r25, 0x00FA	; 0x8000fa <currentTime+0x2>
    1c0c:	92 83       	std	Z+2, r25	; 0x02
			}
		}
	}
	
	if (roundCounter > roundStreak) roundStreak = roundCounter;
    1c0e:	90 91 f5 00 	lds	r25, 0x00F5	; 0x8000f5 <roundStreak>
    1c12:	98 17       	cp	r25, r24
    1c14:	10 f4       	brcc	.+4      	; 0x1c1a <_Z13memoryEndGamev+0x62>
    1c16:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <roundStreak>
	
	display.clrScr();
    1c1a:	80 e2       	ldi	r24, 0x20	; 32
    1c1c:	91 e0       	ldi	r25, 0x01	; 1
    1c1e:	0e 94 56 13 	call	0x26ac	; 0x26ac <_ZN4UTFT6clrScrEv>
	
	display.print("Round:", 100, 10);
    1c22:	00 e0       	ldi	r16, 0x00	; 0
    1c24:	10 e0       	ldi	r17, 0x00	; 0
    1c26:	2a e0       	ldi	r18, 0x0A	; 10
    1c28:	30 e0       	ldi	r19, 0x00	; 0
    1c2a:	44 e6       	ldi	r20, 0x64	; 100
    1c2c:	50 e0       	ldi	r21, 0x00	; 0
    1c2e:	67 e7       	ldi	r22, 0x77	; 119
    1c30:	70 e0       	ldi	r23, 0x00	; 0
    1c32:	80 e2       	ldi	r24, 0x20	; 32
    1c34:	91 e0       	ldi	r25, 0x01	; 1
    1c36:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	display.printNumI(roundCounter, 200, 10);
    1c3a:	40 91 f6 00 	lds	r20, 0x00F6	; 0x8000f6 <roundCounter>
    1c3e:	50 e0       	ldi	r21, 0x00	; 0
    1c40:	60 e0       	ldi	r22, 0x00	; 0
    1c42:	70 e0       	ldi	r23, 0x00	; 0
    1c44:	68 94       	set
    1c46:	cc 24       	eor	r12, r12
    1c48:	c5 f8       	bld	r12, 5
    1c4a:	e1 2c       	mov	r14, r1
    1c4c:	f1 2c       	mov	r15, r1
    1c4e:	0a e0       	ldi	r16, 0x0A	; 10
    1c50:	10 e0       	ldi	r17, 0x00	; 0
    1c52:	28 ec       	ldi	r18, 0xC8	; 200
    1c54:	30 e0       	ldi	r19, 0x00	; 0
    1c56:	80 e2       	ldi	r24, 0x20	; 32
    1c58:	91 e0       	ldi	r25, 0x01	; 1
    1c5a:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
	
	display.print("Moves:", 90, 40);
    1c5e:	00 e0       	ldi	r16, 0x00	; 0
    1c60:	10 e0       	ldi	r17, 0x00	; 0
    1c62:	28 e2       	ldi	r18, 0x28	; 40
    1c64:	30 e0       	ldi	r19, 0x00	; 0
    1c66:	4a e5       	ldi	r20, 0x5A	; 90
    1c68:	50 e0       	ldi	r21, 0x00	; 0
    1c6a:	6e e7       	ldi	r22, 0x7E	; 126
    1c6c:	70 e0       	ldi	r23, 0x00	; 0
    1c6e:	80 e2       	ldi	r24, 0x20	; 32
    1c70:	91 e0       	ldi	r25, 0x01	; 1
    1c72:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	display.printNumI(moveCounter, 190, 40);
    1c76:	40 91 fb 00 	lds	r20, 0x00FB	; 0x8000fb <moveCounter>
    1c7a:	50 e0       	ldi	r21, 0x00	; 0
    1c7c:	60 e0       	ldi	r22, 0x00	; 0
    1c7e:	70 e0       	ldi	r23, 0x00	; 0
    1c80:	08 e2       	ldi	r16, 0x28	; 40
    1c82:	10 e0       	ldi	r17, 0x00	; 0
    1c84:	2e eb       	ldi	r18, 0xBE	; 190
    1c86:	30 e0       	ldi	r19, 0x00	; 0
    1c88:	80 e2       	ldi	r24, 0x20	; 32
    1c8a:	91 e0       	ldi	r25, 0x01	; 1
    1c8c:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
	display.print("Best moves:", 40, 60);
    1c90:	00 e0       	ldi	r16, 0x00	; 0
    1c92:	10 e0       	ldi	r17, 0x00	; 0
    1c94:	2c e3       	ldi	r18, 0x3C	; 60
    1c96:	30 e0       	ldi	r19, 0x00	; 0
    1c98:	48 e2       	ldi	r20, 0x28	; 40
    1c9a:	50 e0       	ldi	r21, 0x00	; 0
    1c9c:	65 e8       	ldi	r22, 0x85	; 133
    1c9e:	70 e0       	ldi	r23, 0x00	; 0
    1ca0:	80 e2       	ldi	r24, 0x20	; 32
    1ca2:	91 e0       	ldi	r25, 0x01	; 1
    1ca4:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	display.printNumI(bestMoves, 240, 60);
    1ca8:	40 91 67 00 	lds	r20, 0x0067	; 0x800067 <bestMoves>
    1cac:	50 e0       	ldi	r21, 0x00	; 0
    1cae:	60 e0       	ldi	r22, 0x00	; 0
    1cb0:	70 e0       	ldi	r23, 0x00	; 0
    1cb2:	0c e3       	ldi	r16, 0x3C	; 60
    1cb4:	10 e0       	ldi	r17, 0x00	; 0
    1cb6:	20 ef       	ldi	r18, 0xF0	; 240
    1cb8:	30 e0       	ldi	r19, 0x00	; 0
    1cba:	80 e2       	ldi	r24, 0x20	; 32
    1cbc:	91 e0       	ldi	r25, 0x01	; 1
    1cbe:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
		
	display.print("Time:", 60, 90);
    1cc2:	00 e0       	ldi	r16, 0x00	; 0
    1cc4:	10 e0       	ldi	r17, 0x00	; 0
    1cc6:	2a e5       	ldi	r18, 0x5A	; 90
    1cc8:	30 e0       	ldi	r19, 0x00	; 0
    1cca:	4c e3       	ldi	r20, 0x3C	; 60
    1ccc:	50 e0       	ldi	r21, 0x00	; 0
    1cce:	61 e9       	ldi	r22, 0x91	; 145
    1cd0:	70 e0       	ldi	r23, 0x00	; 0
    1cd2:	80 e2       	ldi	r24, 0x20	; 32
    1cd4:	91 e0       	ldi	r25, 0x01	; 1
    1cd6:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	display.printNumI(currentTime[0], 140, 90);
    1cda:	c8 ef       	ldi	r28, 0xF8	; 248
    1cdc:	d0 e0       	ldi	r29, 0x00	; 0
    1cde:	48 81       	ld	r20, Y
    1ce0:	50 e0       	ldi	r21, 0x00	; 0
    1ce2:	60 e0       	ldi	r22, 0x00	; 0
    1ce4:	70 e0       	ldi	r23, 0x00	; 0
    1ce6:	0a e5       	ldi	r16, 0x5A	; 90
    1ce8:	10 e0       	ldi	r17, 0x00	; 0
    1cea:	2c e8       	ldi	r18, 0x8C	; 140
    1cec:	30 e0       	ldi	r19, 0x00	; 0
    1cee:	80 e2       	ldi	r24, 0x20	; 32
    1cf0:	91 e0       	ldi	r25, 0x01	; 1
    1cf2:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
	display.print(":", 170, 90);
    1cf6:	00 e0       	ldi	r16, 0x00	; 0
    1cf8:	10 e0       	ldi	r17, 0x00	; 0
    1cfa:	2a e5       	ldi	r18, 0x5A	; 90
    1cfc:	30 e0       	ldi	r19, 0x00	; 0
    1cfe:	4a ea       	ldi	r20, 0xAA	; 170
    1d00:	50 e0       	ldi	r21, 0x00	; 0
    1d02:	6c e7       	ldi	r22, 0x7C	; 124
    1d04:	70 e0       	ldi	r23, 0x00	; 0
    1d06:	80 e2       	ldi	r24, 0x20	; 32
    1d08:	91 e0       	ldi	r25, 0x01	; 1
    1d0a:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	display.printNumI(currentTime[1], 180, 90);
    1d0e:	49 81       	ldd	r20, Y+1	; 0x01
    1d10:	50 e0       	ldi	r21, 0x00	; 0
    1d12:	60 e0       	ldi	r22, 0x00	; 0
    1d14:	70 e0       	ldi	r23, 0x00	; 0
    1d16:	0a e5       	ldi	r16, 0x5A	; 90
    1d18:	10 e0       	ldi	r17, 0x00	; 0
    1d1a:	24 eb       	ldi	r18, 0xB4	; 180
    1d1c:	30 e0       	ldi	r19, 0x00	; 0
    1d1e:	80 e2       	ldi	r24, 0x20	; 32
    1d20:	91 e0       	ldi	r25, 0x01	; 1
    1d22:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
	display.print(":", 210, 90);
    1d26:	00 e0       	ldi	r16, 0x00	; 0
    1d28:	10 e0       	ldi	r17, 0x00	; 0
    1d2a:	2a e5       	ldi	r18, 0x5A	; 90
    1d2c:	30 e0       	ldi	r19, 0x00	; 0
    1d2e:	42 ed       	ldi	r20, 0xD2	; 210
    1d30:	50 e0       	ldi	r21, 0x00	; 0
    1d32:	6c e7       	ldi	r22, 0x7C	; 124
    1d34:	70 e0       	ldi	r23, 0x00	; 0
    1d36:	80 e2       	ldi	r24, 0x20	; 32
    1d38:	91 e0       	ldi	r25, 0x01	; 1
    1d3a:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	display.printNumI(currentTime[2], 220, 90);
    1d3e:	4a 81       	ldd	r20, Y+2	; 0x02
    1d40:	50 e0       	ldi	r21, 0x00	; 0
    1d42:	60 e0       	ldi	r22, 0x00	; 0
    1d44:	70 e0       	ldi	r23, 0x00	; 0
    1d46:	0a e5       	ldi	r16, 0x5A	; 90
    1d48:	10 e0       	ldi	r17, 0x00	; 0
    1d4a:	2c ed       	ldi	r18, 0xDC	; 220
    1d4c:	30 e0       	ldi	r19, 0x00	; 0
    1d4e:	80 e2       	ldi	r24, 0x20	; 32
    1d50:	91 e0       	ldi	r25, 0x01	; 1
    1d52:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
		
	display.print("Best time:", 20, 110);
    1d56:	00 e0       	ldi	r16, 0x00	; 0
    1d58:	10 e0       	ldi	r17, 0x00	; 0
    1d5a:	2e e6       	ldi	r18, 0x6E	; 110
    1d5c:	30 e0       	ldi	r19, 0x00	; 0
    1d5e:	44 e1       	ldi	r20, 0x14	; 20
    1d60:	50 e0       	ldi	r21, 0x00	; 0
    1d62:	67 e9       	ldi	r22, 0x97	; 151
    1d64:	70 e0       	ldi	r23, 0x00	; 0
    1d66:	80 e2       	ldi	r24, 0x20	; 32
    1d68:	91 e0       	ldi	r25, 0x01	; 1
    1d6a:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	display.printNumI(bestTime[0], 180, 110);
    1d6e:	c4 e6       	ldi	r28, 0x64	; 100
    1d70:	d0 e0       	ldi	r29, 0x00	; 0
    1d72:	48 81       	ld	r20, Y
    1d74:	50 e0       	ldi	r21, 0x00	; 0
    1d76:	60 e0       	ldi	r22, 0x00	; 0
    1d78:	70 e0       	ldi	r23, 0x00	; 0
    1d7a:	0e e6       	ldi	r16, 0x6E	; 110
    1d7c:	10 e0       	ldi	r17, 0x00	; 0
    1d7e:	24 eb       	ldi	r18, 0xB4	; 180
    1d80:	30 e0       	ldi	r19, 0x00	; 0
    1d82:	80 e2       	ldi	r24, 0x20	; 32
    1d84:	91 e0       	ldi	r25, 0x01	; 1
    1d86:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
	display.print(":", 210, 110);
    1d8a:	00 e0       	ldi	r16, 0x00	; 0
    1d8c:	10 e0       	ldi	r17, 0x00	; 0
    1d8e:	2e e6       	ldi	r18, 0x6E	; 110
    1d90:	30 e0       	ldi	r19, 0x00	; 0
    1d92:	42 ed       	ldi	r20, 0xD2	; 210
    1d94:	50 e0       	ldi	r21, 0x00	; 0
    1d96:	6c e7       	ldi	r22, 0x7C	; 124
    1d98:	70 e0       	ldi	r23, 0x00	; 0
    1d9a:	80 e2       	ldi	r24, 0x20	; 32
    1d9c:	91 e0       	ldi	r25, 0x01	; 1
    1d9e:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	display.printNumI(bestTime[1], 220, 110);
    1da2:	49 81       	ldd	r20, Y+1	; 0x01
    1da4:	50 e0       	ldi	r21, 0x00	; 0
    1da6:	60 e0       	ldi	r22, 0x00	; 0
    1da8:	70 e0       	ldi	r23, 0x00	; 0
    1daa:	0e e6       	ldi	r16, 0x6E	; 110
    1dac:	10 e0       	ldi	r17, 0x00	; 0
    1dae:	2c ed       	ldi	r18, 0xDC	; 220
    1db0:	30 e0       	ldi	r19, 0x00	; 0
    1db2:	80 e2       	ldi	r24, 0x20	; 32
    1db4:	91 e0       	ldi	r25, 0x01	; 1
    1db6:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
	display.print(":", 250, 110);
    1dba:	00 e0       	ldi	r16, 0x00	; 0
    1dbc:	10 e0       	ldi	r17, 0x00	; 0
    1dbe:	2e e6       	ldi	r18, 0x6E	; 110
    1dc0:	30 e0       	ldi	r19, 0x00	; 0
    1dc2:	4a ef       	ldi	r20, 0xFA	; 250
    1dc4:	50 e0       	ldi	r21, 0x00	; 0
    1dc6:	6c e7       	ldi	r22, 0x7C	; 124
    1dc8:	70 e0       	ldi	r23, 0x00	; 0
    1dca:	80 e2       	ldi	r24, 0x20	; 32
    1dcc:	91 e0       	ldi	r25, 0x01	; 1
    1dce:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	display.printNumI(bestTime[2], 260, 110);
    1dd2:	4a 81       	ldd	r20, Y+2	; 0x02
    1dd4:	50 e0       	ldi	r21, 0x00	; 0
    1dd6:	60 e0       	ldi	r22, 0x00	; 0
    1dd8:	70 e0       	ldi	r23, 0x00	; 0
    1dda:	0e e6       	ldi	r16, 0x6E	; 110
    1ddc:	10 e0       	ldi	r17, 0x00	; 0
    1dde:	24 e0       	ldi	r18, 0x04	; 4
    1de0:	31 e0       	ldi	r19, 0x01	; 1
    1de2:	80 e2       	ldi	r24, 0x20	; 32
    1de4:	91 e0       	ldi	r25, 0x01	; 1
    1de6:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
;
	display.drawRect(EXIT_X1, BUTTONS_Y1, EXIT_X2, BUTTONS_Y2);
    1dea:	06 ee       	ldi	r16, 0xE6	; 230
    1dec:	10 e0       	ldi	r17, 0x00	; 0
    1dee:	20 ea       	ldi	r18, 0xA0	; 160
    1df0:	30 e0       	ldi	r19, 0x00	; 0
    1df2:	46 e9       	ldi	r20, 0x96	; 150
    1df4:	50 e0       	ldi	r21, 0x00	; 0
    1df6:	6a e0       	ldi	r22, 0x0A	; 10
    1df8:	70 e0       	ldi	r23, 0x00	; 0
    1dfa:	80 e2       	ldi	r24, 0x20	; 32
    1dfc:	91 e0       	ldi	r25, 0x01	; 1
    1dfe:	0e 94 4e 14 	call	0x289c	; 0x289c <_ZN4UTFT8drawRectEiiii>
	display.print("EXIT", EXIT_TEXT_X, BUTTONS_TEXT_Y);
    1e02:	00 e0       	ldi	r16, 0x00	; 0
    1e04:	10 e0       	ldi	r17, 0x00	; 0
    1e06:	24 eb       	ldi	r18, 0xB4	; 180
    1e08:	30 e0       	ldi	r19, 0x00	; 0
    1e0a:	4c e3       	ldi	r20, 0x3C	; 60
    1e0c:	50 e0       	ldi	r21, 0x00	; 0
    1e0e:	62 ea       	ldi	r22, 0xA2	; 162
    1e10:	70 e0       	ldi	r23, 0x00	; 0
    1e12:	80 e2       	ldi	r24, 0x20	; 32
    1e14:	91 e0       	ldi	r25, 0x01	; 1
    1e16:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	display.drawRect(NEXT_X1, BUTTONS_Y1, NEXT_X2, BUTTONS_Y2);
    1e1a:	06 ee       	ldi	r16, 0xE6	; 230
    1e1c:	10 e0       	ldi	r17, 0x00	; 0
    1e1e:	26 e3       	ldi	r18, 0x36	; 54
    1e20:	31 e0       	ldi	r19, 0x01	; 1
    1e22:	46 e9       	ldi	r20, 0x96	; 150
    1e24:	50 e0       	ldi	r21, 0x00	; 0
    1e26:	61 ea       	ldi	r22, 0xA1	; 161
    1e28:	70 e0       	ldi	r23, 0x00	; 0
    1e2a:	80 e2       	ldi	r24, 0x20	; 32
    1e2c:	91 e0       	ldi	r25, 0x01	; 1
    1e2e:	0e 94 4e 14 	call	0x289c	; 0x289c <_ZN4UTFT8drawRectEiiii>
	display.print("NEXT", NEXT_TEXT_X, BUTTONS_TEXT_Y);
    1e32:	00 e0       	ldi	r16, 0x00	; 0
    1e34:	10 e0       	ldi	r17, 0x00	; 0
    1e36:	24 eb       	ldi	r18, 0xB4	; 180
    1e38:	30 e0       	ldi	r19, 0x00	; 0
    1e3a:	48 ec       	ldi	r20, 0xC8	; 200
    1e3c:	50 e0       	ldi	r21, 0x00	; 0
    1e3e:	67 ea       	ldi	r22, 0xA7	; 167
    1e40:	70 e0       	ldi	r23, 0x00	; 0
    1e42:	80 e2       	ldi	r24, 0x20	; 32
    1e44:	91 e0       	ldi	r25, 0x01	; 1
    1e46:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
		
	memoryResetVariables();	  
    1e4a:	0e 94 bd 0d 	call	0x1b7a	; 0x1b7a <_Z20memoryResetVariablesv>
}
    1e4e:	df 91       	pop	r29
    1e50:	cf 91       	pop	r28
    1e52:	1f 91       	pop	r17
    1e54:	0f 91       	pop	r16
    1e56:	ff 90       	pop	r15
    1e58:	ef 90       	pop	r14
    1e5a:	cf 90       	pop	r12
    1e5c:	08 95       	ret

00001e5e <_Z15endGameGetInputv>:

uint8_t endGameGetInput() {
    1e5e:	cf 93       	push	r28
    1e60:	df 93       	push	r29
	while(!Touched());
    1e62:	0e 94 a9 09 	call	0x1352	; 0x1352 <_Z7Touchedv>
    1e66:	88 23       	and	r24, r24
    1e68:	e1 f3       	breq	.-8      	; 0x1e62 <_Z15endGameGetInputv+0x4>
	uint16_t x = getX();
    1e6a:	0e 94 af 09 	call	0x135e	; 0x135e <_Z4getXv>
    1e6e:	ec 01       	movw	r28, r24
	uint16_t y = getY();
    1e70:	0e 94 e5 09 	call	0x13ca	; 0x13ca <_Z4getYv>
	
	if ((x > EXIT_X1) && (x < EXIT_X2) && (y > BUTTONS_Y1) && (y < BUTTONS_Y2)) return 1;
    1e74:	9e 01       	movw	r18, r28
    1e76:	2b 50       	subi	r18, 0x0B	; 11
    1e78:	31 09       	sbc	r19, r1
    1e7a:	25 39       	cpi	r18, 0x95	; 149
    1e7c:	31 05       	cpc	r19, r1
    1e7e:	30 f4       	brcc	.+12     	; 0x1e8c <_Z15endGameGetInputv+0x2e>
    1e80:	87 39       	cpi	r24, 0x97	; 151
    1e82:	91 05       	cpc	r25, r1
    1e84:	18 f0       	brcs	.+6      	; 0x1e8c <_Z15endGameGetInputv+0x2e>
    1e86:	86 3e       	cpi	r24, 0xE6	; 230
    1e88:	91 05       	cpc	r25, r1
    1e8a:	68 f0       	brcs	.+26     	; 0x1ea6 <_Z15endGameGetInputv+0x48>
	else if ((x > NEXT_X1) && (x < NEXT_X2) && (y > BUTTONS_Y1) && (y < BUTTONS_Y2)) return 2;
    1e8c:	c2 5a       	subi	r28, 0xA2	; 162
    1e8e:	d1 09       	sbc	r29, r1
    1e90:	c4 39       	cpi	r28, 0x94	; 148
    1e92:	d1 05       	cpc	r29, r1
    1e94:	50 f4       	brcc	.+20     	; 0x1eaa <_Z15endGameGetInputv+0x4c>
    1e96:	87 39       	cpi	r24, 0x97	; 151
    1e98:	91 05       	cpc	r25, r1
    1e9a:	48 f0       	brcs	.+18     	; 0x1eae <_Z15endGameGetInputv+0x50>
    1e9c:	86 3e       	cpi	r24, 0xE6	; 230
    1e9e:	91 05       	cpc	r25, r1
    1ea0:	40 f0       	brcs	.+16     	; 0x1eb2 <_Z15endGameGetInputv+0x54>
	else return 0;
    1ea2:	80 e0       	ldi	r24, 0x00	; 0
    1ea4:	07 c0       	rjmp	.+14     	; 0x1eb4 <_Z15endGameGetInputv+0x56>
uint8_t endGameGetInput() {
	while(!Touched());
	uint16_t x = getX();
	uint16_t y = getY();
	
	if ((x > EXIT_X1) && (x < EXIT_X2) && (y > BUTTONS_Y1) && (y < BUTTONS_Y2)) return 1;
    1ea6:	81 e0       	ldi	r24, 0x01	; 1
    1ea8:	05 c0       	rjmp	.+10     	; 0x1eb4 <_Z15endGameGetInputv+0x56>
	else if ((x > NEXT_X1) && (x < NEXT_X2) && (y > BUTTONS_Y1) && (y < BUTTONS_Y2)) return 2;
	else return 0;
    1eaa:	80 e0       	ldi	r24, 0x00	; 0
    1eac:	03 c0       	rjmp	.+6      	; 0x1eb4 <_Z15endGameGetInputv+0x56>
    1eae:	80 e0       	ldi	r24, 0x00	; 0
    1eb0:	01 c0       	rjmp	.+2      	; 0x1eb4 <_Z15endGameGetInputv+0x56>
	while(!Touched());
	uint16_t x = getX();
	uint16_t y = getY();
	
	if ((x > EXIT_X1) && (x < EXIT_X2) && (y > BUTTONS_Y1) && (y < BUTTONS_Y2)) return 1;
	else if ((x > NEXT_X1) && (x < NEXT_X2) && (y > BUTTONS_Y1) && (y < BUTTONS_Y2)) return 2;
    1eb2:	82 e0       	ldi	r24, 0x02	; 2
	else return 0;
}
    1eb4:	df 91       	pop	r29
    1eb6:	cf 91       	pop	r28
    1eb8:	08 95       	ret

00001eba <_Z9startGamev>:

void startGame() {
    1eba:	0f 93       	push	r16
    1ebc:	1f 93       	push	r17
    1ebe:	cf 93       	push	r28
    1ec0:	df 93       	push	r29
	display.clrScr();
    1ec2:	80 e2       	ldi	r24, 0x20	; 32
    1ec4:	91 e0       	ldi	r25, 0x01	; 1
    1ec6:	0e 94 56 13 	call	0x26ac	; 0x26ac <_ZN4UTFT6clrScrEv>
	display.print("Tap to start", CENTER, 120);	
    1eca:	00 e0       	ldi	r16, 0x00	; 0
    1ecc:	10 e0       	ldi	r17, 0x00	; 0
    1ece:	28 e7       	ldi	r18, 0x78	; 120
    1ed0:	30 e0       	ldi	r19, 0x00	; 0
    1ed2:	4e e0       	ldi	r20, 0x0E	; 14
    1ed4:	57 e2       	ldi	r21, 0x27	; 39
    1ed6:	6c ea       	ldi	r22, 0xAC	; 172
    1ed8:	70 e0       	ldi	r23, 0x00	; 0
    1eda:	80 e2       	ldi	r24, 0x20	; 32
    1edc:	91 e0       	ldi	r25, 0x01	; 1
    1ede:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
    1ee2:	2f ef       	ldi	r18, 0xFF	; 255
    1ee4:	8f e7       	ldi	r24, 0x7F	; 127
    1ee6:	94 e0       	ldi	r25, 0x04	; 4
    1ee8:	21 50       	subi	r18, 0x01	; 1
    1eea:	80 40       	sbci	r24, 0x00	; 0
    1eec:	90 40       	sbci	r25, 0x00	; 0
    1eee:	e1 f7       	brne	.-8      	; 0x1ee8 <_Z9startGamev+0x2e>
    1ef0:	00 c0       	rjmp	.+0      	; 0x1ef2 <_Z9startGamev+0x38>
    1ef2:	00 00       	nop
	
	_delay_ms(200); //debounce cekanjem
	while(!Touched());
    1ef4:	0e 94 a9 09 	call	0x1352	; 0x1352 <_Z7Touchedv>
    1ef8:	88 23       	and	r24, r24
    1efa:	e1 f3       	breq	.-8      	; 0x1ef4 <_Z9startGamev+0x3a>
	uint16_t x = getX();
    1efc:	0e 94 af 09 	call	0x135e	; 0x135e <_Z4getXv>
    1f00:	ec 01       	movw	r28, r24
	uint16_t y = getY();
    1f02:	0e 94 e5 09 	call	0x13ca	; 0x13ca <_Z4getYv>
	srand(x + y);          // sluzi kao workaroun za vrijeme - generira random seed na temelju gdje smo dodirnuli
    1f06:	8c 0f       	add	r24, r28
    1f08:	9d 1f       	adc	r25, r29
    1f0a:	0e 94 95 1c 	call	0x392a	; 0x392a <srand>
}
    1f0e:	df 91       	pop	r29
    1f10:	cf 91       	pop	r28
    1f12:	1f 91       	pop	r17
    1f14:	0f 91       	pop	r16
    1f16:	08 95       	ret

00001f18 <_Z10memoryGamev>:

// glavni game loop
void memoryGame() {
    1f18:	cf 92       	push	r12
    1f1a:	ef 92       	push	r14
    1f1c:	ff 92       	push	r15
    1f1e:	0f 93       	push	r16
    1f20:	1f 93       	push	r17
    1f22:	cf 93       	push	r28
    1f24:	df 93       	push	r29
	uint16_t input;
	
	while(1) {
		if (state == 2) {
    1f26:	80 91 fd 00 	lds	r24, 0x00FD	; 0x8000fd <state>
    1f2a:	82 30       	cpi	r24, 0x02	; 2
    1f2c:	a1 f4       	brne	.+40     	; 0x1f56 <_Z10memoryGamev+0x3e>
			checkOpen();
    1f2e:	0e 94 9a 0c 	call	0x1934	; 0x1934 <_Z9checkOpenv>
			display.printNumI(moveCounter, 0, 80);
    1f32:	40 91 fb 00 	lds	r20, 0x00FB	; 0x8000fb <moveCounter>
    1f36:	50 e0       	ldi	r21, 0x00	; 0
    1f38:	60 e0       	ldi	r22, 0x00	; 0
    1f3a:	70 e0       	ldi	r23, 0x00	; 0
    1f3c:	68 94       	set
    1f3e:	cc 24       	eor	r12, r12
    1f40:	c5 f8       	bld	r12, 5
    1f42:	e1 2c       	mov	r14, r1
    1f44:	f1 2c       	mov	r15, r1
    1f46:	00 e5       	ldi	r16, 0x50	; 80
    1f48:	10 e0       	ldi	r17, 0x00	; 0
    1f4a:	20 e0       	ldi	r18, 0x00	; 0
    1f4c:	30 e0       	ldi	r19, 0x00	; 0
    1f4e:	80 e2       	ldi	r24, 0x20	; 32
    1f50:	91 e0       	ldi	r25, 0x01	; 1
    1f52:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
		}
		if (matched == 8) {
    1f56:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <matched>
    1f5a:	88 30       	cpi	r24, 0x08	; 8
    1f5c:	69 f4       	brne	.+26     	; 0x1f78 <_Z10memoryGamev+0x60>
			memoryEndGame();
    1f5e:	0e 94 dc 0d 	call	0x1bb8	; 0x1bb8 <_Z13memoryEndGamev>
			
			do {
				input = endGameGetInput();
    1f62:	0e 94 2f 0f 	call	0x1e5e	; 0x1e5e <_Z15endGameGetInputv>
    1f66:	90 e0       	ldi	r25, 0x00	; 0
				if (input == 1) {
    1f68:	81 30       	cpi	r24, 0x01	; 1
    1f6a:	91 05       	cpc	r25, r1
    1f6c:	19 f4       	brne	.+6      	; 0x1f74 <_Z10memoryGamev+0x5c>
					menu = 0;
    1f6e:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <__data_end>
					return;
    1f72:	64 c0       	rjmp	.+200    	; 0x203c <_Z10memoryGamev+0x124>
				}
			} while (input == 0);
    1f74:	89 2b       	or	r24, r25
    1f76:	a9 f3       	breq	.-22     	; 0x1f62 <_Z10memoryGamev+0x4a>
		}
		
		input = memoryGetInput();
    1f78:	0e 94 ce 0a 	call	0x159c	; 0x159c <_Z14memoryGetInputv>
    1f7c:	18 2f       	mov	r17, r24
    1f7e:	90 e0       	ldi	r25, 0x00	; 0
		
		if (!started) { //inicijalizira stanje igre pri prvom pokretanju			
    1f80:	20 91 f7 00 	lds	r18, 0x00F7	; 0x8000f7 <started>
    1f84:	21 11       	cpse	r18, r1
    1f86:	08 c0       	rjmp	.+16     	; 0x1f98 <_Z10memoryGamev+0x80>
			startGame();
    1f88:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <_Z9startGamev>
			memoryInit();
    1f8c:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <_Z10memoryInitv>
			started = 1;
    1f90:	81 e0       	ldi	r24, 0x01	; 1
    1f92:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <started>
    1f96:	48 c0       	rjmp	.+144    	; 0x2028 <_Z10memoryGamev+0x110>
		} else if (input == 20) {
    1f98:	84 31       	cpi	r24, 0x14	; 20
    1f9a:	91 05       	cpc	r25, r1
    1f9c:	39 f4       	brne	.+14     	; 0x1fac <_Z10memoryGamev+0x94>
			menu = 0;
    1f9e:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <__data_end>
			started = 0;
    1fa2:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <started>
			memoryResetVariables();
    1fa6:	0e 94 bd 0d 	call	0x1b7a	; 0x1b7a <_Z20memoryResetVariablesv>
			return;
    1faa:	48 c0       	rjmp	.+144    	; 0x203c <_Z10memoryGamev+0x124>
		} else if (input > 0 && started && !(control[input-1])) { // ako igra vec traje, pritisnut je ekran i karta nije vec pogodjena, otvori kartu
    1fac:	00 97       	sbiw	r24, 0x00	; 0
    1fae:	e1 f1       	breq	.+120    	; 0x2028 <_Z10memoryGamev+0x110>
    1fb0:	22 23       	and	r18, r18
    1fb2:	d1 f1       	breq	.+116    	; 0x2028 <_Z10memoryGamev+0x110>
    1fb4:	ec 01       	movw	r28, r24
    1fb6:	21 97       	sbiw	r28, 0x01	; 1
    1fb8:	fe 01       	movw	r30, r28
    1fba:	e0 50       	subi	r30, 0x00	; 0
    1fbc:	ff 4f       	sbci	r31, 0xFF	; 255
    1fbe:	80 81       	ld	r24, Z
    1fc0:	81 11       	cpse	r24, r1
    1fc2:	32 c0       	rjmp	.+100    	; 0x2028 <_Z10memoryGamev+0x110>
			revealCard(input);
    1fc4:	81 2f       	mov	r24, r17
    1fc6:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <_Z10revealCardh>
			
			if (state == 0 && control[input-1] == 0) { // nisu trenutno otvorene karte, ne smijemo otvarati vec otvorenu kartu
    1fca:	80 91 fd 00 	lds	r24, 0x00FD	; 0x8000fd <state>
    1fce:	81 11       	cpse	r24, r1
    1fd0:	12 c0       	rjmp	.+36     	; 0x1ff6 <_Z10memoryGamev+0xde>
    1fd2:	c0 50       	subi	r28, 0x00	; 0
    1fd4:	df 4f       	sbci	r29, 0xFF	; 255
    1fd6:	98 81       	ld	r25, Y
    1fd8:	91 11       	cpse	r25, r1
    1fda:	0d c0       	rjmp	.+26     	; 0x1ff6 <_Z10memoryGamev+0xde>
				c1 = input;
    1fdc:	10 93 ff 00 	sts	0x00FF, r17	; 0x8000ff <c1>
			    if (control[c1-1] == 0) state = 1;  // promjena stanja jedino ako je u c1 spremljena karta koja nije pogodjena
    1fe0:	e1 2f       	mov	r30, r17
    1fe2:	f0 e0       	ldi	r31, 0x00	; 0
    1fe4:	e1 50       	subi	r30, 0x01	; 1
    1fe6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe8:	80 81       	ld	r24, Z
    1fea:	81 11       	cpse	r24, r1
    1fec:	1d c0       	rjmp	.+58     	; 0x2028 <_Z10memoryGamev+0x110>
    1fee:	81 e0       	ldi	r24, 0x01	; 1
    1ff0:	80 93 fd 00 	sts	0x00FD, r24	; 0x8000fd <state>
    1ff4:	19 c0       	rjmp	.+50     	; 0x2028 <_Z10memoryGamev+0x110>
			} else if (state == 1 && control[c1-1] == 0) { // otvorena jedna karta, ne smijemo otvarati vec otvorenu kartu
    1ff6:	81 30       	cpi	r24, 0x01	; 1
    1ff8:	b9 f4       	brne	.+46     	; 0x2028 <_Z10memoryGamev+0x110>
    1ffa:	80 91 ff 00 	lds	r24, 0x00FF	; 0x8000ff <c1>
    1ffe:	e8 2f       	mov	r30, r24
    2000:	f0 e0       	ldi	r31, 0x00	; 0
    2002:	e1 50       	subi	r30, 0x01	; 1
    2004:	ff 4f       	sbci	r31, 0xFF	; 255
    2006:	90 81       	ld	r25, Z
    2008:	91 11       	cpse	r25, r1
    200a:	0e c0       	rjmp	.+28     	; 0x2028 <_Z10memoryGamev+0x110>
				c2 = input;
    200c:	10 93 fe 00 	sts	0x00FE, r17	; 0x8000fe <c2>
				if (c1 != c2 && control[c2-1] == 0) state = 2; // promjena stanja jedino ako je u c1 spremljena karta koja nije pogodjena i c1 i c2 su razliciti
    2010:	18 17       	cp	r17, r24
    2012:	51 f0       	breq	.+20     	; 0x2028 <_Z10memoryGamev+0x110>
    2014:	e1 2f       	mov	r30, r17
    2016:	f0 e0       	ldi	r31, 0x00	; 0
    2018:	e1 50       	subi	r30, 0x01	; 1
    201a:	ff 4f       	sbci	r31, 0xFF	; 255
    201c:	80 81       	ld	r24, Z
    201e:	81 11       	cpse	r24, r1
    2020:	03 c0       	rjmp	.+6      	; 0x2028 <_Z10memoryGamev+0x110>
    2022:	82 e0       	ldi	r24, 0x02	; 2
    2024:	80 93 fd 00 	sts	0x00FD, r24	; 0x8000fd <state>
    2028:	2f ef       	ldi	r18, 0xFF	; 255
    202a:	8f e3       	ldi	r24, 0x3F	; 63
    202c:	9b e0       	ldi	r25, 0x0B	; 11
    202e:	21 50       	subi	r18, 0x01	; 1
    2030:	80 40       	sbci	r24, 0x00	; 0
    2032:	90 40       	sbci	r25, 0x00	; 0
    2034:	e1 f7       	brne	.-8      	; 0x202e <_Z10memoryGamev+0x116>
    2036:	00 c0       	rjmp	.+0      	; 0x2038 <_Z10memoryGamev+0x120>
    2038:	00 00       	nop
    203a:	75 cf       	rjmp	.-278    	; 0x1f26 <_Z10memoryGamev+0xe>
			}
		}			 
		_delay_ms(500);
	}
}
    203c:	df 91       	pop	r29
    203e:	cf 91       	pop	r28
    2040:	1f 91       	pop	r17
    2042:	0f 91       	pop	r16
    2044:	ff 90       	pop	r15
    2046:	ef 90       	pop	r14
    2048:	cf 90       	pop	r12
    204a:	08 95       	ret

0000204c <_Z9printMenuv>:

void printMenu() {
    204c:	cf 92       	push	r12
    204e:	ef 92       	push	r14
    2050:	ff 92       	push	r15
    2052:	0f 93       	push	r16
    2054:	1f 93       	push	r17
    2056:	cf 93       	push	r28
    2058:	df 93       	push	r29
	display.clrScr();
    205a:	80 e2       	ldi	r24, 0x20	; 32
    205c:	91 e0       	ldi	r25, 0x01	; 1
    205e:	0e 94 56 13 	call	0x26ac	; 0x26ac <_ZN4UTFT6clrScrEv>
	
	display.print("Memory", CENTER, 10);
    2062:	00 e0       	ldi	r16, 0x00	; 0
    2064:	10 e0       	ldi	r17, 0x00	; 0
    2066:	2a e0       	ldi	r18, 0x0A	; 10
    2068:	30 e0       	ldi	r19, 0x00	; 0
    206a:	4e e0       	ldi	r20, 0x0E	; 14
    206c:	57 e2       	ldi	r21, 0x27	; 39
    206e:	69 eb       	ldi	r22, 0xB9	; 185
    2070:	70 e0       	ldi	r23, 0x00	; 0
    2072:	80 e2       	ldi	r24, 0x20	; 32
    2074:	91 e0       	ldi	r25, 0x01	; 1
    2076:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	
	display.print("Best moves: ", 40, 40); 
    207a:	28 e2       	ldi	r18, 0x28	; 40
    207c:	30 e0       	ldi	r19, 0x00	; 0
    207e:	48 e2       	ldi	r20, 0x28	; 40
    2080:	50 e0       	ldi	r21, 0x00	; 0
    2082:	60 ec       	ldi	r22, 0xC0	; 192
    2084:	70 e0       	ldi	r23, 0x00	; 0
    2086:	80 e2       	ldi	r24, 0x20	; 32
    2088:	91 e0       	ldi	r25, 0x01	; 1
    208a:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	if (bestMoves < 255) display.printNumI(bestMoves, 240, 40); // prikazi samo ako postoji high score
    208e:	40 91 67 00 	lds	r20, 0x0067	; 0x800067 <bestMoves>
    2092:	4f 3f       	cpi	r20, 0xFF	; 255
    2094:	81 f0       	breq	.+32     	; 0x20b6 <_Z9printMenuv+0x6a>
    2096:	50 e0       	ldi	r21, 0x00	; 0
    2098:	60 e0       	ldi	r22, 0x00	; 0
    209a:	70 e0       	ldi	r23, 0x00	; 0
    209c:	68 94       	set
    209e:	cc 24       	eor	r12, r12
    20a0:	c5 f8       	bld	r12, 5
    20a2:	e1 2c       	mov	r14, r1
    20a4:	f1 2c       	mov	r15, r1
    20a6:	08 e2       	ldi	r16, 0x28	; 40
    20a8:	10 e0       	ldi	r17, 0x00	; 0
    20aa:	20 ef       	ldi	r18, 0xF0	; 240
    20ac:	30 e0       	ldi	r19, 0x00	; 0
    20ae:	80 e2       	ldi	r24, 0x20	; 32
    20b0:	91 e0       	ldi	r25, 0x01	; 1
    20b2:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
					
	display.print("Best time:", 20, 60);
    20b6:	00 e0       	ldi	r16, 0x00	; 0
    20b8:	10 e0       	ldi	r17, 0x00	; 0
    20ba:	2c e3       	ldi	r18, 0x3C	; 60
    20bc:	30 e0       	ldi	r19, 0x00	; 0
    20be:	44 e1       	ldi	r20, 0x14	; 20
    20c0:	50 e0       	ldi	r21, 0x00	; 0
    20c2:	67 e9       	ldi	r22, 0x97	; 151
    20c4:	70 e0       	ldi	r23, 0x00	; 0
    20c6:	80 e2       	ldi	r24, 0x20	; 32
    20c8:	91 e0       	ldi	r25, 0x01	; 1
    20ca:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	if (bestTime[0] < 255 && bestTime[1] < 255 && bestTime[2] < 255) {
    20ce:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <bestTime>
    20d2:	4f 3f       	cpi	r20, 0xFF	; 255
    20d4:	09 f4       	brne	.+2      	; 0x20d8 <_Z9printMenuv+0x8c>
    20d6:	4c c0       	rjmp	.+152    	; 0x2170 <_Z9printMenuv+0x124>
    20d8:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <bestTime+0x1>
    20dc:	8f 3f       	cpi	r24, 0xFF	; 255
    20de:	09 f4       	brne	.+2      	; 0x20e2 <_Z9printMenuv+0x96>
    20e0:	47 c0       	rjmp	.+142    	; 0x2170 <_Z9printMenuv+0x124>
    20e2:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <bestTime+0x2>
    20e6:	8f 3f       	cpi	r24, 0xFF	; 255
    20e8:	09 f4       	brne	.+2      	; 0x20ec <_Z9printMenuv+0xa0>
    20ea:	42 c0       	rjmp	.+132    	; 0x2170 <_Z9printMenuv+0x124>
		display.printNumI(bestTime[0], 180, 60);
    20ec:	50 e0       	ldi	r21, 0x00	; 0
    20ee:	60 e0       	ldi	r22, 0x00	; 0
    20f0:	70 e0       	ldi	r23, 0x00	; 0
    20f2:	68 94       	set
    20f4:	cc 24       	eor	r12, r12
    20f6:	c5 f8       	bld	r12, 5
    20f8:	e1 2c       	mov	r14, r1
    20fa:	f1 2c       	mov	r15, r1
    20fc:	0c e3       	ldi	r16, 0x3C	; 60
    20fe:	10 e0       	ldi	r17, 0x00	; 0
    2100:	24 eb       	ldi	r18, 0xB4	; 180
    2102:	30 e0       	ldi	r19, 0x00	; 0
    2104:	80 e2       	ldi	r24, 0x20	; 32
    2106:	91 e0       	ldi	r25, 0x01	; 1
    2108:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
		display.print(":", 210, 60);
    210c:	00 e0       	ldi	r16, 0x00	; 0
    210e:	10 e0       	ldi	r17, 0x00	; 0
    2110:	2c e3       	ldi	r18, 0x3C	; 60
    2112:	30 e0       	ldi	r19, 0x00	; 0
    2114:	42 ed       	ldi	r20, 0xD2	; 210
    2116:	50 e0       	ldi	r21, 0x00	; 0
    2118:	6c e7       	ldi	r22, 0x7C	; 124
    211a:	70 e0       	ldi	r23, 0x00	; 0
    211c:	80 e2       	ldi	r24, 0x20	; 32
    211e:	91 e0       	ldi	r25, 0x01	; 1
    2120:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
		display.printNumI(bestTime[1], 220, 60);
    2124:	c4 e6       	ldi	r28, 0x64	; 100
    2126:	d0 e0       	ldi	r29, 0x00	; 0
    2128:	49 81       	ldd	r20, Y+1	; 0x01
    212a:	50 e0       	ldi	r21, 0x00	; 0
    212c:	60 e0       	ldi	r22, 0x00	; 0
    212e:	70 e0       	ldi	r23, 0x00	; 0
    2130:	0c e3       	ldi	r16, 0x3C	; 60
    2132:	10 e0       	ldi	r17, 0x00	; 0
    2134:	2c ed       	ldi	r18, 0xDC	; 220
    2136:	30 e0       	ldi	r19, 0x00	; 0
    2138:	80 e2       	ldi	r24, 0x20	; 32
    213a:	91 e0       	ldi	r25, 0x01	; 1
    213c:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
		display.print(":", 250, 60);
    2140:	00 e0       	ldi	r16, 0x00	; 0
    2142:	10 e0       	ldi	r17, 0x00	; 0
    2144:	2c e3       	ldi	r18, 0x3C	; 60
    2146:	30 e0       	ldi	r19, 0x00	; 0
    2148:	4a ef       	ldi	r20, 0xFA	; 250
    214a:	50 e0       	ldi	r21, 0x00	; 0
    214c:	6c e7       	ldi	r22, 0x7C	; 124
    214e:	70 e0       	ldi	r23, 0x00	; 0
    2150:	80 e2       	ldi	r24, 0x20	; 32
    2152:	91 e0       	ldi	r25, 0x01	; 1
    2154:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
		display.printNumI(bestTime[2], 260, 60);
    2158:	4a 81       	ldd	r20, Y+2	; 0x02
    215a:	50 e0       	ldi	r21, 0x00	; 0
    215c:	60 e0       	ldi	r22, 0x00	; 0
    215e:	70 e0       	ldi	r23, 0x00	; 0
    2160:	0c e3       	ldi	r16, 0x3C	; 60
    2162:	10 e0       	ldi	r17, 0x00	; 0
    2164:	24 e0       	ldi	r18, 0x04	; 4
    2166:	31 e0       	ldi	r19, 0x01	; 1
    2168:	80 e2       	ldi	r24, 0x20	; 32
    216a:	91 e0       	ldi	r25, 0x01	; 1
    216c:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
	}		
	
	display.print("Longest streak:", 10 , 80);
    2170:	00 e0       	ldi	r16, 0x00	; 0
    2172:	10 e0       	ldi	r17, 0x00	; 0
    2174:	20 e5       	ldi	r18, 0x50	; 80
    2176:	30 e0       	ldi	r19, 0x00	; 0
    2178:	4a e0       	ldi	r20, 0x0A	; 10
    217a:	50 e0       	ldi	r21, 0x00	; 0
    217c:	6d ec       	ldi	r22, 0xCD	; 205
    217e:	70 e0       	ldi	r23, 0x00	; 0
    2180:	80 e2       	ldi	r24, 0x20	; 32
    2182:	91 e0       	ldi	r25, 0x01	; 1
    2184:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	display.printNumI(roundStreak, 250, 80);
    2188:	40 91 f5 00 	lds	r20, 0x00F5	; 0x8000f5 <roundStreak>
    218c:	50 e0       	ldi	r21, 0x00	; 0
    218e:	60 e0       	ldi	r22, 0x00	; 0
    2190:	70 e0       	ldi	r23, 0x00	; 0
    2192:	68 94       	set
    2194:	cc 24       	eor	r12, r12
    2196:	c5 f8       	bld	r12, 5
    2198:	e1 2c       	mov	r14, r1
    219a:	f1 2c       	mov	r15, r1
    219c:	00 e5       	ldi	r16, 0x50	; 80
    219e:	10 e0       	ldi	r17, 0x00	; 0
    21a0:	2a ef       	ldi	r18, 0xFA	; 250
    21a2:	30 e0       	ldi	r19, 0x00	; 0
    21a4:	80 e2       	ldi	r24, 0x20	; 32
    21a6:	91 e0       	ldi	r25, 0x01	; 1
    21a8:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <_ZN4UTFT9printNumIEliiic>
	
	display.setFont(SmallFont);
    21ac:	66 e7       	ldi	r22, 0x76	; 118
    21ae:	7c e0       	ldi	r23, 0x0C	; 12
    21b0:	80 e2       	ldi	r24, 0x20	; 32
    21b2:	91 e0       	ldi	r25, 0x01	; 1
    21b4:	0e 94 e2 18 	call	0x31c4	; 0x31c4 <_ZN4UTFT7setFontEPKh>
	
    display.drawRect(CASUAL_X1, BUTTONS_Y1, CASUAL_X2, BUTTONS_Y2);
    21b8:	06 ee       	ldi	r16, 0xE6	; 230
    21ba:	10 e0       	ldi	r17, 0x00	; 0
    21bc:	24 e6       	ldi	r18, 0x64	; 100
    21be:	30 e0       	ldi	r19, 0x00	; 0
    21c0:	46 e9       	ldi	r20, 0x96	; 150
    21c2:	50 e0       	ldi	r21, 0x00	; 0
    21c4:	6a e0       	ldi	r22, 0x0A	; 10
    21c6:	70 e0       	ldi	r23, 0x00	; 0
    21c8:	80 e2       	ldi	r24, 0x20	; 32
    21ca:	91 e0       	ldi	r25, 0x01	; 1
    21cc:	0e 94 4e 14 	call	0x289c	; 0x289c <_ZN4UTFT8drawRectEiiii>
	display.print("CASUAL", CASUAL_TEXT_X, BUTTONS_TEXT_Y);
    21d0:	00 e0       	ldi	r16, 0x00	; 0
    21d2:	10 e0       	ldi	r17, 0x00	; 0
    21d4:	24 eb       	ldi	r18, 0xB4	; 180
    21d6:	30 e0       	ldi	r19, 0x00	; 0
    21d8:	43 e2       	ldi	r20, 0x23	; 35
    21da:	50 e0       	ldi	r21, 0x00	; 0
    21dc:	6d ed       	ldi	r22, 0xDD	; 221
    21de:	70 e0       	ldi	r23, 0x00	; 0
    21e0:	80 e2       	ldi	r24, 0x20	; 32
    21e2:	91 e0       	ldi	r25, 0x01	; 1
    21e4:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	
	display.drawRect(CHALLENGE_X1, BUTTONS_Y1, CHALLENGE_X2, BUTTONS_Y2);
    21e8:	06 ee       	ldi	r16, 0xE6	; 230
    21ea:	10 e0       	ldi	r17, 0x00	; 0
    21ec:	28 ec       	ldi	r18, 0xC8	; 200
    21ee:	30 e0       	ldi	r19, 0x00	; 0
    21f0:	46 e9       	ldi	r20, 0x96	; 150
    21f2:	50 e0       	ldi	r21, 0x00	; 0
    21f4:	6e e6       	ldi	r22, 0x6E	; 110
    21f6:	70 e0       	ldi	r23, 0x00	; 0
    21f8:	80 e2       	ldi	r24, 0x20	; 32
    21fa:	91 e0       	ldi	r25, 0x01	; 1
    21fc:	0e 94 4e 14 	call	0x289c	; 0x289c <_ZN4UTFT8drawRectEiiii>
	display.print("CHALLENGE", CHALLENGE_TEXT_X, BUTTONS_TEXT_Y);
    2200:	00 e0       	ldi	r16, 0x00	; 0
    2202:	10 e0       	ldi	r17, 0x00	; 0
    2204:	24 eb       	ldi	r18, 0xB4	; 180
    2206:	30 e0       	ldi	r19, 0x00	; 0
    2208:	48 e7       	ldi	r20, 0x78	; 120
    220a:	50 e0       	ldi	r21, 0x00	; 0
    220c:	64 ee       	ldi	r22, 0xE4	; 228
    220e:	70 e0       	ldi	r23, 0x00	; 0
    2210:	80 e2       	ldi	r24, 0x20	; 32
    2212:	91 e0       	ldi	r25, 0x01	; 1
    2214:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	
	display.drawRect(RESET_X1, BUTTONS_Y1, RESET_X2, BUTTONS_Y2);
    2218:	06 ee       	ldi	r16, 0xE6	; 230
    221a:	10 e0       	ldi	r17, 0x00	; 0
    221c:	26 e3       	ldi	r18, 0x36	; 54
    221e:	31 e0       	ldi	r19, 0x01	; 1
    2220:	46 e9       	ldi	r20, 0x96	; 150
    2222:	50 e0       	ldi	r21, 0x00	; 0
    2224:	6c ed       	ldi	r22, 0xDC	; 220
    2226:	70 e0       	ldi	r23, 0x00	; 0
    2228:	80 e2       	ldi	r24, 0x20	; 32
    222a:	91 e0       	ldi	r25, 0x01	; 1
    222c:	0e 94 4e 14 	call	0x289c	; 0x289c <_ZN4UTFT8drawRectEiiii>
	display.print("RESET", RESET_TEXT_X, BUTTONS_TEXT_Y);	
    2230:	00 e0       	ldi	r16, 0x00	; 0
    2232:	10 e0       	ldi	r17, 0x00	; 0
    2234:	24 eb       	ldi	r18, 0xB4	; 180
    2236:	30 e0       	ldi	r19, 0x00	; 0
    2238:	45 ef       	ldi	r20, 0xF5	; 245
    223a:	50 e0       	ldi	r21, 0x00	; 0
    223c:	6e ee       	ldi	r22, 0xEE	; 238
    223e:	70 e0       	ldi	r23, 0x00	; 0
    2240:	80 e2       	ldi	r24, 0x20	; 32
    2242:	91 e0       	ldi	r25, 0x01	; 1
    2244:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
	
	display.setFont(BigFont);
    2248:	62 e9       	ldi	r22, 0x92	; 146
    224a:	70 e0       	ldi	r23, 0x00	; 0
    224c:	80 e2       	ldi	r24, 0x20	; 32
    224e:	91 e0       	ldi	r25, 0x01	; 1
    2250:	0e 94 e2 18 	call	0x31c4	; 0x31c4 <_ZN4UTFT7setFontEPKh>
}
    2254:	df 91       	pop	r29
    2256:	cf 91       	pop	r28
    2258:	1f 91       	pop	r17
    225a:	0f 91       	pop	r16
    225c:	ff 90       	pop	r15
    225e:	ef 90       	pop	r14
    2260:	cf 90       	pop	r12
    2262:	08 95       	ret

00002264 <main>:
*/

int main(void) {
	
	//T-IRQ spojen na PINB3 kao ulazni te je nizak samo pri dodiru, inace visok
	DDRB &= ~_BV(T_IRQ);
    2264:	87 b3       	in	r24, 0x17	; 23
    2266:	87 7f       	andi	r24, 0xF7	; 247
    2268:	87 bb       	out	0x17, r24	; 23
	
	// timer za brojanje vremena
	TCCR0 = _BV(WGM01) | _BV(CS02) | _BV(CS00);
    226a:	8d e0       	ldi	r24, 0x0D	; 13
    226c:	83 bf       	out	0x33, r24	; 51
	OCR0 = 72;
    226e:	88 e4       	ldi	r24, 0x48	; 72
    2270:	8c bf       	out	0x3c, r24	; 60
	TIMSK = _BV(OCIE0);
    2272:	82 e0       	ldi	r24, 0x02	; 2
    2274:	89 bf       	out	0x39, r24	; 57
	sei();
    2276:	78 94       	sei

	SPI_Init();
    2278:	0e 94 75 11 	call	0x22ea	; 0x22ea <SPI_Init>
	SS_Enable;
    227c:	88 b3       	in	r24, 0x18	; 24
    227e:	8f 7e       	andi	r24, 0xEF	; 239
    2280:	88 bb       	out	0x18, r24	; 24
	
	display.InitLCD(LANDSCAPE);
    2282:	61 e0       	ldi	r22, 0x01	; 1
    2284:	80 e2       	ldi	r24, 0x20	; 32
    2286:	91 e0       	ldi	r25, 0x01	; 1
    2288:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <_ZN4UTFT7InitLCDEh>
	display.clrScr();
    228c:	80 e2       	ldi	r24, 0x20	; 32
    228e:	91 e0       	ldi	r25, 0x01	; 1
    2290:	0e 94 56 13 	call	0x26ac	; 0x26ac <_ZN4UTFT6clrScrEv>
	display.setFont(BigFont);
    2294:	62 e9       	ldi	r22, 0x92	; 146
    2296:	70 e0       	ldi	r23, 0x00	; 0
    2298:	80 e2       	ldi	r24, 0x20	; 32
    229a:	91 e0       	ldi	r25, 0x01	; 1
    229c:	0e 94 e2 18 	call	0x31c4	; 0x31c4 <_ZN4UTFT7setFontEPKh>
	
	while (1) {		
		if (menu == 0) {
    22a0:	80 91 f4 00 	lds	r24, 0x00F4	; 0x8000f4 <__data_end>
    22a4:	81 11       	cpse	r24, r1
    22a6:	15 c0       	rjmp	.+42     	; 0x22d2 <main+0x6e>
			roundCounter = 0;                                     //resetira broj rundi ako smo na main menu
    22a8:	10 92 f6 00 	sts	0x00F6, r1	; 0x8000f6 <roundCounter>
			printMenu();
    22ac:	0e 94 26 10 	call	0x204c	; 0x204c <_Z9printMenuv>
    22b0:	2f ef       	ldi	r18, 0xFF	; 255
    22b2:	8f e3       	ldi	r24, 0x3F	; 63
    22b4:	92 e0       	ldi	r25, 0x02	; 2
    22b6:	21 50       	subi	r18, 0x01	; 1
    22b8:	80 40       	sbci	r24, 0x00	; 0
    22ba:	90 40       	sbci	r25, 0x00	; 0
    22bc:	e1 f7       	brne	.-8      	; 0x22b6 <main+0x52>
    22be:	00 c0       	rjmp	.+0      	; 0x22c0 <main+0x5c>
    22c0:	00 00       	nop
			_delay_ms(100);
			while(!Touched());                      // TODO remove when game modes are implemented
    22c2:	0e 94 a9 09 	call	0x1352	; 0x1352 <_Z7Touchedv>
    22c6:	88 23       	and	r24, r24
    22c8:	e1 f3       	breq	.-8      	; 0x22c2 <main+0x5e>
			//menuGetInput();                       // TODO normal game mode, challenge game mode or reset highscores
			menu = 1;
    22ca:	81 e0       	ldi	r24, 0x01	; 1
    22cc:	80 93 f4 00 	sts	0x00F4, r24	; 0x8000f4 <__data_end>
    22d0:	e7 cf       	rjmp	.-50     	; 0x22a0 <main+0x3c>
		} else if (menu == 1) {
    22d2:	88 23       	and	r24, r24
    22d4:	29 f3       	breq	.-54     	; 0x22a0 <main+0x3c>
			memoryGame();
    22d6:	0e 94 8c 0f 	call	0x1f18	; 0x1f18 <_Z10memoryGamev>
    22da:	e2 cf       	rjmp	.-60     	; 0x22a0 <main+0x3c>

000022dc <_GLOBAL__sub_I_display>:
		}
	}
}
    22dc:	6f ef       	ldi	r22, 0xFF	; 255
    22de:	7f ef       	ldi	r23, 0xFF	; 255
    22e0:	81 e0       	ldi	r24, 0x01	; 1
    22e2:	90 e0       	ldi	r25, 0x00	; 0
    22e4:	0e 94 9f 09 	call	0x133e	; 0x133e <_Z41__static_initialization_and_destruction_0ii>
    22e8:	08 95       	ret

000022ea <SPI_Init>:
#include "SPI_Master_H_file.h"				/* Include SPI Master header file */


void SPI_Init()								/* SPI Initialize function */
{
	DDRB |= (1<<MOSI)|(1<<SCK)|(1<<SS);		/* Make MOSI, SCK, 0th pin direction as output pins */
    22ea:	87 b3       	in	r24, 0x17	; 23
    22ec:	80 6b       	ori	r24, 0xB0	; 176
    22ee:	87 bb       	out	0x17, r24	; 23
	DDRB &= ~(1<<MISO);						/* Make MISO pin as input pin */
    22f0:	87 b3       	in	r24, 0x17	; 23
    22f2:	8f 7b       	andi	r24, 0xBF	; 191
    22f4:	87 bb       	out	0x17, r24	; 23
	PORTB |= (1<<SS);						/* Disable slave initially by making high on SS pin */
    22f6:	88 b3       	in	r24, 0x18	; 24
    22f8:	80 61       	ori	r24, 0x10	; 16
    22fa:	88 bb       	out	0x18, r24	; 24
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);	/* Enable SPI, Enable in master mode, with Fosc/16 SCK frequency */
    22fc:	81 e5       	ldi	r24, 0x51	; 81
    22fe:	8d b9       	out	0x0d, r24	; 13
	SPSR &= ~(1<<SPI2X);					/* Disable speed doubler */
    2300:	8e b1       	in	r24, 0x0e	; 14
    2302:	8e 7f       	andi	r24, 0xFE	; 254
    2304:	8e b9       	out	0x0e, r24	; 14
    2306:	08 95       	ret

00002308 <SPI_Write>:
}

void SPI_Write(char data)					/* SPI write data function */
{
	char flush_buffer;
	SPDR = data;							/* Write data to SPI data register */
    2308:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));				/* Wait till transmission complete */
    230a:	77 9b       	sbis	0x0e, 7	; 14
    230c:	fe cf       	rjmp	.-4      	; 0x230a <SPI_Write+0x2>
	flush_buffer = SPDR;					/* Flush received data */
    230e:	8f b1       	in	r24, 0x0f	; 15
    2310:	08 95       	ret

00002312 <SPI_Read>:
/* Note: SPIF flag is cleared by first reading SPSR (with SPIF set) and then accessing SPDR hence flush buffer used here to access SPDR after SPSR read */
}

char SPI_Read()								/* SPI read data function */
{
	SPDR = 0xFF;
    2312:	8f ef       	ldi	r24, 0xFF	; 255
    2314:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));				/* Wait till reception complete */
    2316:	77 9b       	sbis	0x0e, 7	; 14
    2318:	fe cf       	rjmp	.-4      	; 0x2316 <SPI_Read+0x4>
	return(SPDR);							/* return received data */
    231a:	8f b1       	in	r24, 0x0f	; 15
}
    231c:	08 95       	ret

0000231e <SSD1289_init>:



void SSD1289_init()
{	
	DATA_PORT_LOW_DDR = 0xff;
    231e:	8f ef       	ldi	r24, 0xFF	; 255
    2320:	81 bb       	out	0x11, r24	; 17
	DATA_PORT_HIGH_DDR = 0xff;
    2322:	8a bb       	out	0x1a, r24	; 26
			
	RS_PORT_DDR |= _BV( RS_PIN);
    2324:	84 b3       	in	r24, 0x14	; 20
    2326:	80 68       	ori	r24, 0x80	; 128
    2328:	84 bb       	out	0x14, r24	; 20
				
	WR_PORT_DDR |= _BV(WR_PIN);
    232a:	84 b3       	in	r24, 0x14	; 20
    232c:	80 64       	ori	r24, 0x40	; 64
    232e:	84 bb       	out	0x14, r24	; 20

	CS_PORT_DDR |= _BV(CS_PIN);
    2330:	84 b3       	in	r24, 0x14	; 20
    2332:	81 60       	ori	r24, 0x01	; 1
    2334:	84 bb       	out	0x14, r24	; 20
		
	RD_PORT_DDR |= _BV(RD_PIN);
    2336:	87 b3       	in	r24, 0x17	; 23
    2338:	81 60       	ori	r24, 0x01	; 1
    233a:	87 bb       	out	0x17, r24	; 23
	RD_PORT |= _BV(RD_PIN);
    233c:	88 b3       	in	r24, 0x18	; 24
    233e:	81 60       	ori	r24, 0x01	; 1
    2340:	88 bb       	out	0x18, r24	; 24
		
	RESET_PORT_DDR |= _BV(RESET_PIN);
    2342:	84 b3       	in	r24, 0x14	; 20
    2344:	82 60       	ori	r24, 0x02	; 2
    2346:	84 bb       	out	0x14, r24	; 20
		
	BACK_LIGHT_PORT |= _BV(BACK_LIGHT_PIN);
    2348:	88 b3       	in	r24, 0x18	; 24
    234a:	82 60       	ori	r24, 0x02	; 2
    234c:	88 bb       	out	0x18, r24	; 24
	
	BACK_LIGHT_DDR |= _BV(BACK_LIGHT_PIN);			
    234e:	87 b3       	in	r24, 0x17	; 23
    2350:	82 60       	ori	r24, 0x02	; 2
    2352:	87 bb       	out	0x17, r24	; 23
	
	sbi(RESET_PORT, RESET_PIN);
    2354:	85 b3       	in	r24, 0x15	; 21
    2356:	82 60       	ori	r24, 0x02	; 2
    2358:	85 bb       	out	0x15, r24	; 21
    235a:	8f ef       	ldi	r24, 0xFF	; 255
    235c:	93 e2       	ldi	r25, 0x23	; 35
    235e:	01 97       	sbiw	r24, 0x01	; 1
    2360:	f1 f7       	brne	.-4      	; 0x235e <SSD1289_init+0x40>
    2362:	00 c0       	rjmp	.+0      	; 0x2364 <SSD1289_init+0x46>
    2364:	00 00       	nop
	_delay_ms(5);
	cbi(RESET_PORT, RESET_PIN);
    2366:	85 b3       	in	r24, 0x15	; 21
    2368:	8d 7f       	andi	r24, 0xFD	; 253
    236a:	85 bb       	out	0x15, r24	; 21
    236c:	8f ef       	ldi	r24, 0xFF	; 255
    236e:	9b e6       	ldi	r25, 0x6B	; 107
    2370:	01 97       	sbiw	r24, 0x01	; 1
    2372:	f1 f7       	brne	.-4      	; 0x2370 <SSD1289_init+0x52>
    2374:	00 c0       	rjmp	.+0      	; 0x2376 <SSD1289_init+0x58>
    2376:	00 00       	nop
	_delay_ms(15);
	sbi(RESET_PORT, RESET_PIN);
    2378:	85 b3       	in	r24, 0x15	; 21
    237a:	82 60       	ori	r24, 0x02	; 2
    237c:	85 bb       	out	0x15, r24	; 21
    237e:	8f ef       	ldi	r24, 0xFF	; 255
    2380:	9b e6       	ldi	r25, 0x6B	; 107
    2382:	01 97       	sbiw	r24, 0x01	; 1
    2384:	f1 f7       	brne	.-4      	; 0x2382 <SSD1289_init+0x64>
    2386:	00 c0       	rjmp	.+0      	; 0x2388 <SSD1289_init+0x6a>
    2388:	00 00       	nop
	_delay_ms(15);

	cbi(CS_PORT, CS_PIN);
    238a:	85 b3       	in	r24, 0x15	; 21
    238c:	8e 7f       	andi	r24, 0xFE	; 254
    238e:	85 bb       	out	0x15, r24	; 21

	LCD_Write_COM_DATA(0x00,0x0001);
    2390:	61 e0       	ldi	r22, 0x01	; 1
    2392:	70 e0       	ldi	r23, 0x00	; 0
    2394:	80 e0       	ldi	r24, 0x00	; 0
    2396:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x03,0xA8A4);
    239a:	64 ea       	ldi	r22, 0xA4	; 164
    239c:	78 ea       	ldi	r23, 0xA8	; 168
    239e:	83 e0       	ldi	r24, 0x03	; 3
    23a0:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0C,0x0000);
    23a4:	60 e0       	ldi	r22, 0x00	; 0
    23a6:	70 e0       	ldi	r23, 0x00	; 0
    23a8:	8c e0       	ldi	r24, 0x0C	; 12
    23aa:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0D,0x080C);
    23ae:	6c e0       	ldi	r22, 0x0C	; 12
    23b0:	78 e0       	ldi	r23, 0x08	; 8
    23b2:	8d e0       	ldi	r24, 0x0D	; 13
    23b4:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0E,0x2B00);
    23b8:	60 e0       	ldi	r22, 0x00	; 0
    23ba:	7b e2       	ldi	r23, 0x2B	; 43
    23bc:	8e e0       	ldi	r24, 0x0E	; 14
    23be:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x1E,0x00B7);
    23c2:	67 eb       	ldi	r22, 0xB7	; 183
    23c4:	70 e0       	ldi	r23, 0x00	; 0
    23c6:	8e e1       	ldi	r24, 0x1E	; 30
    23c8:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x01,0x2B3F);
    23cc:	6f e3       	ldi	r22, 0x3F	; 63
    23ce:	7b e2       	ldi	r23, 0x2B	; 43
    23d0:	81 e0       	ldi	r24, 0x01	; 1
    23d2:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x02,0x0600);
    23d6:	60 e0       	ldi	r22, 0x00	; 0
    23d8:	76 e0       	ldi	r23, 0x06	; 6
    23da:	82 e0       	ldi	r24, 0x02	; 2
    23dc:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x10,0x0000);
    23e0:	60 e0       	ldi	r22, 0x00	; 0
    23e2:	70 e0       	ldi	r23, 0x00	; 0
    23e4:	80 e1       	ldi	r24, 0x10	; 16
    23e6:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x11,0x6070);
    23ea:	60 e7       	ldi	r22, 0x70	; 112
    23ec:	70 e6       	ldi	r23, 0x60	; 96
    23ee:	81 e1       	ldi	r24, 0x11	; 17
    23f0:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x05,0x0000);
    23f4:	60 e0       	ldi	r22, 0x00	; 0
    23f6:	70 e0       	ldi	r23, 0x00	; 0
    23f8:	85 e0       	ldi	r24, 0x05	; 5
    23fa:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x06,0x0000);
    23fe:	60 e0       	ldi	r22, 0x00	; 0
    2400:	70 e0       	ldi	r23, 0x00	; 0
    2402:	86 e0       	ldi	r24, 0x06	; 6
    2404:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x16,0xEF1C);
    2408:	6c e1       	ldi	r22, 0x1C	; 28
    240a:	7f ee       	ldi	r23, 0xEF	; 239
    240c:	86 e1       	ldi	r24, 0x16	; 22
    240e:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x17,0x0003);
    2412:	63 e0       	ldi	r22, 0x03	; 3
    2414:	70 e0       	ldi	r23, 0x00	; 0
    2416:	87 e1       	ldi	r24, 0x17	; 23
    2418:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x07,0x0233);
    241c:	63 e3       	ldi	r22, 0x33	; 51
    241e:	72 e0       	ldi	r23, 0x02	; 2
    2420:	87 e0       	ldi	r24, 0x07	; 7
    2422:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0B,0x0000);
    2426:	60 e0       	ldi	r22, 0x00	; 0
    2428:	70 e0       	ldi	r23, 0x00	; 0
    242a:	8b e0       	ldi	r24, 0x0B	; 11
    242c:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0F,0x0000);
    2430:	60 e0       	ldi	r22, 0x00	; 0
    2432:	70 e0       	ldi	r23, 0x00	; 0
    2434:	8f e0       	ldi	r24, 0x0F	; 15
    2436:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x41,0x0000);
    243a:	60 e0       	ldi	r22, 0x00	; 0
    243c:	70 e0       	ldi	r23, 0x00	; 0
    243e:	81 e4       	ldi	r24, 0x41	; 65
    2440:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x42,0x0000);
    2444:	60 e0       	ldi	r22, 0x00	; 0
    2446:	70 e0       	ldi	r23, 0x00	; 0
    2448:	82 e4       	ldi	r24, 0x42	; 66
    244a:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x48,0x0000);
    244e:	60 e0       	ldi	r22, 0x00	; 0
    2450:	70 e0       	ldi	r23, 0x00	; 0
    2452:	88 e4       	ldi	r24, 0x48	; 72
    2454:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x49,0x013F);
    2458:	6f e3       	ldi	r22, 0x3F	; 63
    245a:	71 e0       	ldi	r23, 0x01	; 1
    245c:	89 e4       	ldi	r24, 0x49	; 73
    245e:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4A,0x0000);
    2462:	60 e0       	ldi	r22, 0x00	; 0
    2464:	70 e0       	ldi	r23, 0x00	; 0
    2466:	8a e4       	ldi	r24, 0x4A	; 74
    2468:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4B,0x0000);
    246c:	60 e0       	ldi	r22, 0x00	; 0
    246e:	70 e0       	ldi	r23, 0x00	; 0
    2470:	8b e4       	ldi	r24, 0x4B	; 75
    2472:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x44,0xEF00);
    2476:	60 e0       	ldi	r22, 0x00	; 0
    2478:	7f ee       	ldi	r23, 0xEF	; 239
    247a:	84 e4       	ldi	r24, 0x44	; 68
    247c:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x45,0x0000);
    2480:	60 e0       	ldi	r22, 0x00	; 0
    2482:	70 e0       	ldi	r23, 0x00	; 0
    2484:	85 e4       	ldi	r24, 0x45	; 69
    2486:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x46,0x013F);
    248a:	6f e3       	ldi	r22, 0x3F	; 63
    248c:	71 e0       	ldi	r23, 0x01	; 1
    248e:	86 e4       	ldi	r24, 0x46	; 70
    2490:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x30,0x0707);
    2494:	67 e0       	ldi	r22, 0x07	; 7
    2496:	77 e0       	ldi	r23, 0x07	; 7
    2498:	80 e3       	ldi	r24, 0x30	; 48
    249a:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x31,0x0204);
    249e:	64 e0       	ldi	r22, 0x04	; 4
    24a0:	72 e0       	ldi	r23, 0x02	; 2
    24a2:	81 e3       	ldi	r24, 0x31	; 49
    24a4:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x32,0x0204);
    24a8:	64 e0       	ldi	r22, 0x04	; 4
    24aa:	72 e0       	ldi	r23, 0x02	; 2
    24ac:	82 e3       	ldi	r24, 0x32	; 50
    24ae:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x33,0x0502);
    24b2:	62 e0       	ldi	r22, 0x02	; 2
    24b4:	75 e0       	ldi	r23, 0x05	; 5
    24b6:	83 e3       	ldi	r24, 0x33	; 51
    24b8:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x34,0x0507);
    24bc:	67 e0       	ldi	r22, 0x07	; 7
    24be:	75 e0       	ldi	r23, 0x05	; 5
    24c0:	84 e3       	ldi	r24, 0x34	; 52
    24c2:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x35,0x0204);
    24c6:	64 e0       	ldi	r22, 0x04	; 4
    24c8:	72 e0       	ldi	r23, 0x02	; 2
    24ca:	85 e3       	ldi	r24, 0x35	; 53
    24cc:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x36,0x0204);
    24d0:	64 e0       	ldi	r22, 0x04	; 4
    24d2:	72 e0       	ldi	r23, 0x02	; 2
    24d4:	86 e3       	ldi	r24, 0x36	; 54
    24d6:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x37,0x0502);
    24da:	62 e0       	ldi	r22, 0x02	; 2
    24dc:	75 e0       	ldi	r23, 0x05	; 5
    24de:	87 e3       	ldi	r24, 0x37	; 55
    24e0:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x3A,0x0302);
    24e4:	62 e0       	ldi	r22, 0x02	; 2
    24e6:	73 e0       	ldi	r23, 0x03	; 3
    24e8:	8a e3       	ldi	r24, 0x3A	; 58
    24ea:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x3B,0x0302);
    24ee:	62 e0       	ldi	r22, 0x02	; 2
    24f0:	73 e0       	ldi	r23, 0x03	; 3
    24f2:	8b e3       	ldi	r24, 0x3B	; 59
    24f4:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x23,0x0000);
    24f8:	60 e0       	ldi	r22, 0x00	; 0
    24fa:	70 e0       	ldi	r23, 0x00	; 0
    24fc:	83 e2       	ldi	r24, 0x23	; 35
    24fe:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x24,0x0000);
    2502:	60 e0       	ldi	r22, 0x00	; 0
    2504:	70 e0       	ldi	r23, 0x00	; 0
    2506:	84 e2       	ldi	r24, 0x24	; 36
    2508:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x25,0x8000);
    250c:	60 e0       	ldi	r22, 0x00	; 0
    250e:	70 e8       	ldi	r23, 0x80	; 128
    2510:	85 e2       	ldi	r24, 0x25	; 37
    2512:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4f,0x0000);
    2516:	60 e0       	ldi	r22, 0x00	; 0
    2518:	70 e0       	ldi	r23, 0x00	; 0
    251a:	8f e4       	ldi	r24, 0x4F	; 79
    251c:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4e,0x0000);
    2520:	60 e0       	ldi	r22, 0x00	; 0
    2522:	70 e0       	ldi	r23, 0x00	; 0
    2524:	8e e4       	ldi	r24, 0x4E	; 78
    2526:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
	LCD_Write_COM(0x22);
    252a:	82 e2       	ldi	r24, 0x22	; 34
    252c:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <LCD_Write_COM>


	sbi(CS_PORT, CS_PIN);
    2530:	85 b3       	in	r24, 0x15	; 21
    2532:	81 60       	ori	r24, 0x01	; 1
    2534:	85 bb       	out	0x15, r24	; 21
    2536:	08 95       	ret

00002538 <_ZN4UTFTC1Ev>:
		}
		st[c2+f]=0;
	}

	print(st,x,y);
}
    2538:	4f ee       	ldi	r20, 0xEF	; 239
    253a:	50 e0       	ldi	r21, 0x00	; 0
    253c:	60 e0       	ldi	r22, 0x00	; 0
    253e:	70 e0       	ldi	r23, 0x00	; 0
    2540:	fc 01       	movw	r30, r24
    2542:	45 83       	std	Z+5, r20	; 0x05
    2544:	56 83       	std	Z+6, r21	; 0x06
    2546:	67 83       	std	Z+7, r22	; 0x07
    2548:	70 87       	std	Z+8, r23	; 0x08
    254a:	4f e3       	ldi	r20, 0x3F	; 63
    254c:	51 e0       	ldi	r21, 0x01	; 1
    254e:	60 e0       	ldi	r22, 0x00	; 0
    2550:	70 e0       	ldi	r23, 0x00	; 0
    2552:	41 87       	std	Z+9, r20	; 0x09
    2554:	52 87       	std	Z+10, r21	; 0x0a
    2556:	63 87       	std	Z+11, r22	; 0x0b
    2558:	74 87       	std	Z+12, r23	; 0x0c
    255a:	0e 94 8f 11 	call	0x231e	; 0x231e <SSD1289_init>
    255e:	08 95       	ret

00002560 <_ZN4UTFT5setXYEjjjj>:
    2560:	ef 92       	push	r14
    2562:	ff 92       	push	r15
    2564:	0f 93       	push	r16
    2566:	1f 93       	push	r17
    2568:	cf 93       	push	r28
    256a:	df 93       	push	r29
    256c:	eb 01       	movw	r28, r22
    256e:	e4 2e       	mov	r14, r20
    2570:	f5 2e       	mov	r15, r21
    2572:	fc 01       	movw	r30, r24
    2574:	44 81       	ldd	r20, Z+4	; 0x04
    2576:	41 30       	cpi	r20, 0x01	; 1
    2578:	89 f4       	brne	.+34     	; 0x259c <_ZN4UTFT5setXYEjjjj+0x3c>
    257a:	81 85       	ldd	r24, Z+9	; 0x09
    257c:	92 85       	ldd	r25, Z+10	; 0x0a
    257e:	a3 85       	ldd	r26, Z+11	; 0x0b
    2580:	b4 85       	ldd	r27, Z+12	; 0x0c
    2582:	ac 01       	movw	r20, r24
    2584:	46 1b       	sub	r20, r22
    2586:	57 0b       	sbc	r21, r23
    2588:	82 1b       	sub	r24, r18
    258a:	93 0b       	sbc	r25, r19
    258c:	20 2f       	mov	r18, r16
    258e:	31 2f       	mov	r19, r17
    2590:	04 2f       	mov	r16, r20
    2592:	15 2f       	mov	r17, r21
    2594:	ce 2d       	mov	r28, r14
    2596:	df 2d       	mov	r29, r15
    2598:	e8 2e       	mov	r14, r24
    259a:	f9 2e       	mov	r15, r25
    259c:	32 2f       	mov	r19, r18
    259e:	22 27       	eor	r18, r18
    25a0:	be 01       	movw	r22, r28
    25a2:	62 0f       	add	r22, r18
    25a4:	73 1f       	adc	r23, r19
    25a6:	84 e4       	ldi	r24, 0x44	; 68
    25a8:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    25ac:	6e 2d       	mov	r22, r14
    25ae:	7f 2d       	mov	r23, r15
    25b0:	85 e4       	ldi	r24, 0x45	; 69
    25b2:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    25b6:	60 2f       	mov	r22, r16
    25b8:	71 2f       	mov	r23, r17
    25ba:	86 e4       	ldi	r24, 0x46	; 70
    25bc:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    25c0:	be 01       	movw	r22, r28
    25c2:	8e e4       	ldi	r24, 0x4E	; 78
    25c4:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    25c8:	6e 2d       	mov	r22, r14
    25ca:	7f 2d       	mov	r23, r15
    25cc:	8f e4       	ldi	r24, 0x4F	; 79
    25ce:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    25d2:	82 e2       	ldi	r24, 0x22	; 34
    25d4:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <LCD_Write_COM>
    25d8:	85 b3       	in	r24, 0x15	; 21
    25da:	80 68       	ori	r24, 0x80	; 128
    25dc:	85 bb       	out	0x15, r24	; 21
    25de:	df 91       	pop	r29
    25e0:	cf 91       	pop	r28
    25e2:	1f 91       	pop	r17
    25e4:	0f 91       	pop	r16
    25e6:	ff 90       	pop	r15
    25e8:	ef 90       	pop	r14
    25ea:	08 95       	ret

000025ec <_ZN4UTFT8fillRectEiiii>:
    25ec:	8f 92       	push	r8
    25ee:	9f 92       	push	r9
    25f0:	af 92       	push	r10
    25f2:	bf 92       	push	r11
    25f4:	cf 92       	push	r12
    25f6:	df 92       	push	r13
    25f8:	ef 92       	push	r14
    25fa:	ff 92       	push	r15
    25fc:	0f 93       	push	r16
    25fe:	1f 93       	push	r17
    2600:	cf 93       	push	r28
    2602:	df 93       	push	r29
    2604:	4c 01       	movw	r8, r24
    2606:	5b 01       	movw	r10, r22
    2608:	7a 01       	movw	r14, r20
    260a:	69 01       	movw	r12, r18
    260c:	e8 01       	movw	r28, r16
    260e:	26 17       	cp	r18, r22
    2610:	37 07       	cpc	r19, r23
    2612:	24 f4       	brge	.+8      	; 0x261c <_ZN4UTFT8fillRectEiiii+0x30>
    2614:	8b 2d       	mov	r24, r11
    2616:	59 01       	movw	r10, r18
    2618:	c6 2e       	mov	r12, r22
    261a:	d8 2e       	mov	r13, r24
    261c:	ce 15       	cp	r28, r14
    261e:	df 05       	cpc	r29, r15
    2620:	2c f4       	brge	.+10     	; 0x262c <_ZN4UTFT8fillRectEiiii+0x40>
    2622:	9e 2d       	mov	r25, r14
    2624:	8f 2d       	mov	r24, r15
    2626:	7e 01       	movw	r14, r28
    2628:	c9 2f       	mov	r28, r25
    262a:	d8 2f       	mov	r29, r24
    262c:	85 b3       	in	r24, 0x15	; 21
    262e:	8e 7f       	andi	r24, 0xFE	; 254
    2630:	85 bb       	out	0x15, r24	; 21
    2632:	8e 01       	movw	r16, r28
    2634:	96 01       	movw	r18, r12
    2636:	a7 01       	movw	r20, r14
    2638:	b5 01       	movw	r22, r10
    263a:	c4 01       	movw	r24, r8
    263c:	0e 94 b0 12 	call	0x2560	; 0x2560 <_ZN4UTFT5setXYEjjjj>
    2640:	f4 01       	movw	r30, r8
    2642:	80 81       	ld	r24, Z
    2644:	8b bb       	out	0x1b, r24	; 27
    2646:	81 81       	ldd	r24, Z+1	; 0x01
    2648:	82 bb       	out	0x12, r24	; 18
    264a:	96 01       	movw	r18, r12
    264c:	2a 19       	sub	r18, r10
    264e:	3b 09       	sbc	r19, r11
    2650:	c9 01       	movw	r24, r18
    2652:	33 0f       	add	r19, r19
    2654:	aa 0b       	sbc	r26, r26
    2656:	bb 0b       	sbc	r27, r27
    2658:	9c 01       	movw	r18, r24
    265a:	ad 01       	movw	r20, r26
    265c:	2f 5f       	subi	r18, 0xFF	; 255
    265e:	3f 4f       	sbci	r19, 0xFF	; 255
    2660:	4f 4f       	sbci	r20, 0xFF	; 255
    2662:	5f 4f       	sbci	r21, 0xFF	; 255
    2664:	be 01       	movw	r22, r28
    2666:	6e 19       	sub	r22, r14
    2668:	7f 09       	sbc	r23, r15
    266a:	cb 01       	movw	r24, r22
    266c:	77 0f       	add	r23, r23
    266e:	aa 0b       	sbc	r26, r26
    2670:	bb 0b       	sbc	r27, r27
    2672:	bc 01       	movw	r22, r24
    2674:	cd 01       	movw	r24, r26
    2676:	6f 5f       	subi	r22, 0xFF	; 255
    2678:	7f 4f       	sbci	r23, 0xFF	; 255
    267a:	8f 4f       	sbci	r24, 0xFF	; 255
    267c:	9f 4f       	sbci	r25, 0xFF	; 255
    267e:	0e 94 cb 1b 	call	0x3796	; 0x3796 <__mulsi3>
    2682:	0e 94 31 09 	call	0x1262	; 0x1262 <fastfill>
    2686:	8f ef       	ldi	r24, 0xFF	; 255
    2688:	82 bb       	out	0x12, r24	; 18
    268a:	8b bb       	out	0x1b, r24	; 27
    268c:	85 b3       	in	r24, 0x15	; 21
    268e:	8e 7f       	andi	r24, 0xFE	; 254
    2690:	85 bb       	out	0x15, r24	; 21
    2692:	df 91       	pop	r29
    2694:	cf 91       	pop	r28
    2696:	1f 91       	pop	r17
    2698:	0f 91       	pop	r16
    269a:	ff 90       	pop	r15
    269c:	ef 90       	pop	r14
    269e:	df 90       	pop	r13
    26a0:	cf 90       	pop	r12
    26a2:	bf 90       	pop	r11
    26a4:	af 90       	pop	r10
    26a6:	9f 90       	pop	r9
    26a8:	8f 90       	pop	r8
    26aa:	08 95       	ret

000026ac <_ZN4UTFT6clrScrEv>:
    26ac:	85 b3       	in	r24, 0x15	; 21
    26ae:	8e 7f       	andi	r24, 0xFE	; 254
    26b0:	85 bb       	out	0x15, r24	; 21
    26b2:	60 e0       	ldi	r22, 0x00	; 0
    26b4:	7f ee       	ldi	r23, 0xEF	; 239
    26b6:	84 e4       	ldi	r24, 0x44	; 68
    26b8:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    26bc:	60 e0       	ldi	r22, 0x00	; 0
    26be:	70 e0       	ldi	r23, 0x00	; 0
    26c0:	85 e4       	ldi	r24, 0x45	; 69
    26c2:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    26c6:	6f e3       	ldi	r22, 0x3F	; 63
    26c8:	71 e0       	ldi	r23, 0x01	; 1
    26ca:	86 e4       	ldi	r24, 0x46	; 70
    26cc:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    26d0:	60 e0       	ldi	r22, 0x00	; 0
    26d2:	70 e0       	ldi	r23, 0x00	; 0
    26d4:	8e e4       	ldi	r24, 0x4E	; 78
    26d6:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    26da:	60 e0       	ldi	r22, 0x00	; 0
    26dc:	70 e0       	ldi	r23, 0x00	; 0
    26de:	8f e4       	ldi	r24, 0x4F	; 79
    26e0:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    26e4:	68 e7       	ldi	r22, 0x78	; 120
    26e6:	70 e6       	ldi	r23, 0x60	; 96
    26e8:	81 e1       	ldi	r24, 0x11	; 17
    26ea:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    26ee:	82 e2       	ldi	r24, 0x22	; 34
    26f0:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <LCD_Write_COM>
    26f4:	85 b3       	in	r24, 0x15	; 21
    26f6:	80 68       	ori	r24, 0x80	; 128
    26f8:	85 bb       	out	0x15, r24	; 21
    26fa:	12 ba       	out	0x12, r1	; 18
    26fc:	1b ba       	out	0x1b, r1	; 27
    26fe:	60 e0       	ldi	r22, 0x00	; 0
    2700:	7c e2       	ldi	r23, 0x2C	; 44
    2702:	81 e0       	ldi	r24, 0x01	; 1
    2704:	90 e0       	ldi	r25, 0x00	; 0
    2706:	0e 94 31 09 	call	0x1262	; 0x1262 <fastfill>
    270a:	8f ef       	ldi	r24, 0xFF	; 255
    270c:	82 bb       	out	0x12, r24	; 18
    270e:	8b bb       	out	0x1b, r24	; 27
    2710:	85 b3       	in	r24, 0x15	; 21
    2712:	8e 7f       	andi	r24, 0xFE	; 254
    2714:	85 bb       	out	0x15, r24	; 21
    2716:	08 95       	ret

00002718 <_ZN4UTFT8setColorEhhh>:
    2718:	e4 2f       	mov	r30, r20
    271a:	f0 e0       	ldi	r31, 0x00	; 0
    271c:	f5 95       	asr	r31
    271e:	e7 95       	ror	r30
    2720:	f5 95       	asr	r31
    2722:	e7 95       	ror	r30
    2724:	f5 95       	asr	r31
    2726:	e7 95       	ror	r30
    2728:	f5 95       	asr	r31
    272a:	e7 95       	ror	r30
    272c:	f5 95       	asr	r31
    272e:	e7 95       	ror	r30
    2730:	68 7f       	andi	r22, 0xF8	; 248
    2732:	e6 2b       	or	r30, r22
    2734:	dc 01       	movw	r26, r24
    2736:	ec 93       	st	X, r30
    2738:	4c 71       	andi	r20, 0x1C	; 28
    273a:	50 e0       	ldi	r21, 0x00	; 0
    273c:	44 0f       	add	r20, r20
    273e:	55 1f       	adc	r21, r21
    2740:	44 0f       	add	r20, r20
    2742:	55 1f       	adc	r21, r21
    2744:	44 0f       	add	r20, r20
    2746:	55 1f       	adc	r21, r21
    2748:	30 e0       	ldi	r19, 0x00	; 0
    274a:	35 95       	asr	r19
    274c:	27 95       	ror	r18
    274e:	35 95       	asr	r19
    2750:	27 95       	ror	r18
    2752:	35 95       	asr	r19
    2754:	27 95       	ror	r18
    2756:	42 2b       	or	r20, r18
    2758:	11 96       	adiw	r26, 0x01	; 1
    275a:	4c 93       	st	X, r20
    275c:	08 95       	ret

0000275e <_ZN4UTFT12setBackColorEhhh>:
    275e:	e4 2f       	mov	r30, r20
    2760:	f0 e0       	ldi	r31, 0x00	; 0
    2762:	f5 95       	asr	r31
    2764:	e7 95       	ror	r30
    2766:	f5 95       	asr	r31
    2768:	e7 95       	ror	r30
    276a:	f5 95       	asr	r31
    276c:	e7 95       	ror	r30
    276e:	f5 95       	asr	r31
    2770:	e7 95       	ror	r30
    2772:	f5 95       	asr	r31
    2774:	e7 95       	ror	r30
    2776:	68 7f       	andi	r22, 0xF8	; 248
    2778:	e6 2b       	or	r30, r22
    277a:	dc 01       	movw	r26, r24
    277c:	12 96       	adiw	r26, 0x02	; 2
    277e:	ec 93       	st	X, r30
    2780:	12 97       	sbiw	r26, 0x02	; 2
    2782:	4c 71       	andi	r20, 0x1C	; 28
    2784:	50 e0       	ldi	r21, 0x00	; 0
    2786:	44 0f       	add	r20, r20
    2788:	55 1f       	adc	r21, r21
    278a:	44 0f       	add	r20, r20
    278c:	55 1f       	adc	r21, r21
    278e:	44 0f       	add	r20, r20
    2790:	55 1f       	adc	r21, r21
    2792:	30 e0       	ldi	r19, 0x00	; 0
    2794:	35 95       	asr	r19
    2796:	27 95       	ror	r18
    2798:	35 95       	asr	r19
    279a:	27 95       	ror	r18
    279c:	35 95       	asr	r19
    279e:	27 95       	ror	r18
    27a0:	42 2b       	or	r20, r18
    27a2:	13 96       	adiw	r26, 0x03	; 3
    27a4:	4c 93       	st	X, r20
    27a6:	08 95       	ret

000027a8 <_ZN4UTFT7InitLCDEh>:
    27a8:	cf 93       	push	r28
    27aa:	df 93       	push	r29
    27ac:	ec 01       	movw	r28, r24
    27ae:	6c 83       	std	Y+4, r22	; 0x04
    27b0:	2f ef       	ldi	r18, 0xFF	; 255
    27b2:	4f ef       	ldi	r20, 0xFF	; 255
    27b4:	6f ef       	ldi	r22, 0xFF	; 255
    27b6:	0e 94 8c 13 	call	0x2718	; 0x2718 <_ZN4UTFT8setColorEhhh>
    27ba:	20 e0       	ldi	r18, 0x00	; 0
    27bc:	40 e0       	ldi	r20, 0x00	; 0
    27be:	60 e0       	ldi	r22, 0x00	; 0
    27c0:	ce 01       	movw	r24, r28
    27c2:	0e 94 af 13 	call	0x275e	; 0x275e <_ZN4UTFT12setBackColorEhhh>
    27c6:	1e 86       	std	Y+14, r1	; 0x0e
    27c8:	1d 86       	std	Y+13, r1	; 0x0d
    27ca:	df 91       	pop	r29
    27cc:	cf 91       	pop	r28
    27ce:	08 95       	ret

000027d0 <_ZN4UTFT8setPixelEj>:
    27d0:	87 2f       	mov	r24, r23
    27d2:	0e 94 81 09 	call	0x1302	; 0x1302 <LCD_Write_DATA>
    27d6:	08 95       	ret

000027d8 <_ZN4UTFT9drawHLineEiii>:
    27d8:	ef 92       	push	r14
    27da:	ff 92       	push	r15
    27dc:	0f 93       	push	r16
    27de:	1f 93       	push	r17
    27e0:	cf 93       	push	r28
    27e2:	df 93       	push	r29
    27e4:	7c 01       	movw	r14, r24
    27e6:	e9 01       	movw	r28, r18
    27e8:	dd 23       	and	r29, r29
    27ea:	2c f4       	brge	.+10     	; 0x27f6 <_ZN4UTFT9drawHLineEiii+0x1e>
    27ec:	62 0f       	add	r22, r18
    27ee:	73 1f       	adc	r23, r19
    27f0:	d1 95       	neg	r29
    27f2:	c1 95       	neg	r28
    27f4:	d1 09       	sbc	r29, r1
    27f6:	85 b3       	in	r24, 0x15	; 21
    27f8:	8e 7f       	andi	r24, 0xFE	; 254
    27fa:	85 bb       	out	0x15, r24	; 21
    27fc:	9b 01       	movw	r18, r22
    27fe:	2c 0f       	add	r18, r28
    2800:	3d 1f       	adc	r19, r29
    2802:	8a 01       	movw	r16, r20
    2804:	c7 01       	movw	r24, r14
    2806:	0e 94 b0 12 	call	0x2560	; 0x2560 <_ZN4UTFT5setXYEjjjj>
    280a:	f7 01       	movw	r30, r14
    280c:	80 81       	ld	r24, Z
    280e:	8b bb       	out	0x1b, r24	; 27
    2810:	81 81       	ldd	r24, Z+1	; 0x01
    2812:	82 bb       	out	0x12, r24	; 18
    2814:	be 01       	movw	r22, r28
    2816:	dd 0f       	add	r29, r29
    2818:	88 0b       	sbc	r24, r24
    281a:	99 0b       	sbc	r25, r25
    281c:	0e 94 31 09 	call	0x1262	; 0x1262 <fastfill>
    2820:	8f ef       	ldi	r24, 0xFF	; 255
    2822:	82 bb       	out	0x12, r24	; 18
    2824:	8b bb       	out	0x1b, r24	; 27
    2826:	85 b3       	in	r24, 0x15	; 21
    2828:	81 60       	ori	r24, 0x01	; 1
    282a:	85 bb       	out	0x15, r24	; 21
    282c:	df 91       	pop	r29
    282e:	cf 91       	pop	r28
    2830:	1f 91       	pop	r17
    2832:	0f 91       	pop	r16
    2834:	ff 90       	pop	r15
    2836:	ef 90       	pop	r14
    2838:	08 95       	ret

0000283a <_ZN4UTFT9drawVLineEiii>:
    283a:	ef 92       	push	r14
    283c:	ff 92       	push	r15
    283e:	0f 93       	push	r16
    2840:	1f 93       	push	r17
    2842:	cf 93       	push	r28
    2844:	df 93       	push	r29
    2846:	7c 01       	movw	r14, r24
    2848:	e9 01       	movw	r28, r18
    284a:	dd 23       	and	r29, r29
    284c:	2c f4       	brge	.+10     	; 0x2858 <_ZN4UTFT9drawVLineEiii+0x1e>
    284e:	42 0f       	add	r20, r18
    2850:	53 1f       	adc	r21, r19
    2852:	d1 95       	neg	r29
    2854:	c1 95       	neg	r28
    2856:	d1 09       	sbc	r29, r1
    2858:	85 b3       	in	r24, 0x15	; 21
    285a:	8e 7f       	andi	r24, 0xFE	; 254
    285c:	85 bb       	out	0x15, r24	; 21
    285e:	8a 01       	movw	r16, r20
    2860:	0c 0f       	add	r16, r28
    2862:	1d 1f       	adc	r17, r29
    2864:	9b 01       	movw	r18, r22
    2866:	c7 01       	movw	r24, r14
    2868:	0e 94 b0 12 	call	0x2560	; 0x2560 <_ZN4UTFT5setXYEjjjj>
    286c:	f7 01       	movw	r30, r14
    286e:	80 81       	ld	r24, Z
    2870:	8b bb       	out	0x1b, r24	; 27
    2872:	81 81       	ldd	r24, Z+1	; 0x01
    2874:	82 bb       	out	0x12, r24	; 18
    2876:	be 01       	movw	r22, r28
    2878:	dd 0f       	add	r29, r29
    287a:	88 0b       	sbc	r24, r24
    287c:	99 0b       	sbc	r25, r25
    287e:	0e 94 31 09 	call	0x1262	; 0x1262 <fastfill>
    2882:	8f ef       	ldi	r24, 0xFF	; 255
    2884:	82 bb       	out	0x12, r24	; 18
    2886:	8b bb       	out	0x1b, r24	; 27
    2888:	85 b3       	in	r24, 0x15	; 21
    288a:	81 60       	ori	r24, 0x01	; 1
    288c:	85 bb       	out	0x15, r24	; 21
    288e:	df 91       	pop	r29
    2890:	cf 91       	pop	r28
    2892:	1f 91       	pop	r17
    2894:	0f 91       	pop	r16
    2896:	ff 90       	pop	r15
    2898:	ef 90       	pop	r14
    289a:	08 95       	ret

0000289c <_ZN4UTFT8drawRectEiiii>:
    289c:	8f 92       	push	r8
    289e:	9f 92       	push	r9
    28a0:	af 92       	push	r10
    28a2:	bf 92       	push	r11
    28a4:	cf 92       	push	r12
    28a6:	df 92       	push	r13
    28a8:	ef 92       	push	r14
    28aa:	ff 92       	push	r15
    28ac:	0f 93       	push	r16
    28ae:	1f 93       	push	r17
    28b0:	cf 93       	push	r28
    28b2:	df 93       	push	r29
    28b4:	5c 01       	movw	r10, r24
    28b6:	7b 01       	movw	r14, r22
    28b8:	ea 01       	movw	r28, r20
    28ba:	69 01       	movw	r12, r18
    28bc:	26 17       	cp	r18, r22
    28be:	37 07       	cpc	r19, r23
    28c0:	24 f4       	brge	.+8      	; 0x28ca <_ZN4UTFT8drawRectEiiii+0x2e>
    28c2:	8f 2d       	mov	r24, r15
    28c4:	79 01       	movw	r14, r18
    28c6:	c6 2e       	mov	r12, r22
    28c8:	d8 2e       	mov	r13, r24
    28ca:	0c 17       	cp	r16, r28
    28cc:	1d 07       	cpc	r17, r29
    28ce:	2c f4       	brge	.+10     	; 0x28da <_ZN4UTFT8drawRectEiiii+0x3e>
    28d0:	9c 2f       	mov	r25, r28
    28d2:	8d 2f       	mov	r24, r29
    28d4:	e8 01       	movw	r28, r16
    28d6:	09 2f       	mov	r16, r25
    28d8:	18 2f       	mov	r17, r24
    28da:	46 01       	movw	r8, r12
    28dc:	8e 18       	sub	r8, r14
    28de:	9f 08       	sbc	r9, r15
    28e0:	94 01       	movw	r18, r8
    28e2:	ae 01       	movw	r20, r28
    28e4:	b7 01       	movw	r22, r14
    28e6:	c5 01       	movw	r24, r10
    28e8:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <_ZN4UTFT9drawHLineEiii>
    28ec:	94 01       	movw	r18, r8
    28ee:	a8 01       	movw	r20, r16
    28f0:	b7 01       	movw	r22, r14
    28f2:	c5 01       	movw	r24, r10
    28f4:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <_ZN4UTFT9drawHLineEiii>
    28f8:	0c 1b       	sub	r16, r28
    28fa:	1d 0b       	sbc	r17, r29
    28fc:	98 01       	movw	r18, r16
    28fe:	ae 01       	movw	r20, r28
    2900:	b7 01       	movw	r22, r14
    2902:	c5 01       	movw	r24, r10
    2904:	0e 94 1d 14 	call	0x283a	; 0x283a <_ZN4UTFT9drawVLineEiii>
    2908:	98 01       	movw	r18, r16
    290a:	ae 01       	movw	r20, r28
    290c:	b6 01       	movw	r22, r12
    290e:	c5 01       	movw	r24, r10
    2910:	0e 94 1d 14 	call	0x283a	; 0x283a <_ZN4UTFT9drawVLineEiii>
    2914:	df 91       	pop	r29
    2916:	cf 91       	pop	r28
    2918:	1f 91       	pop	r17
    291a:	0f 91       	pop	r16
    291c:	ff 90       	pop	r15
    291e:	ef 90       	pop	r14
    2920:	df 90       	pop	r13
    2922:	cf 90       	pop	r12
    2924:	bf 90       	pop	r11
    2926:	af 90       	pop	r10
    2928:	9f 90       	pop	r9
    292a:	8f 90       	pop	r8
    292c:	08 95       	ret

0000292e <_ZN4UTFT9printCharEhii>:
    292e:	af 92       	push	r10
    2930:	bf 92       	push	r11
    2932:	cf 92       	push	r12
    2934:	df 92       	push	r13
    2936:	ef 92       	push	r14
    2938:	ff 92       	push	r15
    293a:	0f 93       	push	r16
    293c:	1f 93       	push	r17
    293e:	cf 93       	push	r28
    2940:	df 93       	push	r29
    2942:	ec 01       	movw	r28, r24
    2944:	7a 01       	movw	r14, r20
    2946:	89 01       	movw	r16, r18
    2948:	85 b3       	in	r24, 0x15	; 21
    294a:	8e 7f       	andi	r24, 0xFE	; 254
    294c:	85 bb       	out	0x15, r24	; 21
    294e:	8c 81       	ldd	r24, Y+4	; 0x04
    2950:	81 11       	cpse	r24, r1
    2952:	69 c0       	rjmp	.+210    	; 0x2a26 <_ZN4UTFT9printCharEhii+0xf8>
    2954:	29 89       	ldd	r18, Y+17	; 0x11
    2956:	86 2f       	mov	r24, r22
    2958:	90 e0       	ldi	r25, 0x00	; 0
    295a:	82 1b       	sub	r24, r18
    295c:	91 09       	sbc	r25, r1
    295e:	4f 85       	ldd	r20, Y+15	; 0x0f
    2960:	54 2f       	mov	r21, r20
    2962:	56 95       	lsr	r21
    2964:	56 95       	lsr	r21
    2966:	56 95       	lsr	r21
    2968:	28 89       	ldd	r18, Y+16	; 0x10
    296a:	30 e0       	ldi	r19, 0x00	; 0
    296c:	52 9f       	mul	r21, r18
    296e:	b0 01       	movw	r22, r0
    2970:	53 9f       	mul	r21, r19
    2972:	70 0d       	add	r23, r0
    2974:	11 24       	eor	r1, r1
    2976:	86 9f       	mul	r24, r22
    2978:	60 01       	movw	r12, r0
    297a:	87 9f       	mul	r24, r23
    297c:	d0 0c       	add	r13, r0
    297e:	96 9f       	mul	r25, r22
    2980:	d0 0c       	add	r13, r0
    2982:	11 24       	eor	r1, r1
    2984:	84 e0       	ldi	r24, 0x04	; 4
    2986:	c8 0e       	add	r12, r24
    2988:	d1 1c       	adc	r13, r1
    298a:	c7 01       	movw	r24, r14
    298c:	84 0f       	add	r24, r20
    298e:	91 1d       	adc	r25, r1
    2990:	20 0f       	add	r18, r16
    2992:	31 1f       	adc	r19, r17
    2994:	59 01       	movw	r10, r18
    2996:	41 e0       	ldi	r20, 0x01	; 1
    2998:	a4 1a       	sub	r10, r20
    299a:	b1 08       	sbc	r11, r1
    299c:	60 e0       	ldi	r22, 0x00	; 0
    299e:	70 e0       	ldi	r23, 0x00	; 0
    29a0:	7f ef       	ldi	r23, 0xFF	; 255
    29a2:	78 0f       	add	r23, r24
    29a4:	6e 0d       	add	r22, r14
    29a6:	7f 1d       	adc	r23, r15
    29a8:	84 e4       	ldi	r24, 0x44	; 68
    29aa:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    29ae:	b8 01       	movw	r22, r16
    29b0:	85 e4       	ldi	r24, 0x45	; 69
    29b2:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    29b6:	b5 01       	movw	r22, r10
    29b8:	86 e4       	ldi	r24, 0x46	; 70
    29ba:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    29be:	b7 01       	movw	r22, r14
    29c0:	8e e4       	ldi	r24, 0x4E	; 78
    29c2:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    29c6:	b8 01       	movw	r22, r16
    29c8:	8f e4       	ldi	r24, 0x4F	; 79
    29ca:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    29ce:	60 e7       	ldi	r22, 0x70	; 112
    29d0:	70 e6       	ldi	r23, 0x60	; 96
    29d2:	81 e1       	ldi	r24, 0x11	; 17
    29d4:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    29d8:	82 e2       	ldi	r24, 0x22	; 34
    29da:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <LCD_Write_COM>
    29de:	85 b3       	in	r24, 0x15	; 21
    29e0:	80 68       	ori	r24, 0x80	; 128
    29e2:	85 bb       	out	0x15, r24	; 21
    29e4:	2a 81       	ldd	r18, Y+2	; 0x02
    29e6:	30 e0       	ldi	r19, 0x00	; 0
    29e8:	32 2f       	mov	r19, r18
    29ea:	22 27       	eor	r18, r18
    29ec:	8b 81       	ldd	r24, Y+3	; 0x03
    29ee:	28 2b       	or	r18, r24
    29f0:	48 81       	ld	r20, Y
    29f2:	50 e0       	ldi	r21, 0x00	; 0
    29f4:	54 2f       	mov	r21, r20
    29f6:	44 27       	eor	r20, r20
    29f8:	89 81       	ldd	r24, Y+1	; 0x01
    29fa:	48 2b       	or	r20, r24
    29fc:	6d 85       	ldd	r22, Y+13	; 0x0d
    29fe:	7e 85       	ldd	r23, Y+14	; 0x0e
    2a00:	6c 0d       	add	r22, r12
    2a02:	7d 1d       	adc	r23, r13
    2a04:	88 89       	ldd	r24, Y+16	; 0x10
    2a06:	9f 85       	ldd	r25, Y+15	; 0x0f
    2a08:	89 9f       	mul	r24, r25
    2a0a:	c0 01       	movw	r24, r0
    2a0c:	11 24       	eor	r1, r1
    2a0e:	99 23       	and	r25, r25
    2a10:	0c f4       	brge	.+2      	; 0x2a14 <_ZN4UTFT9printCharEhii+0xe6>
    2a12:	07 96       	adiw	r24, 0x07	; 7
    2a14:	95 95       	asr	r25
    2a16:	87 95       	ror	r24
    2a18:	95 95       	asr	r25
    2a1a:	87 95       	ror	r24
    2a1c:	95 95       	asr	r25
    2a1e:	87 95       	ror	r24
    2a20:	0e 94 a2 08 	call	0x1144	; 0x1144 <fastbitmap_1bit>
    2a24:	6f c0       	rjmp	.+222    	; 0x2b04 <_ZN4UTFT9printCharEhii+0x1d6>
    2a26:	29 89       	ldd	r18, Y+17	; 0x11
    2a28:	86 2f       	mov	r24, r22
    2a2a:	90 e0       	ldi	r25, 0x00	; 0
    2a2c:	82 1b       	sub	r24, r18
    2a2e:	91 09       	sbc	r25, r1
    2a30:	4f 85       	ldd	r20, Y+15	; 0x0f
    2a32:	54 2f       	mov	r21, r20
    2a34:	56 95       	lsr	r21
    2a36:	56 95       	lsr	r21
    2a38:	56 95       	lsr	r21
    2a3a:	28 89       	ldd	r18, Y+16	; 0x10
    2a3c:	30 e0       	ldi	r19, 0x00	; 0
    2a3e:	52 9f       	mul	r21, r18
    2a40:	b0 01       	movw	r22, r0
    2a42:	53 9f       	mul	r21, r19
    2a44:	70 0d       	add	r23, r0
    2a46:	11 24       	eor	r1, r1
    2a48:	86 9f       	mul	r24, r22
    2a4a:	60 01       	movw	r12, r0
    2a4c:	87 9f       	mul	r24, r23
    2a4e:	d0 0c       	add	r13, r0
    2a50:	96 9f       	mul	r25, r22
    2a52:	d0 0c       	add	r13, r0
    2a54:	11 24       	eor	r1, r1
    2a56:	84 e0       	ldi	r24, 0x04	; 4
    2a58:	c8 0e       	add	r12, r24
    2a5a:	d1 1c       	adc	r13, r1
    2a5c:	c7 01       	movw	r24, r14
    2a5e:	84 0f       	add	r24, r20
    2a60:	91 1d       	adc	r25, r1
    2a62:	01 97       	sbiw	r24, 0x01	; 1
    2a64:	20 0f       	add	r18, r16
    2a66:	31 1f       	adc	r19, r17
    2a68:	49 85       	ldd	r20, Y+9	; 0x09
    2a6a:	5a 85       	ldd	r21, Y+10	; 0x0a
    2a6c:	6b 85       	ldd	r22, Y+11	; 0x0b
    2a6e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2a70:	5a 01       	movw	r10, r20
    2a72:	ae 18       	sub	r10, r14
    2a74:	bf 08       	sbc	r11, r15
    2a76:	7a 01       	movw	r14, r20
    2a78:	e8 1a       	sub	r14, r24
    2a7a:	f9 0a       	sbc	r15, r25
    2a7c:	60 e0       	ldi	r22, 0x00	; 0
    2a7e:	70 e0       	ldi	r23, 0x00	; 0
    2a80:	7f ef       	ldi	r23, 0xFF	; 255
    2a82:	72 0f       	add	r23, r18
    2a84:	60 0f       	add	r22, r16
    2a86:	71 1f       	adc	r23, r17
    2a88:	84 e4       	ldi	r24, 0x44	; 68
    2a8a:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    2a8e:	b7 01       	movw	r22, r14
    2a90:	85 e4       	ldi	r24, 0x45	; 69
    2a92:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    2a96:	b5 01       	movw	r22, r10
    2a98:	86 e4       	ldi	r24, 0x46	; 70
    2a9a:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    2a9e:	b8 01       	movw	r22, r16
    2aa0:	8e e4       	ldi	r24, 0x4E	; 78
    2aa2:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    2aa6:	b5 01       	movw	r22, r10
    2aa8:	8f e4       	ldi	r24, 0x4F	; 79
    2aaa:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    2aae:	68 e5       	ldi	r22, 0x58	; 88
    2ab0:	70 e6       	ldi	r23, 0x60	; 96
    2ab2:	81 e1       	ldi	r24, 0x11	; 17
    2ab4:	0e 94 8e 09 	call	0x131c	; 0x131c <LCD_Write_COM_DATA>
    2ab8:	82 e2       	ldi	r24, 0x22	; 34
    2aba:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <LCD_Write_COM>
    2abe:	85 b3       	in	r24, 0x15	; 21
    2ac0:	80 68       	ori	r24, 0x80	; 128
    2ac2:	85 bb       	out	0x15, r24	; 21
    2ac4:	2a 81       	ldd	r18, Y+2	; 0x02
    2ac6:	30 e0       	ldi	r19, 0x00	; 0
    2ac8:	32 2f       	mov	r19, r18
    2aca:	22 27       	eor	r18, r18
    2acc:	8b 81       	ldd	r24, Y+3	; 0x03
    2ace:	28 2b       	or	r18, r24
    2ad0:	48 81       	ld	r20, Y
    2ad2:	50 e0       	ldi	r21, 0x00	; 0
    2ad4:	54 2f       	mov	r21, r20
    2ad6:	44 27       	eor	r20, r20
    2ad8:	89 81       	ldd	r24, Y+1	; 0x01
    2ada:	48 2b       	or	r20, r24
    2adc:	6d 85       	ldd	r22, Y+13	; 0x0d
    2ade:	7e 85       	ldd	r23, Y+14	; 0x0e
    2ae0:	6c 0d       	add	r22, r12
    2ae2:	7d 1d       	adc	r23, r13
    2ae4:	88 89       	ldd	r24, Y+16	; 0x10
    2ae6:	9f 85       	ldd	r25, Y+15	; 0x0f
    2ae8:	89 9f       	mul	r24, r25
    2aea:	c0 01       	movw	r24, r0
    2aec:	11 24       	eor	r1, r1
    2aee:	99 23       	and	r25, r25
    2af0:	0c f4       	brge	.+2      	; 0x2af4 <_ZN4UTFT9printCharEhii+0x1c6>
    2af2:	07 96       	adiw	r24, 0x07	; 7
    2af4:	95 95       	asr	r25
    2af6:	87 95       	ror	r24
    2af8:	95 95       	asr	r25
    2afa:	87 95       	ror	r24
    2afc:	95 95       	asr	r25
    2afe:	87 95       	ror	r24
    2b00:	0e 94 a2 08 	call	0x1144	; 0x1144 <fastbitmap_1bit>
    2b04:	85 b3       	in	r24, 0x15	; 21
    2b06:	81 60       	ori	r24, 0x01	; 1
    2b08:	85 bb       	out	0x15, r24	; 21
    2b0a:	df 91       	pop	r29
    2b0c:	cf 91       	pop	r28
    2b0e:	1f 91       	pop	r17
    2b10:	0f 91       	pop	r16
    2b12:	ff 90       	pop	r15
    2b14:	ef 90       	pop	r14
    2b16:	df 90       	pop	r13
    2b18:	cf 90       	pop	r12
    2b1a:	bf 90       	pop	r11
    2b1c:	af 90       	pop	r10
    2b1e:	08 95       	ret

00002b20 <_ZN4UTFT10rotateCharEhiiii>:
    2b20:	2f 92       	push	r2
    2b22:	3f 92       	push	r3
    2b24:	4f 92       	push	r4
    2b26:	5f 92       	push	r5
    2b28:	6f 92       	push	r6
    2b2a:	7f 92       	push	r7
    2b2c:	8f 92       	push	r8
    2b2e:	9f 92       	push	r9
    2b30:	af 92       	push	r10
    2b32:	bf 92       	push	r11
    2b34:	cf 92       	push	r12
    2b36:	df 92       	push	r13
    2b38:	ef 92       	push	r14
    2b3a:	ff 92       	push	r15
    2b3c:	0f 93       	push	r16
    2b3e:	1f 93       	push	r17
    2b40:	cf 93       	push	r28
    2b42:	df 93       	push	r29
    2b44:	cd b7       	in	r28, 0x3d	; 61
    2b46:	de b7       	in	r29, 0x3e	; 62
    2b48:	6b 97       	sbiw	r28, 0x1b	; 27
    2b4a:	0f b6       	in	r0, 0x3f	; 63
    2b4c:	f8 94       	cli
    2b4e:	de bf       	out	0x3e, r29	; 62
    2b50:	0f be       	out	0x3f, r0	; 63
    2b52:	cd bf       	out	0x3d, r28	; 61
    2b54:	5c 01       	movw	r10, r24
    2b56:	69 83       	std	Y+1, r22	; 0x01
    2b58:	3a 01       	movw	r6, r20
    2b5a:	49 01       	movw	r8, r18
    2b5c:	1f 8b       	std	Y+23, r17	; 0x17
    2b5e:	0e 8b       	std	Y+22, r16	; 0x16
    2b60:	b7 01       	movw	r22, r14
    2b62:	ff 0c       	add	r15, r15
    2b64:	88 0b       	sbc	r24, r24
    2b66:	99 0b       	sbc	r25, r25
    2b68:	0e 94 1e 1a 	call	0x343c	; 0x343c <__floatsisf>
    2b6c:	29 e2       	ldi	r18, 0x29	; 41
    2b6e:	3c e5       	ldi	r19, 0x5C	; 92
    2b70:	4f e8       	ldi	r20, 0x8F	; 143
    2b72:	5c e3       	ldi	r21, 0x3C	; 60
    2b74:	0e 94 0d 1b 	call	0x361a	; 0x361a <__mulsf3>
    2b78:	69 8b       	std	Y+17, r22	; 0x11
    2b7a:	7a 8b       	std	Y+18, r23	; 0x12
    2b7c:	8b 8b       	std	Y+19, r24	; 0x13
    2b7e:	9c 8b       	std	Y+20, r25	; 0x14
    2b80:	85 b3       	in	r24, 0x15	; 21
    2b82:	8e 7f       	andi	r24, 0xFE	; 254
    2b84:	85 bb       	out	0x15, r24	; 21
    2b86:	d5 01       	movw	r26, r10
    2b88:	51 96       	adiw	r26, 0x11	; 17
    2b8a:	8c 91       	ld	r24, X
    2b8c:	b9 81       	ldd	r27, Y+1	; 0x01
    2b8e:	2b 2f       	mov	r18, r27
    2b90:	30 e0       	ldi	r19, 0x00	; 0
    2b92:	28 1b       	sub	r18, r24
    2b94:	31 09       	sbc	r19, r1
    2b96:	f5 01       	movw	r30, r10
    2b98:	87 85       	ldd	r24, Z+15	; 0x0f
    2b9a:	86 95       	lsr	r24
    2b9c:	86 95       	lsr	r24
    2b9e:	86 95       	lsr	r24
    2ba0:	90 89       	ldd	r25, Z+16	; 0x10
    2ba2:	89 9f       	mul	r24, r25
    2ba4:	c0 01       	movw	r24, r0
    2ba6:	11 24       	eor	r1, r1
    2ba8:	28 9f       	mul	r18, r24
    2baa:	a0 01       	movw	r20, r0
    2bac:	29 9f       	mul	r18, r25
    2bae:	50 0d       	add	r21, r0
    2bb0:	38 9f       	mul	r19, r24
    2bb2:	50 0d       	add	r21, r0
    2bb4:	11 24       	eor	r1, r1
    2bb6:	9a 01       	movw	r18, r20
    2bb8:	2c 5f       	subi	r18, 0xFC	; 252
    2bba:	3f 4f       	sbci	r19, 0xFF	; 255
    2bbc:	39 8f       	std	Y+25, r19	; 0x19
    2bbe:	28 8f       	std	Y+24, r18	; 0x18
    2bc0:	1d 8a       	std	Y+21, r1	; 0x15
    2bc2:	d5 01       	movw	r26, r10
    2bc4:	50 96       	adiw	r26, 0x10	; 16
    2bc6:	8c 91       	ld	r24, X
    2bc8:	bd 89       	ldd	r27, Y+21	; 0x15
    2bca:	b8 17       	cp	r27, r24
    2bcc:	08 f0       	brcs	.+2      	; 0x2bd0 <_ZN4UTFT10rotateCharEhiiii+0xb0>
    2bce:	fb c0       	rjmp	.+502    	; 0x2dc6 <_ZN4UTFT10rotateCharEhiiii+0x2a6>
    2bd0:	41 2c       	mov	r4, r1
    2bd2:	51 2c       	mov	r5, r1
    2bd4:	f5 01       	movw	r30, r10
    2bd6:	87 85       	ldd	r24, Z+15	; 0x0f
    2bd8:	86 95       	lsr	r24
    2bda:	86 95       	lsr	r24
    2bdc:	86 95       	lsr	r24
    2bde:	28 2f       	mov	r18, r24
    2be0:	30 e0       	ldi	r19, 0x00	; 0
    2be2:	42 16       	cp	r4, r18
    2be4:	53 06       	cpc	r5, r19
    2be6:	0c f0       	brlt	.+2      	; 0x2bea <_ZN4UTFT10rotateCharEhiiii+0xca>
    2be8:	e4 c0       	rjmp	.+456    	; 0x2db2 <_ZN4UTFT10rotateCharEhiiii+0x292>
    2bea:	05 84       	ldd	r0, Z+13	; 0x0d
    2bec:	f6 85       	ldd	r31, Z+14	; 0x0e
    2bee:	e0 2d       	mov	r30, r0
    2bf0:	88 8d       	ldd	r24, Y+24	; 0x18
    2bf2:	99 8d       	ldd	r25, Y+25	; 0x19
    2bf4:	84 0d       	add	r24, r4
    2bf6:	95 1d       	adc	r25, r5
    2bf8:	e8 0f       	add	r30, r24
    2bfa:	f9 1f       	adc	r31, r25
    2bfc:	24 90       	lpm	r2, Z
    2bfe:	31 2c       	mov	r3, r1
    2c00:	3a 8e       	std	Y+26, r3	; 0x1a
    2c02:	2b 8e       	std	Y+27, r2	; 0x1b
    2c04:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2c06:	f8 30       	cpi	r31, 0x08	; 8
    2c08:	08 f0       	brcs	.+2      	; 0x2c0c <_ZN4UTFT10rotateCharEhiiii+0xec>
    2c0a:	cf c0       	rjmp	.+414    	; 0x2daa <_ZN4UTFT10rotateCharEhiiii+0x28a>
    2c0c:	2f 2e       	mov	r2, r31
    2c0e:	31 2c       	mov	r3, r1
    2c10:	b2 01       	movw	r22, r4
    2c12:	66 0f       	add	r22, r22
    2c14:	77 1f       	adc	r23, r23
    2c16:	66 0f       	add	r22, r22
    2c18:	77 1f       	adc	r23, r23
    2c1a:	66 0f       	add	r22, r22
    2c1c:	77 1f       	adc	r23, r23
    2c1e:	62 0d       	add	r22, r2
    2c20:	73 1d       	adc	r23, r3
    2c22:	d5 01       	movw	r26, r10
    2c24:	1f 96       	adiw	r26, 0x0f	; 15
    2c26:	2c 91       	ld	r18, X
    2c28:	ee 89       	ldd	r30, Y+22	; 0x16
    2c2a:	ff 89       	ldd	r31, Y+23	; 0x17
    2c2c:	2e 9f       	mul	r18, r30
    2c2e:	c0 01       	movw	r24, r0
    2c30:	2f 9f       	mul	r18, r31
    2c32:	90 0d       	add	r25, r0
    2c34:	11 24       	eor	r1, r1
    2c36:	68 0f       	add	r22, r24
    2c38:	79 1f       	adc	r23, r25
    2c3a:	07 2e       	mov	r0, r23
    2c3c:	00 0c       	add	r0, r0
    2c3e:	88 0b       	sbc	r24, r24
    2c40:	99 0b       	sbc	r25, r25
    2c42:	0e 94 1e 1a 	call	0x343c	; 0x343c <__floatsisf>
    2c46:	69 83       	std	Y+1, r22	; 0x01
    2c48:	7a 83       	std	Y+2, r23	; 0x02
    2c4a:	8b 83       	std	Y+3, r24	; 0x03
    2c4c:	9c 83       	std	Y+4, r25	; 0x04
    2c4e:	69 89       	ldd	r22, Y+17	; 0x11
    2c50:	7a 89       	ldd	r23, Y+18	; 0x12
    2c52:	8b 89       	ldd	r24, Y+19	; 0x13
    2c54:	9c 89       	ldd	r25, Y+20	; 0x14
    2c56:	0e 94 6f 19 	call	0x32de	; 0x32de <cos>
    2c5a:	6d 83       	std	Y+5, r22	; 0x05
    2c5c:	7e 83       	std	Y+6, r23	; 0x06
    2c5e:	8f 83       	std	Y+7, r24	; 0x07
    2c60:	98 87       	std	Y+8, r25	; 0x08
    2c62:	9b 01       	movw	r18, r22
    2c64:	ac 01       	movw	r20, r24
    2c66:	69 81       	ldd	r22, Y+1	; 0x01
    2c68:	7a 81       	ldd	r23, Y+2	; 0x02
    2c6a:	8b 81       	ldd	r24, Y+3	; 0x03
    2c6c:	9c 81       	ldd	r25, Y+4	; 0x04
    2c6e:	0e 94 0d 1b 	call	0x361a	; 0x361a <__mulsf3>
    2c72:	6b 01       	movw	r12, r22
    2c74:	7c 01       	movw	r14, r24
    2c76:	fd 89       	ldd	r31, Y+21	; 0x15
    2c78:	6f 2f       	mov	r22, r31
    2c7a:	70 e0       	ldi	r23, 0x00	; 0
    2c7c:	80 e0       	ldi	r24, 0x00	; 0
    2c7e:	90 e0       	ldi	r25, 0x00	; 0
    2c80:	0e 94 1e 1a 	call	0x343c	; 0x343c <__floatsisf>
    2c84:	69 87       	std	Y+9, r22	; 0x09
    2c86:	7a 87       	std	Y+10, r23	; 0x0a
    2c88:	8b 87       	std	Y+11, r24	; 0x0b
    2c8a:	9c 87       	std	Y+12, r25	; 0x0c
    2c8c:	69 89       	ldd	r22, Y+17	; 0x11
    2c8e:	7a 89       	ldd	r23, Y+18	; 0x12
    2c90:	8b 89       	ldd	r24, Y+19	; 0x13
    2c92:	9c 89       	ldd	r25, Y+20	; 0x14
    2c94:	0e 94 7a 1b 	call	0x36f4	; 0x36f4 <sin>
    2c98:	6d 87       	std	Y+13, r22	; 0x0d
    2c9a:	7e 87       	std	Y+14, r23	; 0x0e
    2c9c:	8f 87       	std	Y+15, r24	; 0x0f
    2c9e:	98 8b       	std	Y+16, r25	; 0x10
    2ca0:	9b 01       	movw	r18, r22
    2ca2:	ac 01       	movw	r20, r24
    2ca4:	69 85       	ldd	r22, Y+9	; 0x09
    2ca6:	7a 85       	ldd	r23, Y+10	; 0x0a
    2ca8:	8b 85       	ldd	r24, Y+11	; 0x0b
    2caa:	9c 85       	ldd	r25, Y+12	; 0x0c
    2cac:	0e 94 0d 1b 	call	0x361a	; 0x361a <__mulsf3>
    2cb0:	9b 01       	movw	r18, r22
    2cb2:	ac 01       	movw	r20, r24
    2cb4:	c7 01       	movw	r24, r14
    2cb6:	b6 01       	movw	r22, r12
    2cb8:	0e 94 fd 18 	call	0x31fa	; 0x31fa <__subsf3>
    2cbc:	6b 01       	movw	r12, r22
    2cbe:	7c 01       	movw	r14, r24
    2cc0:	b3 01       	movw	r22, r6
    2cc2:	07 2c       	mov	r0, r7
    2cc4:	00 0c       	add	r0, r0
    2cc6:	88 0b       	sbc	r24, r24
    2cc8:	99 0b       	sbc	r25, r25
    2cca:	0e 94 1e 1a 	call	0x343c	; 0x343c <__floatsisf>
    2cce:	a7 01       	movw	r20, r14
    2cd0:	96 01       	movw	r18, r12
    2cd2:	0e 94 fe 18 	call	0x31fc	; 0x31fc <__addsf3>
    2cd6:	0e 94 e6 19 	call	0x33cc	; 0x33cc <__fixsfsi>
    2cda:	6b 01       	movw	r12, r22
    2cdc:	7c 01       	movw	r14, r24
    2cde:	29 85       	ldd	r18, Y+9	; 0x09
    2ce0:	3a 85       	ldd	r19, Y+10	; 0x0a
    2ce2:	4b 85       	ldd	r20, Y+11	; 0x0b
    2ce4:	5c 85       	ldd	r21, Y+12	; 0x0c
    2ce6:	6d 81       	ldd	r22, Y+5	; 0x05
    2ce8:	7e 81       	ldd	r23, Y+6	; 0x06
    2cea:	8f 81       	ldd	r24, Y+7	; 0x07
    2cec:	98 85       	ldd	r25, Y+8	; 0x08
    2cee:	0e 94 0d 1b 	call	0x361a	; 0x361a <__mulsf3>
    2cf2:	6d 83       	std	Y+5, r22	; 0x05
    2cf4:	7e 83       	std	Y+6, r23	; 0x06
    2cf6:	8f 83       	std	Y+7, r24	; 0x07
    2cf8:	98 87       	std	Y+8, r25	; 0x08
    2cfa:	2d 85       	ldd	r18, Y+13	; 0x0d
    2cfc:	3e 85       	ldd	r19, Y+14	; 0x0e
    2cfe:	4f 85       	ldd	r20, Y+15	; 0x0f
    2d00:	58 89       	ldd	r21, Y+16	; 0x10
    2d02:	69 81       	ldd	r22, Y+1	; 0x01
    2d04:	7a 81       	ldd	r23, Y+2	; 0x02
    2d06:	8b 81       	ldd	r24, Y+3	; 0x03
    2d08:	9c 81       	ldd	r25, Y+4	; 0x04
    2d0a:	0e 94 0d 1b 	call	0x361a	; 0x361a <__mulsf3>
    2d0e:	9b 01       	movw	r18, r22
    2d10:	ac 01       	movw	r20, r24
    2d12:	6d 81       	ldd	r22, Y+5	; 0x05
    2d14:	7e 81       	ldd	r23, Y+6	; 0x06
    2d16:	8f 81       	ldd	r24, Y+7	; 0x07
    2d18:	98 85       	ldd	r25, Y+8	; 0x08
    2d1a:	0e 94 fe 18 	call	0x31fc	; 0x31fc <__addsf3>
    2d1e:	69 83       	std	Y+1, r22	; 0x01
    2d20:	7a 83       	std	Y+2, r23	; 0x02
    2d22:	8b 83       	std	Y+3, r24	; 0x03
    2d24:	9c 83       	std	Y+4, r25	; 0x04
    2d26:	b4 01       	movw	r22, r8
    2d28:	09 2c       	mov	r0, r9
    2d2a:	00 0c       	add	r0, r0
    2d2c:	88 0b       	sbc	r24, r24
    2d2e:	99 0b       	sbc	r25, r25
    2d30:	0e 94 1e 1a 	call	0x343c	; 0x343c <__floatsisf>
    2d34:	29 81       	ldd	r18, Y+1	; 0x01
    2d36:	3a 81       	ldd	r19, Y+2	; 0x02
    2d38:	4b 81       	ldd	r20, Y+3	; 0x03
    2d3a:	5c 81       	ldd	r21, Y+4	; 0x04
    2d3c:	0e 94 fe 18 	call	0x31fc	; 0x31fc <__addsf3>
    2d40:	0e 94 e6 19 	call	0x33cc	; 0x33cc <__fixsfsi>
    2d44:	8b 01       	movw	r16, r22
    2d46:	0f 5f       	subi	r16, 0xFF	; 255
    2d48:	1f 4f       	sbci	r17, 0xFF	; 255
    2d4a:	96 01       	movw	r18, r12
    2d4c:	2f 5f       	subi	r18, 0xFF	; 255
    2d4e:	3f 4f       	sbci	r19, 0xFF	; 255
    2d50:	ab 01       	movw	r20, r22
    2d52:	b6 01       	movw	r22, r12
    2d54:	c5 01       	movw	r24, r10
    2d56:	0e 94 b0 12 	call	0x2560	; 0x2560 <_ZN4UTFT5setXYEjjjj>
    2d5a:	27 e0       	ldi	r18, 0x07	; 7
    2d5c:	30 e0       	ldi	r19, 0x00	; 0
    2d5e:	22 19       	sub	r18, r2
    2d60:	33 09       	sbc	r19, r3
    2d62:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2d64:	84 2f       	mov	r24, r20
    2d66:	90 e0       	ldi	r25, 0x00	; 0
    2d68:	02 c0       	rjmp	.+4      	; 0x2d6e <_ZN4UTFT10rotateCharEhiiii+0x24e>
    2d6a:	95 95       	asr	r25
    2d6c:	87 95       	ror	r24
    2d6e:	2a 95       	dec	r18
    2d70:	e2 f7       	brpl	.-8      	; 0x2d6a <_ZN4UTFT10rotateCharEhiiii+0x24a>
    2d72:	80 ff       	sbrs	r24, 0
    2d74:	0c c0       	rjmp	.+24     	; 0x2d8e <_ZN4UTFT10rotateCharEhiiii+0x26e>
    2d76:	d5 01       	movw	r26, r10
    2d78:	6c 91       	ld	r22, X
    2d7a:	70 e0       	ldi	r23, 0x00	; 0
    2d7c:	76 2f       	mov	r23, r22
    2d7e:	66 27       	eor	r22, r22
    2d80:	11 96       	adiw	r26, 0x01	; 1
    2d82:	8c 91       	ld	r24, X
    2d84:	68 2b       	or	r22, r24
    2d86:	c5 01       	movw	r24, r10
    2d88:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <_ZN4UTFT8setPixelEj>
    2d8c:	0a c0       	rjmp	.+20     	; 0x2da2 <_ZN4UTFT10rotateCharEhiiii+0x282>
    2d8e:	f5 01       	movw	r30, r10
    2d90:	62 81       	ldd	r22, Z+2	; 0x02
    2d92:	70 e0       	ldi	r23, 0x00	; 0
    2d94:	76 2f       	mov	r23, r22
    2d96:	66 27       	eor	r22, r22
    2d98:	83 81       	ldd	r24, Z+3	; 0x03
    2d9a:	68 2b       	or	r22, r24
    2d9c:	c5 01       	movw	r24, r10
    2d9e:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <_ZN4UTFT8setPixelEj>
    2da2:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2da4:	ff 5f       	subi	r31, 0xFF	; 255
    2da6:	fa 8f       	std	Y+26, r31	; 0x1a
    2da8:	2d cf       	rjmp	.-422    	; 0x2c04 <_ZN4UTFT10rotateCharEhiiii+0xe4>
    2daa:	2f ef       	ldi	r18, 0xFF	; 255
    2dac:	42 1a       	sub	r4, r18
    2dae:	52 0a       	sbc	r5, r18
    2db0:	11 cf       	rjmp	.-478    	; 0x2bd4 <_ZN4UTFT10rotateCharEhiiii+0xb4>
    2db2:	48 8d       	ldd	r20, Y+24	; 0x18
    2db4:	59 8d       	ldd	r21, Y+25	; 0x19
    2db6:	48 0f       	add	r20, r24
    2db8:	51 1d       	adc	r21, r1
    2dba:	59 8f       	std	Y+25, r21	; 0x19
    2dbc:	48 8f       	std	Y+24, r20	; 0x18
    2dbe:	5d 89       	ldd	r21, Y+21	; 0x15
    2dc0:	5f 5f       	subi	r21, 0xFF	; 255
    2dc2:	5d 8b       	std	Y+21, r21	; 0x15
    2dc4:	fe ce       	rjmp	.-516    	; 0x2bc2 <_ZN4UTFT10rotateCharEhiiii+0xa2>
    2dc6:	85 b3       	in	r24, 0x15	; 21
    2dc8:	81 60       	ori	r24, 0x01	; 1
    2dca:	85 bb       	out	0x15, r24	; 21
    2dcc:	6b 96       	adiw	r28, 0x1b	; 27
    2dce:	0f b6       	in	r0, 0x3f	; 63
    2dd0:	f8 94       	cli
    2dd2:	de bf       	out	0x3e, r29	; 62
    2dd4:	0f be       	out	0x3f, r0	; 63
    2dd6:	cd bf       	out	0x3d, r28	; 61
    2dd8:	df 91       	pop	r29
    2dda:	cf 91       	pop	r28
    2ddc:	1f 91       	pop	r17
    2dde:	0f 91       	pop	r16
    2de0:	ff 90       	pop	r15
    2de2:	ef 90       	pop	r14
    2de4:	df 90       	pop	r13
    2de6:	cf 90       	pop	r12
    2de8:	bf 90       	pop	r11
    2dea:	af 90       	pop	r10
    2dec:	9f 90       	pop	r9
    2dee:	8f 90       	pop	r8
    2df0:	7f 90       	pop	r7
    2df2:	6f 90       	pop	r6
    2df4:	5f 90       	pop	r5
    2df6:	4f 90       	pop	r4
    2df8:	3f 90       	pop	r3
    2dfa:	2f 90       	pop	r2
    2dfc:	08 95       	ret

00002dfe <_ZN4UTFT5printEPKciii>:
    2dfe:	2f 92       	push	r2
    2e00:	3f 92       	push	r3
    2e02:	4f 92       	push	r4
    2e04:	5f 92       	push	r5
    2e06:	6f 92       	push	r6
    2e08:	7f 92       	push	r7
    2e0a:	8f 92       	push	r8
    2e0c:	9f 92       	push	r9
    2e0e:	af 92       	push	r10
    2e10:	bf 92       	push	r11
    2e12:	cf 92       	push	r12
    2e14:	df 92       	push	r13
    2e16:	ef 92       	push	r14
    2e18:	ff 92       	push	r15
    2e1a:	0f 93       	push	r16
    2e1c:	1f 93       	push	r17
    2e1e:	cf 93       	push	r28
    2e20:	df 93       	push	r29
    2e22:	ec 01       	movw	r28, r24
    2e24:	fb 01       	movw	r30, r22
    2e26:	5a 01       	movw	r10, r20
    2e28:	29 01       	movw	r4, r18
    2e2a:	68 01       	movw	r12, r16
    2e2c:	db 01       	movw	r26, r22
    2e2e:	0d 90       	ld	r0, X+
    2e30:	00 20       	and	r0, r0
    2e32:	e9 f7       	brne	.-6      	; 0x2e2e <_ZN4UTFT5printEPKciii+0x30>
    2e34:	11 97       	sbiw	r26, 0x01	; 1
    2e36:	a6 1b       	sub	r26, r22
    2e38:	b7 0b       	sbc	r27, r23
    2e3a:	4d 01       	movw	r8, r26
    2e3c:	8c 81       	ldd	r24, Y+4	; 0x04
    2e3e:	81 11       	cpse	r24, r1
    2e40:	3e c0       	rjmp	.+124    	; 0x2ebe <_ZN4UTFT5printEPKciii+0xc0>
    2e42:	4f 30       	cpi	r20, 0x0F	; 15
    2e44:	57 42       	sbci	r21, 0x27	; 39
    2e46:	81 f4       	brne	.+32     	; 0x2e68 <_ZN4UTFT5printEPKciii+0x6a>
    2e48:	4d 81       	ldd	r20, Y+5	; 0x05
    2e4a:	5e 81       	ldd	r21, Y+6	; 0x06
    2e4c:	6f 81       	ldd	r22, Y+7	; 0x07
    2e4e:	78 85       	ldd	r23, Y+8	; 0x08
    2e50:	2f 85       	ldd	r18, Y+15	; 0x0f
    2e52:	2a 9f       	mul	r18, r26
    2e54:	c0 01       	movw	r24, r0
    2e56:	2b 9f       	mul	r18, r27
    2e58:	90 0d       	add	r25, r0
    2e5a:	11 24       	eor	r1, r1
    2e5c:	48 1b       	sub	r20, r24
    2e5e:	59 0b       	sbc	r21, r25
    2e60:	5a 01       	movw	r10, r20
    2e62:	1f ef       	ldi	r17, 0xFF	; 255
    2e64:	a1 1a       	sub	r10, r17
    2e66:	b1 0a       	sbc	r11, r17
    2e68:	2e e0       	ldi	r18, 0x0E	; 14
    2e6a:	a2 16       	cp	r10, r18
    2e6c:	27 e2       	ldi	r18, 0x27	; 39
    2e6e:	b2 06       	cpc	r11, r18
    2e70:	09 f0       	breq	.+2      	; 0x2e74 <_ZN4UTFT5printEPKciii+0x76>
    2e72:	61 c0       	rjmp	.+194    	; 0x2f36 <_ZN4UTFT5printEPKciii+0x138>
    2e74:	4d 81       	ldd	r20, Y+5	; 0x05
    2e76:	5e 81       	ldd	r21, Y+6	; 0x06
    2e78:	6f 81       	ldd	r22, Y+7	; 0x07
    2e7a:	78 85       	ldd	r23, Y+8	; 0x08
    2e7c:	4f 5f       	subi	r20, 0xFF	; 255
    2e7e:	5f 4f       	sbci	r21, 0xFF	; 255
    2e80:	6f 4f       	sbci	r22, 0xFF	; 255
    2e82:	7f 4f       	sbci	r23, 0xFF	; 255
    2e84:	2f 85       	ldd	r18, Y+15	; 0x0f
    2e86:	2a 9f       	mul	r18, r26
    2e88:	c0 01       	movw	r24, r0
    2e8a:	2b 9f       	mul	r18, r27
    2e8c:	90 0d       	add	r25, r0
    2e8e:	11 24       	eor	r1, r1
    2e90:	09 2e       	mov	r0, r25
    2e92:	00 0c       	add	r0, r0
    2e94:	aa 0b       	sbc	r26, r26
    2e96:	bb 0b       	sbc	r27, r27
    2e98:	8a 01       	movw	r16, r20
    2e9a:	9b 01       	movw	r18, r22
    2e9c:	08 1b       	sub	r16, r24
    2e9e:	19 0b       	sbc	r17, r25
    2ea0:	2a 0b       	sbc	r18, r26
    2ea2:	3b 0b       	sbc	r19, r27
    2ea4:	b9 01       	movw	r22, r18
    2ea6:	a8 01       	movw	r20, r16
    2ea8:	22 f4       	brpl	.+8      	; 0x2eb2 <_ZN4UTFT5printEPKciii+0xb4>
    2eaa:	4f 5f       	subi	r20, 0xFF	; 255
    2eac:	5f 4f       	sbci	r21, 0xFF	; 255
    2eae:	6f 4f       	sbci	r22, 0xFF	; 255
    2eb0:	7f 4f       	sbci	r23, 0xFF	; 255
    2eb2:	75 95       	asr	r23
    2eb4:	67 95       	ror	r22
    2eb6:	57 95       	ror	r21
    2eb8:	47 95       	ror	r20
    2eba:	5a 01       	movw	r10, r20
    2ebc:	3c c0       	rjmp	.+120    	; 0x2f36 <_ZN4UTFT5printEPKciii+0x138>
    2ebe:	4f 30       	cpi	r20, 0x0F	; 15
    2ec0:	57 42       	sbci	r21, 0x27	; 39
    2ec2:	81 f4       	brne	.+32     	; 0x2ee4 <_ZN4UTFT5printEPKciii+0xe6>
    2ec4:	49 85       	ldd	r20, Y+9	; 0x09
    2ec6:	5a 85       	ldd	r21, Y+10	; 0x0a
    2ec8:	6b 85       	ldd	r22, Y+11	; 0x0b
    2eca:	7c 85       	ldd	r23, Y+12	; 0x0c
    2ecc:	2f 85       	ldd	r18, Y+15	; 0x0f
    2ece:	2a 9f       	mul	r18, r26
    2ed0:	c0 01       	movw	r24, r0
    2ed2:	2b 9f       	mul	r18, r27
    2ed4:	90 0d       	add	r25, r0
    2ed6:	11 24       	eor	r1, r1
    2ed8:	48 1b       	sub	r20, r24
    2eda:	59 0b       	sbc	r21, r25
    2edc:	5a 01       	movw	r10, r20
    2ede:	2f ef       	ldi	r18, 0xFF	; 255
    2ee0:	a2 1a       	sub	r10, r18
    2ee2:	b2 0a       	sbc	r11, r18
    2ee4:	3e e0       	ldi	r19, 0x0E	; 14
    2ee6:	a3 16       	cp	r10, r19
    2ee8:	37 e2       	ldi	r19, 0x27	; 39
    2eea:	b3 06       	cpc	r11, r19
    2eec:	21 f5       	brne	.+72     	; 0x2f36 <_ZN4UTFT5printEPKciii+0x138>
    2eee:	49 85       	ldd	r20, Y+9	; 0x09
    2ef0:	5a 85       	ldd	r21, Y+10	; 0x0a
    2ef2:	6b 85       	ldd	r22, Y+11	; 0x0b
    2ef4:	7c 85       	ldd	r23, Y+12	; 0x0c
    2ef6:	4f 5f       	subi	r20, 0xFF	; 255
    2ef8:	5f 4f       	sbci	r21, 0xFF	; 255
    2efa:	6f 4f       	sbci	r22, 0xFF	; 255
    2efc:	7f 4f       	sbci	r23, 0xFF	; 255
    2efe:	2f 85       	ldd	r18, Y+15	; 0x0f
    2f00:	2a 9f       	mul	r18, r26
    2f02:	c0 01       	movw	r24, r0
    2f04:	2b 9f       	mul	r18, r27
    2f06:	90 0d       	add	r25, r0
    2f08:	11 24       	eor	r1, r1
    2f0a:	09 2e       	mov	r0, r25
    2f0c:	00 0c       	add	r0, r0
    2f0e:	aa 0b       	sbc	r26, r26
    2f10:	bb 0b       	sbc	r27, r27
    2f12:	8a 01       	movw	r16, r20
    2f14:	9b 01       	movw	r18, r22
    2f16:	08 1b       	sub	r16, r24
    2f18:	19 0b       	sbc	r17, r25
    2f1a:	2a 0b       	sbc	r18, r26
    2f1c:	3b 0b       	sbc	r19, r27
    2f1e:	b9 01       	movw	r22, r18
    2f20:	a8 01       	movw	r20, r16
    2f22:	22 f4       	brpl	.+8      	; 0x2f2c <_ZN4UTFT5printEPKciii+0x12e>
    2f24:	4f 5f       	subi	r20, 0xFF	; 255
    2f26:	5f 4f       	sbci	r21, 0xFF	; 255
    2f28:	6f 4f       	sbci	r22, 0xFF	; 255
    2f2a:	7f 4f       	sbci	r23, 0xFF	; 255
    2f2c:	75 95       	asr	r23
    2f2e:	67 95       	ror	r22
    2f30:	57 95       	ror	r21
    2f32:	47 95       	ror	r20
    2f34:	5a 01       	movw	r10, r20
    2f36:	61 2c       	mov	r6, r1
    2f38:	71 2c       	mov	r7, r1
    2f3a:	68 14       	cp	r6, r8
    2f3c:	79 04       	cpc	r7, r9
    2f3e:	3c f5       	brge	.+78     	; 0x2f8e <_ZN4UTFT5printEPKciii+0x190>
    2f40:	c1 14       	cp	r12, r1
    2f42:	d1 04       	cpc	r13, r1
    2f44:	99 f4       	brne	.+38     	; 0x2f6c <_ZN4UTFT5printEPKciii+0x16e>
    2f46:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f48:	86 9d       	mul	r24, r6
    2f4a:	a0 01       	movw	r20, r0
    2f4c:	87 9d       	mul	r24, r7
    2f4e:	50 0d       	add	r21, r0
    2f50:	11 24       	eor	r1, r1
    2f52:	4a 0d       	add	r20, r10
    2f54:	5b 1d       	adc	r21, r11
    2f56:	1f 01       	movw	r2, r30
    2f58:	1f ef       	ldi	r17, 0xFF	; 255
    2f5a:	21 1a       	sub	r2, r17
    2f5c:	31 0a       	sbc	r3, r17
    2f5e:	60 81       	ld	r22, Z
    2f60:	92 01       	movw	r18, r4
    2f62:	ce 01       	movw	r24, r28
    2f64:	0e 94 97 14 	call	0x292e	; 0x292e <_ZN4UTFT9printCharEhii>
    2f68:	f1 01       	movw	r30, r2
    2f6a:	0d c0       	rjmp	.+26     	; 0x2f86 <_ZN4UTFT5printEPKciii+0x188>
    2f6c:	1f 01       	movw	r2, r30
    2f6e:	2f ef       	ldi	r18, 0xFF	; 255
    2f70:	22 1a       	sub	r2, r18
    2f72:	32 0a       	sbc	r3, r18
    2f74:	60 81       	ld	r22, Z
    2f76:	76 01       	movw	r14, r12
    2f78:	83 01       	movw	r16, r6
    2f7a:	92 01       	movw	r18, r4
    2f7c:	a5 01       	movw	r20, r10
    2f7e:	ce 01       	movw	r24, r28
    2f80:	0e 94 90 15 	call	0x2b20	; 0x2b20 <_ZN4UTFT10rotateCharEhiiii>
    2f84:	f1 01       	movw	r30, r2
    2f86:	3f ef       	ldi	r19, 0xFF	; 255
    2f88:	63 1a       	sub	r6, r19
    2f8a:	73 0a       	sbc	r7, r19
    2f8c:	d6 cf       	rjmp	.-84     	; 0x2f3a <_ZN4UTFT5printEPKciii+0x13c>
    2f8e:	df 91       	pop	r29
    2f90:	cf 91       	pop	r28
    2f92:	1f 91       	pop	r17
    2f94:	0f 91       	pop	r16
    2f96:	ff 90       	pop	r15
    2f98:	ef 90       	pop	r14
    2f9a:	df 90       	pop	r13
    2f9c:	cf 90       	pop	r12
    2f9e:	bf 90       	pop	r11
    2fa0:	af 90       	pop	r10
    2fa2:	9f 90       	pop	r9
    2fa4:	8f 90       	pop	r8
    2fa6:	7f 90       	pop	r7
    2fa8:	6f 90       	pop	r6
    2faa:	5f 90       	pop	r5
    2fac:	4f 90       	pop	r4
    2fae:	3f 90       	pop	r3
    2fb0:	2f 90       	pop	r2
    2fb2:	08 95       	ret

00002fb4 <_ZN4UTFT9printNumIEliiic>:
    2fb4:	2f 92       	push	r2
    2fb6:	3f 92       	push	r3
    2fb8:	4f 92       	push	r4
    2fba:	5f 92       	push	r5
    2fbc:	6f 92       	push	r6
    2fbe:	7f 92       	push	r7
    2fc0:	8f 92       	push	r8
    2fc2:	9f 92       	push	r9
    2fc4:	af 92       	push	r10
    2fc6:	bf 92       	push	r11
    2fc8:	cf 92       	push	r12
    2fca:	df 92       	push	r13
    2fcc:	ef 92       	push	r14
    2fce:	ff 92       	push	r15
    2fd0:	0f 93       	push	r16
    2fd2:	1f 93       	push	r17
    2fd4:	cf 93       	push	r28
    2fd6:	df 93       	push	r29
    2fd8:	cd b7       	in	r28, 0x3d	; 61
    2fda:	de b7       	in	r29, 0x3e	; 62
    2fdc:	e8 97       	sbiw	r28, 0x38	; 56
    2fde:	0f b6       	in	r0, 0x3f	; 63
    2fe0:	f8 94       	cli
    2fe2:	de bf       	out	0x3e, r29	; 62
    2fe4:	0f be       	out	0x3f, r0	; 63
    2fe6:	cd bf       	out	0x3d, r28	; 61
    2fe8:	1c 01       	movw	r2, r24
    2fea:	4a 01       	movw	r8, r20
    2fec:	5b 01       	movw	r10, r22
    2fee:	3e ab       	std	Y+54, r19	; 0x36
    2ff0:	2d ab       	std	Y+53, r18	; 0x35
    2ff2:	18 af       	std	Y+56, r17	; 0x38
    2ff4:	0f ab       	std	Y+55, r16	; 0x37
    2ff6:	41 15       	cp	r20, r1
    2ff8:	51 05       	cpc	r21, r1
    2ffa:	61 05       	cpc	r22, r1
    2ffc:	71 05       	cpc	r23, r1
    2ffe:	49 f5       	brne	.+82     	; 0x3052 <_ZN4UTFT9printNumIEliiic+0x9e>
    3000:	e1 14       	cp	r14, r1
    3002:	f1 04       	cpc	r15, r1
    3004:	11 f1       	breq	.+68     	; 0x304a <_ZN4UTFT9printNumIEliiic+0x96>
    3006:	80 e0       	ldi	r24, 0x00	; 0
    3008:	90 e0       	ldi	r25, 0x00	; 0
    300a:	97 01       	movw	r18, r14
    300c:	21 50       	subi	r18, 0x01	; 1
    300e:	31 09       	sbc	r19, r1
    3010:	82 17       	cp	r24, r18
    3012:	93 07       	cpc	r25, r19
    3014:	4c f4       	brge	.+18     	; 0x3028 <_ZN4UTFT9printNumIEliiic+0x74>
    3016:	ea e1       	ldi	r30, 0x1A	; 26
    3018:	f0 e0       	ldi	r31, 0x00	; 0
    301a:	ec 0f       	add	r30, r28
    301c:	fd 1f       	adc	r31, r29
    301e:	e8 0f       	add	r30, r24
    3020:	f9 1f       	adc	r31, r25
    3022:	c0 82       	st	Z, r12
    3024:	01 96       	adiw	r24, 0x01	; 1
    3026:	f1 cf       	rjmp	.-30     	; 0x300a <_ZN4UTFT9printNumIEliiic+0x56>
    3028:	ea e1       	ldi	r30, 0x1A	; 26
    302a:	f0 e0       	ldi	r31, 0x00	; 0
    302c:	ec 0f       	add	r30, r28
    302e:	fd 1f       	adc	r31, r29
    3030:	e8 0f       	add	r30, r24
    3032:	f9 1f       	adc	r31, r25
    3034:	20 e3       	ldi	r18, 0x30	; 48
    3036:	20 83       	st	Z, r18
    3038:	01 96       	adiw	r24, 0x01	; 1
    303a:	ea e1       	ldi	r30, 0x1A	; 26
    303c:	f0 e0       	ldi	r31, 0x00	; 0
    303e:	ec 0f       	add	r30, r28
    3040:	fd 1f       	adc	r31, r29
    3042:	e8 0f       	add	r30, r24
    3044:	f9 1f       	adc	r31, r25
    3046:	10 82       	st	Z, r1
    3048:	98 c0       	rjmp	.+304    	; 0x317a <_ZN4UTFT9printNumIEliiic+0x1c6>
    304a:	80 e3       	ldi	r24, 0x30	; 48
    304c:	8a 8f       	std	Y+26, r24	; 0x1a
    304e:	1b 8e       	std	Y+27, r1	; 0x1b
    3050:	94 c0       	rjmp	.+296    	; 0x317a <_ZN4UTFT9printNumIEliiic+0x1c6>
    3052:	77 23       	and	r23, r23
    3054:	5c f4       	brge	.+22     	; 0x306c <_ZN4UTFT9printNumIEliiic+0xb8>
    3056:	b0 94       	com	r11
    3058:	a0 94       	com	r10
    305a:	90 94       	com	r9
    305c:	80 94       	com	r8
    305e:	81 1c       	adc	r8, r1
    3060:	91 1c       	adc	r9, r1
    3062:	a1 1c       	adc	r10, r1
    3064:	b1 1c       	adc	r11, r1
    3066:	dd 24       	eor	r13, r13
    3068:	d3 94       	inc	r13
    306a:	01 c0       	rjmp	.+2      	; 0x306e <_ZN4UTFT9printNumIEliiic+0xba>
    306c:	d1 2c       	mov	r13, r1
    306e:	00 e0       	ldi	r16, 0x00	; 0
    3070:	10 e0       	ldi	r17, 0x00	; 0
    3072:	18 14       	cp	r1, r8
    3074:	19 04       	cpc	r1, r9
    3076:	1a 04       	cpc	r1, r10
    3078:	1b 04       	cpc	r1, r11
    307a:	3c f5       	brge	.+78     	; 0x30ca <_ZN4UTFT9printNumIEliiic+0x116>
    307c:	0f 2e       	mov	r0, r31
    307e:	fa e0       	ldi	r31, 0x0A	; 10
    3080:	4f 2e       	mov	r4, r31
    3082:	51 2c       	mov	r5, r1
    3084:	61 2c       	mov	r6, r1
    3086:	71 2c       	mov	r7, r1
    3088:	f0 2d       	mov	r31, r0
    308a:	c5 01       	movw	r24, r10
    308c:	b4 01       	movw	r22, r8
    308e:	a3 01       	movw	r20, r6
    3090:	92 01       	movw	r18, r4
    3092:	0e 94 fd 1b 	call	0x37fa	; 0x37fa <__divmodsi4>
    3096:	e1 e0       	ldi	r30, 0x01	; 1
    3098:	f0 e0       	ldi	r31, 0x00	; 0
    309a:	ec 0f       	add	r30, r28
    309c:	fd 1f       	adc	r31, r29
    309e:	e0 0f       	add	r30, r16
    30a0:	f1 1f       	adc	r31, r17
    30a2:	20 e3       	ldi	r18, 0x30	; 48
    30a4:	26 0f       	add	r18, r22
    30a6:	20 83       	st	Z, r18
    30a8:	0f 5f       	subi	r16, 0xFF	; 255
    30aa:	1f 4f       	sbci	r17, 0xFF	; 255
    30ac:	a5 01       	movw	r20, r10
    30ae:	94 01       	movw	r18, r8
    30b0:	26 1b       	sub	r18, r22
    30b2:	37 0b       	sbc	r19, r23
    30b4:	48 0b       	sbc	r20, r24
    30b6:	59 0b       	sbc	r21, r25
    30b8:	ca 01       	movw	r24, r20
    30ba:	b9 01       	movw	r22, r18
    30bc:	a3 01       	movw	r20, r6
    30be:	92 01       	movw	r18, r4
    30c0:	0e 94 fd 1b 	call	0x37fa	; 0x37fa <__divmodsi4>
    30c4:	49 01       	movw	r8, r18
    30c6:	5a 01       	movw	r10, r20
    30c8:	d4 cf       	rjmp	.-88     	; 0x3072 <_ZN4UTFT9printNumIEliiic+0xbe>
    30ca:	e1 e0       	ldi	r30, 0x01	; 1
    30cc:	f0 e0       	ldi	r31, 0x00	; 0
    30ce:	ec 0f       	add	r30, r28
    30d0:	fd 1f       	adc	r31, r29
    30d2:	e0 0f       	add	r30, r16
    30d4:	f1 1f       	adc	r31, r17
    30d6:	10 82       	st	Z, r1
    30d8:	dd 20       	and	r13, r13
    30da:	11 f0       	breq	.+4      	; 0x30e0 <_ZN4UTFT9printNumIEliiic+0x12c>
    30dc:	8d e2       	ldi	r24, 0x2D	; 45
    30de:	8a 8f       	std	Y+26, r24	; 0x1a
    30e0:	2d 2d       	mov	r18, r13
    30e2:	30 e0       	ldi	r19, 0x00	; 0
    30e4:	b8 01       	movw	r22, r16
    30e6:	62 0f       	add	r22, r18
    30e8:	73 1f       	adc	r23, r19
    30ea:	6e 15       	cp	r22, r14
    30ec:	7f 05       	cpc	r23, r15
    30ee:	d4 f4       	brge	.+52     	; 0x3124 <_ZN4UTFT9printNumIEliiic+0x170>
    30f0:	80 e0       	ldi	r24, 0x00	; 0
    30f2:	90 e0       	ldi	r25, 0x00	; 0
    30f4:	40 e0       	ldi	r20, 0x00	; 0
    30f6:	50 e0       	ldi	r21, 0x00	; 0
    30f8:	f7 01       	movw	r30, r14
    30fa:	e0 1b       	sub	r30, r16
    30fc:	f1 0b       	sbc	r31, r17
    30fe:	e2 1b       	sub	r30, r18
    3100:	f3 0b       	sbc	r31, r19
    3102:	8e 17       	cp	r24, r30
    3104:	9f 07       	cpc	r25, r31
    3106:	84 f4       	brge	.+32     	; 0x3128 <_ZN4UTFT9printNumIEliiic+0x174>
    3108:	fc 01       	movw	r30, r24
    310a:	e2 0f       	add	r30, r18
    310c:	f3 1f       	adc	r31, r19
    310e:	aa e1       	ldi	r26, 0x1A	; 26
    3110:	b0 e0       	ldi	r27, 0x00	; 0
    3112:	ac 0f       	add	r26, r28
    3114:	bd 1f       	adc	r27, r29
    3116:	ea 0f       	add	r30, r26
    3118:	fb 1f       	adc	r31, r27
    311a:	c0 82       	st	Z, r12
    311c:	4f 5f       	subi	r20, 0xFF	; 255
    311e:	5f 4f       	sbci	r21, 0xFF	; 255
    3120:	01 96       	adiw	r24, 0x01	; 1
    3122:	ea cf       	rjmp	.-44     	; 0x30f8 <_ZN4UTFT9printNumIEliiic+0x144>
    3124:	40 e0       	ldi	r20, 0x00	; 0
    3126:	50 e0       	ldi	r21, 0x00	; 0
    3128:	a0 e0       	ldi	r26, 0x00	; 0
    312a:	b0 e0       	ldi	r27, 0x00	; 0
    312c:	a0 17       	cp	r26, r16
    312e:	b1 07       	cpc	r27, r17
    3130:	dc f4       	brge	.+54     	; 0x3168 <_ZN4UTFT9printNumIEliiic+0x1b4>
    3132:	fd 01       	movw	r30, r26
    3134:	e2 0f       	add	r30, r18
    3136:	f3 1f       	adc	r31, r19
    3138:	6f 01       	movw	r12, r30
    313a:	c4 0e       	add	r12, r20
    313c:	d5 1e       	adc	r13, r21
    313e:	c8 01       	movw	r24, r16
    3140:	8a 1b       	sub	r24, r26
    3142:	9b 0b       	sbc	r25, r27
    3144:	01 97       	sbiw	r24, 0x01	; 1
    3146:	e1 e0       	ldi	r30, 0x01	; 1
    3148:	f0 e0       	ldi	r31, 0x00	; 0
    314a:	ec 0f       	add	r30, r28
    314c:	fd 1f       	adc	r31, r29
    314e:	8e 0f       	add	r24, r30
    3150:	9f 1f       	adc	r25, r31
    3152:	fc 01       	movw	r30, r24
    3154:	80 81       	ld	r24, Z
    3156:	ea e1       	ldi	r30, 0x1A	; 26
    3158:	f0 e0       	ldi	r31, 0x00	; 0
    315a:	ec 0f       	add	r30, r28
    315c:	fd 1f       	adc	r31, r29
    315e:	ec 0d       	add	r30, r12
    3160:	fd 1d       	adc	r31, r13
    3162:	80 83       	st	Z, r24
    3164:	11 96       	adiw	r26, 0x01	; 1
    3166:	e2 cf       	rjmp	.-60     	; 0x312c <_ZN4UTFT9printNumIEliiic+0x178>
    3168:	46 0f       	add	r20, r22
    316a:	57 1f       	adc	r21, r23
    316c:	ea e1       	ldi	r30, 0x1A	; 26
    316e:	f0 e0       	ldi	r31, 0x00	; 0
    3170:	ec 0f       	add	r30, r28
    3172:	fd 1f       	adc	r31, r29
    3174:	e4 0f       	add	r30, r20
    3176:	f5 1f       	adc	r31, r21
    3178:	10 82       	st	Z, r1
    317a:	00 e0       	ldi	r16, 0x00	; 0
    317c:	10 e0       	ldi	r17, 0x00	; 0
    317e:	2f a9       	ldd	r18, Y+55	; 0x37
    3180:	38 ad       	ldd	r19, Y+56	; 0x38
    3182:	4d a9       	ldd	r20, Y+53	; 0x35
    3184:	5e a9       	ldd	r21, Y+54	; 0x36
    3186:	be 01       	movw	r22, r28
    3188:	66 5e       	subi	r22, 0xE6	; 230
    318a:	7f 4f       	sbci	r23, 0xFF	; 255
    318c:	c1 01       	movw	r24, r2
    318e:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <_ZN4UTFT5printEPKciii>
    3192:	e8 96       	adiw	r28, 0x38	; 56
    3194:	0f b6       	in	r0, 0x3f	; 63
    3196:	f8 94       	cli
    3198:	de bf       	out	0x3e, r29	; 62
    319a:	0f be       	out	0x3f, r0	; 63
    319c:	cd bf       	out	0x3d, r28	; 61
    319e:	df 91       	pop	r29
    31a0:	cf 91       	pop	r28
    31a2:	1f 91       	pop	r17
    31a4:	0f 91       	pop	r16
    31a6:	ff 90       	pop	r15
    31a8:	ef 90       	pop	r14
    31aa:	df 90       	pop	r13
    31ac:	cf 90       	pop	r12
    31ae:	bf 90       	pop	r11
    31b0:	af 90       	pop	r10
    31b2:	9f 90       	pop	r9
    31b4:	8f 90       	pop	r8
    31b6:	7f 90       	pop	r7
    31b8:	6f 90       	pop	r6
    31ba:	5f 90       	pop	r5
    31bc:	4f 90       	pop	r4
    31be:	3f 90       	pop	r3
    31c0:	2f 90       	pop	r2
    31c2:	08 95       	ret

000031c4 <_ZN4UTFT7setFontEPKh>:

void UTFT::setFont(const uint8_t* font)
{
    31c4:	dc 01       	movw	r26, r24
	cfont.font=font;
    31c6:	1e 96       	adiw	r26, 0x0e	; 14
    31c8:	7c 93       	st	X, r23
    31ca:	6e 93       	st	-X, r22
    31cc:	1d 97       	sbiw	r26, 0x0d	; 13
	cfont.x_size=fontbyte(0);
    31ce:	fb 01       	movw	r30, r22
    31d0:	84 91       	lpm	r24, Z
    31d2:	1f 96       	adiw	r26, 0x0f	; 15
    31d4:	8c 93       	st	X, r24
    31d6:	1f 97       	sbiw	r26, 0x0f	; 15
	cfont.y_size=fontbyte(1);
    31d8:	31 96       	adiw	r30, 0x01	; 1
    31da:	e4 91       	lpm	r30, Z
    31dc:	50 96       	adiw	r26, 0x10	; 16
    31de:	ec 93       	st	X, r30
    31e0:	50 97       	sbiw	r26, 0x10	; 16
	cfont.offset=fontbyte(2);
    31e2:	fb 01       	movw	r30, r22
    31e4:	32 96       	adiw	r30, 0x02	; 2
    31e6:	e4 91       	lpm	r30, Z
    31e8:	51 96       	adiw	r26, 0x11	; 17
    31ea:	ec 93       	st	X, r30
    31ec:	51 97       	sbiw	r26, 0x11	; 17
	cfont.numchars=fontbyte(3);
    31ee:	fb 01       	movw	r30, r22
    31f0:	33 96       	adiw	r30, 0x03	; 3
    31f2:	64 91       	lpm	r22, Z
    31f4:	52 96       	adiw	r26, 0x12	; 18
    31f6:	6c 93       	st	X, r22
    31f8:	08 95       	ret

000031fa <__subsf3>:
    31fa:	50 58       	subi	r21, 0x80	; 128

000031fc <__addsf3>:
    31fc:	bb 27       	eor	r27, r27
    31fe:	aa 27       	eor	r26, r26
    3200:	0e 94 15 19 	call	0x322a	; 0x322a <__addsf3x>
    3204:	0c 94 bf 1a 	jmp	0x357e	; 0x357e <__fp_round>
    3208:	0e 94 86 1a 	call	0x350c	; 0x350c <__fp_pscA>
    320c:	38 f0       	brcs	.+14     	; 0x321c <__addsf3+0x20>
    320e:	0e 94 8d 1a 	call	0x351a	; 0x351a <__fp_pscB>
    3212:	20 f0       	brcs	.+8      	; 0x321c <__addsf3+0x20>
    3214:	39 f4       	brne	.+14     	; 0x3224 <__addsf3+0x28>
    3216:	9f 3f       	cpi	r25, 0xFF	; 255
    3218:	19 f4       	brne	.+6      	; 0x3220 <__addsf3+0x24>
    321a:	26 f4       	brtc	.+8      	; 0x3224 <__addsf3+0x28>
    321c:	0c 94 83 1a 	jmp	0x3506	; 0x3506 <__fp_nan>
    3220:	0e f4       	brtc	.+2      	; 0x3224 <__addsf3+0x28>
    3222:	e0 95       	com	r30
    3224:	e7 fb       	bst	r30, 7
    3226:	0c 94 7d 1a 	jmp	0x34fa	; 0x34fa <__fp_inf>

0000322a <__addsf3x>:
    322a:	e9 2f       	mov	r30, r25
    322c:	0e 94 e4 1a 	call	0x35c8	; 0x35c8 <__fp_split3>
    3230:	58 f3       	brcs	.-42     	; 0x3208 <__addsf3+0xc>
    3232:	ba 17       	cp	r27, r26
    3234:	62 07       	cpc	r22, r18
    3236:	73 07       	cpc	r23, r19
    3238:	84 07       	cpc	r24, r20
    323a:	95 07       	cpc	r25, r21
    323c:	20 f0       	brcs	.+8      	; 0x3246 <__addsf3x+0x1c>
    323e:	79 f4       	brne	.+30     	; 0x325e <__addsf3x+0x34>
    3240:	a6 f5       	brtc	.+104    	; 0x32aa <__addsf3x+0x80>
    3242:	0c 94 06 1b 	jmp	0x360c	; 0x360c <__fp_zero>
    3246:	0e f4       	brtc	.+2      	; 0x324a <__addsf3x+0x20>
    3248:	e0 95       	com	r30
    324a:	0b 2e       	mov	r0, r27
    324c:	ba 2f       	mov	r27, r26
    324e:	a0 2d       	mov	r26, r0
    3250:	0b 01       	movw	r0, r22
    3252:	b9 01       	movw	r22, r18
    3254:	90 01       	movw	r18, r0
    3256:	0c 01       	movw	r0, r24
    3258:	ca 01       	movw	r24, r20
    325a:	a0 01       	movw	r20, r0
    325c:	11 24       	eor	r1, r1
    325e:	ff 27       	eor	r31, r31
    3260:	59 1b       	sub	r21, r25
    3262:	99 f0       	breq	.+38     	; 0x328a <__addsf3x+0x60>
    3264:	59 3f       	cpi	r21, 0xF9	; 249
    3266:	50 f4       	brcc	.+20     	; 0x327c <__addsf3x+0x52>
    3268:	50 3e       	cpi	r21, 0xE0	; 224
    326a:	68 f1       	brcs	.+90     	; 0x32c6 <__addsf3x+0x9c>
    326c:	1a 16       	cp	r1, r26
    326e:	f0 40       	sbci	r31, 0x00	; 0
    3270:	a2 2f       	mov	r26, r18
    3272:	23 2f       	mov	r18, r19
    3274:	34 2f       	mov	r19, r20
    3276:	44 27       	eor	r20, r20
    3278:	58 5f       	subi	r21, 0xF8	; 248
    327a:	f3 cf       	rjmp	.-26     	; 0x3262 <__addsf3x+0x38>
    327c:	46 95       	lsr	r20
    327e:	37 95       	ror	r19
    3280:	27 95       	ror	r18
    3282:	a7 95       	ror	r26
    3284:	f0 40       	sbci	r31, 0x00	; 0
    3286:	53 95       	inc	r21
    3288:	c9 f7       	brne	.-14     	; 0x327c <__addsf3x+0x52>
    328a:	7e f4       	brtc	.+30     	; 0x32aa <__addsf3x+0x80>
    328c:	1f 16       	cp	r1, r31
    328e:	ba 0b       	sbc	r27, r26
    3290:	62 0b       	sbc	r22, r18
    3292:	73 0b       	sbc	r23, r19
    3294:	84 0b       	sbc	r24, r20
    3296:	ba f0       	brmi	.+46     	; 0x32c6 <__addsf3x+0x9c>
    3298:	91 50       	subi	r25, 0x01	; 1
    329a:	a1 f0       	breq	.+40     	; 0x32c4 <__addsf3x+0x9a>
    329c:	ff 0f       	add	r31, r31
    329e:	bb 1f       	adc	r27, r27
    32a0:	66 1f       	adc	r22, r22
    32a2:	77 1f       	adc	r23, r23
    32a4:	88 1f       	adc	r24, r24
    32a6:	c2 f7       	brpl	.-16     	; 0x3298 <__addsf3x+0x6e>
    32a8:	0e c0       	rjmp	.+28     	; 0x32c6 <__addsf3x+0x9c>
    32aa:	ba 0f       	add	r27, r26
    32ac:	62 1f       	adc	r22, r18
    32ae:	73 1f       	adc	r23, r19
    32b0:	84 1f       	adc	r24, r20
    32b2:	48 f4       	brcc	.+18     	; 0x32c6 <__addsf3x+0x9c>
    32b4:	87 95       	ror	r24
    32b6:	77 95       	ror	r23
    32b8:	67 95       	ror	r22
    32ba:	b7 95       	ror	r27
    32bc:	f7 95       	ror	r31
    32be:	9e 3f       	cpi	r25, 0xFE	; 254
    32c0:	08 f0       	brcs	.+2      	; 0x32c4 <__addsf3x+0x9a>
    32c2:	b0 cf       	rjmp	.-160    	; 0x3224 <__addsf3+0x28>
    32c4:	93 95       	inc	r25
    32c6:	88 0f       	add	r24, r24
    32c8:	08 f0       	brcs	.+2      	; 0x32cc <__addsf3x+0xa2>
    32ca:	99 27       	eor	r25, r25
    32cc:	ee 0f       	add	r30, r30
    32ce:	97 95       	ror	r25
    32d0:	87 95       	ror	r24
    32d2:	08 95       	ret

000032d4 <__cmpsf2>:
    32d4:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <__fp_cmp>
    32d8:	08 f4       	brcc	.+2      	; 0x32dc <__cmpsf2+0x8>
    32da:	81 e0       	ldi	r24, 0x01	; 1
    32dc:	08 95       	ret

000032de <cos>:
    32de:	0e 94 96 1a 	call	0x352c	; 0x352c <__fp_rempio2>
    32e2:	e3 95       	inc	r30
    32e4:	0c 94 d0 1a 	jmp	0x35a0	; 0x35a0 <__fp_sinus>

000032e8 <__divsf3>:
    32e8:	0e 94 88 19 	call	0x3310	; 0x3310 <__divsf3x>
    32ec:	0c 94 bf 1a 	jmp	0x357e	; 0x357e <__fp_round>
    32f0:	0e 94 8d 1a 	call	0x351a	; 0x351a <__fp_pscB>
    32f4:	58 f0       	brcs	.+22     	; 0x330c <__divsf3+0x24>
    32f6:	0e 94 86 1a 	call	0x350c	; 0x350c <__fp_pscA>
    32fa:	40 f0       	brcs	.+16     	; 0x330c <__divsf3+0x24>
    32fc:	29 f4       	brne	.+10     	; 0x3308 <__divsf3+0x20>
    32fe:	5f 3f       	cpi	r21, 0xFF	; 255
    3300:	29 f0       	breq	.+10     	; 0x330c <__divsf3+0x24>
    3302:	0c 94 7d 1a 	jmp	0x34fa	; 0x34fa <__fp_inf>
    3306:	51 11       	cpse	r21, r1
    3308:	0c 94 07 1b 	jmp	0x360e	; 0x360e <__fp_szero>
    330c:	0c 94 83 1a 	jmp	0x3506	; 0x3506 <__fp_nan>

00003310 <__divsf3x>:
    3310:	0e 94 e4 1a 	call	0x35c8	; 0x35c8 <__fp_split3>
    3314:	68 f3       	brcs	.-38     	; 0x32f0 <__divsf3+0x8>

00003316 <__divsf3_pse>:
    3316:	99 23       	and	r25, r25
    3318:	b1 f3       	breq	.-20     	; 0x3306 <__divsf3+0x1e>
    331a:	55 23       	and	r21, r21
    331c:	91 f3       	breq	.-28     	; 0x3302 <__divsf3+0x1a>
    331e:	95 1b       	sub	r25, r21
    3320:	55 0b       	sbc	r21, r21
    3322:	bb 27       	eor	r27, r27
    3324:	aa 27       	eor	r26, r26
    3326:	62 17       	cp	r22, r18
    3328:	73 07       	cpc	r23, r19
    332a:	84 07       	cpc	r24, r20
    332c:	38 f0       	brcs	.+14     	; 0x333c <__divsf3_pse+0x26>
    332e:	9f 5f       	subi	r25, 0xFF	; 255
    3330:	5f 4f       	sbci	r21, 0xFF	; 255
    3332:	22 0f       	add	r18, r18
    3334:	33 1f       	adc	r19, r19
    3336:	44 1f       	adc	r20, r20
    3338:	aa 1f       	adc	r26, r26
    333a:	a9 f3       	breq	.-22     	; 0x3326 <__divsf3_pse+0x10>
    333c:	35 d0       	rcall	.+106    	; 0x33a8 <__divsf3_pse+0x92>
    333e:	0e 2e       	mov	r0, r30
    3340:	3a f0       	brmi	.+14     	; 0x3350 <__divsf3_pse+0x3a>
    3342:	e0 e8       	ldi	r30, 0x80	; 128
    3344:	32 d0       	rcall	.+100    	; 0x33aa <__divsf3_pse+0x94>
    3346:	91 50       	subi	r25, 0x01	; 1
    3348:	50 40       	sbci	r21, 0x00	; 0
    334a:	e6 95       	lsr	r30
    334c:	00 1c       	adc	r0, r0
    334e:	ca f7       	brpl	.-14     	; 0x3342 <__divsf3_pse+0x2c>
    3350:	2b d0       	rcall	.+86     	; 0x33a8 <__divsf3_pse+0x92>
    3352:	fe 2f       	mov	r31, r30
    3354:	29 d0       	rcall	.+82     	; 0x33a8 <__divsf3_pse+0x92>
    3356:	66 0f       	add	r22, r22
    3358:	77 1f       	adc	r23, r23
    335a:	88 1f       	adc	r24, r24
    335c:	bb 1f       	adc	r27, r27
    335e:	26 17       	cp	r18, r22
    3360:	37 07       	cpc	r19, r23
    3362:	48 07       	cpc	r20, r24
    3364:	ab 07       	cpc	r26, r27
    3366:	b0 e8       	ldi	r27, 0x80	; 128
    3368:	09 f0       	breq	.+2      	; 0x336c <__divsf3_pse+0x56>
    336a:	bb 0b       	sbc	r27, r27
    336c:	80 2d       	mov	r24, r0
    336e:	bf 01       	movw	r22, r30
    3370:	ff 27       	eor	r31, r31
    3372:	93 58       	subi	r25, 0x83	; 131
    3374:	5f 4f       	sbci	r21, 0xFF	; 255
    3376:	3a f0       	brmi	.+14     	; 0x3386 <__divsf3_pse+0x70>
    3378:	9e 3f       	cpi	r25, 0xFE	; 254
    337a:	51 05       	cpc	r21, r1
    337c:	78 f0       	brcs	.+30     	; 0x339c <__divsf3_pse+0x86>
    337e:	0c 94 7d 1a 	jmp	0x34fa	; 0x34fa <__fp_inf>
    3382:	0c 94 07 1b 	jmp	0x360e	; 0x360e <__fp_szero>
    3386:	5f 3f       	cpi	r21, 0xFF	; 255
    3388:	e4 f3       	brlt	.-8      	; 0x3382 <__divsf3_pse+0x6c>
    338a:	98 3e       	cpi	r25, 0xE8	; 232
    338c:	d4 f3       	brlt	.-12     	; 0x3382 <__divsf3_pse+0x6c>
    338e:	86 95       	lsr	r24
    3390:	77 95       	ror	r23
    3392:	67 95       	ror	r22
    3394:	b7 95       	ror	r27
    3396:	f7 95       	ror	r31
    3398:	9f 5f       	subi	r25, 0xFF	; 255
    339a:	c9 f7       	brne	.-14     	; 0x338e <__divsf3_pse+0x78>
    339c:	88 0f       	add	r24, r24
    339e:	91 1d       	adc	r25, r1
    33a0:	96 95       	lsr	r25
    33a2:	87 95       	ror	r24
    33a4:	97 f9       	bld	r25, 7
    33a6:	08 95       	ret
    33a8:	e1 e0       	ldi	r30, 0x01	; 1
    33aa:	66 0f       	add	r22, r22
    33ac:	77 1f       	adc	r23, r23
    33ae:	88 1f       	adc	r24, r24
    33b0:	bb 1f       	adc	r27, r27
    33b2:	62 17       	cp	r22, r18
    33b4:	73 07       	cpc	r23, r19
    33b6:	84 07       	cpc	r24, r20
    33b8:	ba 07       	cpc	r27, r26
    33ba:	20 f0       	brcs	.+8      	; 0x33c4 <__divsf3_pse+0xae>
    33bc:	62 1b       	sub	r22, r18
    33be:	73 0b       	sbc	r23, r19
    33c0:	84 0b       	sbc	r24, r20
    33c2:	ba 0b       	sbc	r27, r26
    33c4:	ee 1f       	adc	r30, r30
    33c6:	88 f7       	brcc	.-30     	; 0x33aa <__divsf3_pse+0x94>
    33c8:	e0 95       	com	r30
    33ca:	08 95       	ret

000033cc <__fixsfsi>:
    33cc:	0e 94 ed 19 	call	0x33da	; 0x33da <__fixunssfsi>
    33d0:	68 94       	set
    33d2:	b1 11       	cpse	r27, r1
    33d4:	0c 94 07 1b 	jmp	0x360e	; 0x360e <__fp_szero>
    33d8:	08 95       	ret

000033da <__fixunssfsi>:
    33da:	0e 94 ec 1a 	call	0x35d8	; 0x35d8 <__fp_splitA>
    33de:	88 f0       	brcs	.+34     	; 0x3402 <__fixunssfsi+0x28>
    33e0:	9f 57       	subi	r25, 0x7F	; 127
    33e2:	98 f0       	brcs	.+38     	; 0x340a <__fixunssfsi+0x30>
    33e4:	b9 2f       	mov	r27, r25
    33e6:	99 27       	eor	r25, r25
    33e8:	b7 51       	subi	r27, 0x17	; 23
    33ea:	b0 f0       	brcs	.+44     	; 0x3418 <__fixunssfsi+0x3e>
    33ec:	e1 f0       	breq	.+56     	; 0x3426 <__fixunssfsi+0x4c>
    33ee:	66 0f       	add	r22, r22
    33f0:	77 1f       	adc	r23, r23
    33f2:	88 1f       	adc	r24, r24
    33f4:	99 1f       	adc	r25, r25
    33f6:	1a f0       	brmi	.+6      	; 0x33fe <__fixunssfsi+0x24>
    33f8:	ba 95       	dec	r27
    33fa:	c9 f7       	brne	.-14     	; 0x33ee <__fixunssfsi+0x14>
    33fc:	14 c0       	rjmp	.+40     	; 0x3426 <__fixunssfsi+0x4c>
    33fe:	b1 30       	cpi	r27, 0x01	; 1
    3400:	91 f0       	breq	.+36     	; 0x3426 <__fixunssfsi+0x4c>
    3402:	0e 94 06 1b 	call	0x360c	; 0x360c <__fp_zero>
    3406:	b1 e0       	ldi	r27, 0x01	; 1
    3408:	08 95       	ret
    340a:	0c 94 06 1b 	jmp	0x360c	; 0x360c <__fp_zero>
    340e:	67 2f       	mov	r22, r23
    3410:	78 2f       	mov	r23, r24
    3412:	88 27       	eor	r24, r24
    3414:	b8 5f       	subi	r27, 0xF8	; 248
    3416:	39 f0       	breq	.+14     	; 0x3426 <__fixunssfsi+0x4c>
    3418:	b9 3f       	cpi	r27, 0xF9	; 249
    341a:	cc f3       	brlt	.-14     	; 0x340e <__fixunssfsi+0x34>
    341c:	86 95       	lsr	r24
    341e:	77 95       	ror	r23
    3420:	67 95       	ror	r22
    3422:	b3 95       	inc	r27
    3424:	d9 f7       	brne	.-10     	; 0x341c <__fixunssfsi+0x42>
    3426:	3e f4       	brtc	.+14     	; 0x3436 <__fixunssfsi+0x5c>
    3428:	90 95       	com	r25
    342a:	80 95       	com	r24
    342c:	70 95       	com	r23
    342e:	61 95       	neg	r22
    3430:	7f 4f       	sbci	r23, 0xFF	; 255
    3432:	8f 4f       	sbci	r24, 0xFF	; 255
    3434:	9f 4f       	sbci	r25, 0xFF	; 255
    3436:	08 95       	ret

00003438 <__floatunsisf>:
    3438:	e8 94       	clt
    343a:	09 c0       	rjmp	.+18     	; 0x344e <__floatsisf+0x12>

0000343c <__floatsisf>:
    343c:	97 fb       	bst	r25, 7
    343e:	3e f4       	brtc	.+14     	; 0x344e <__floatsisf+0x12>
    3440:	90 95       	com	r25
    3442:	80 95       	com	r24
    3444:	70 95       	com	r23
    3446:	61 95       	neg	r22
    3448:	7f 4f       	sbci	r23, 0xFF	; 255
    344a:	8f 4f       	sbci	r24, 0xFF	; 255
    344c:	9f 4f       	sbci	r25, 0xFF	; 255
    344e:	99 23       	and	r25, r25
    3450:	a9 f0       	breq	.+42     	; 0x347c <__floatsisf+0x40>
    3452:	f9 2f       	mov	r31, r25
    3454:	96 e9       	ldi	r25, 0x96	; 150
    3456:	bb 27       	eor	r27, r27
    3458:	93 95       	inc	r25
    345a:	f6 95       	lsr	r31
    345c:	87 95       	ror	r24
    345e:	77 95       	ror	r23
    3460:	67 95       	ror	r22
    3462:	b7 95       	ror	r27
    3464:	f1 11       	cpse	r31, r1
    3466:	f8 cf       	rjmp	.-16     	; 0x3458 <__floatsisf+0x1c>
    3468:	fa f4       	brpl	.+62     	; 0x34a8 <__floatsisf+0x6c>
    346a:	bb 0f       	add	r27, r27
    346c:	11 f4       	brne	.+4      	; 0x3472 <__floatsisf+0x36>
    346e:	60 ff       	sbrs	r22, 0
    3470:	1b c0       	rjmp	.+54     	; 0x34a8 <__floatsisf+0x6c>
    3472:	6f 5f       	subi	r22, 0xFF	; 255
    3474:	7f 4f       	sbci	r23, 0xFF	; 255
    3476:	8f 4f       	sbci	r24, 0xFF	; 255
    3478:	9f 4f       	sbci	r25, 0xFF	; 255
    347a:	16 c0       	rjmp	.+44     	; 0x34a8 <__floatsisf+0x6c>
    347c:	88 23       	and	r24, r24
    347e:	11 f0       	breq	.+4      	; 0x3484 <__floatsisf+0x48>
    3480:	96 e9       	ldi	r25, 0x96	; 150
    3482:	11 c0       	rjmp	.+34     	; 0x34a6 <__floatsisf+0x6a>
    3484:	77 23       	and	r23, r23
    3486:	21 f0       	breq	.+8      	; 0x3490 <__floatsisf+0x54>
    3488:	9e e8       	ldi	r25, 0x8E	; 142
    348a:	87 2f       	mov	r24, r23
    348c:	76 2f       	mov	r23, r22
    348e:	05 c0       	rjmp	.+10     	; 0x349a <__floatsisf+0x5e>
    3490:	66 23       	and	r22, r22
    3492:	71 f0       	breq	.+28     	; 0x34b0 <__floatsisf+0x74>
    3494:	96 e8       	ldi	r25, 0x86	; 134
    3496:	86 2f       	mov	r24, r22
    3498:	70 e0       	ldi	r23, 0x00	; 0
    349a:	60 e0       	ldi	r22, 0x00	; 0
    349c:	2a f0       	brmi	.+10     	; 0x34a8 <__floatsisf+0x6c>
    349e:	9a 95       	dec	r25
    34a0:	66 0f       	add	r22, r22
    34a2:	77 1f       	adc	r23, r23
    34a4:	88 1f       	adc	r24, r24
    34a6:	da f7       	brpl	.-10     	; 0x349e <__floatsisf+0x62>
    34a8:	88 0f       	add	r24, r24
    34aa:	96 95       	lsr	r25
    34ac:	87 95       	ror	r24
    34ae:	97 f9       	bld	r25, 7
    34b0:	08 95       	ret

000034b2 <__fp_cmp>:
    34b2:	99 0f       	add	r25, r25
    34b4:	00 08       	sbc	r0, r0
    34b6:	55 0f       	add	r21, r21
    34b8:	aa 0b       	sbc	r26, r26
    34ba:	e0 e8       	ldi	r30, 0x80	; 128
    34bc:	fe ef       	ldi	r31, 0xFE	; 254
    34be:	16 16       	cp	r1, r22
    34c0:	17 06       	cpc	r1, r23
    34c2:	e8 07       	cpc	r30, r24
    34c4:	f9 07       	cpc	r31, r25
    34c6:	c0 f0       	brcs	.+48     	; 0x34f8 <__fp_cmp+0x46>
    34c8:	12 16       	cp	r1, r18
    34ca:	13 06       	cpc	r1, r19
    34cc:	e4 07       	cpc	r30, r20
    34ce:	f5 07       	cpc	r31, r21
    34d0:	98 f0       	brcs	.+38     	; 0x34f8 <__fp_cmp+0x46>
    34d2:	62 1b       	sub	r22, r18
    34d4:	73 0b       	sbc	r23, r19
    34d6:	84 0b       	sbc	r24, r20
    34d8:	95 0b       	sbc	r25, r21
    34da:	39 f4       	brne	.+14     	; 0x34ea <__fp_cmp+0x38>
    34dc:	0a 26       	eor	r0, r26
    34de:	61 f0       	breq	.+24     	; 0x34f8 <__fp_cmp+0x46>
    34e0:	23 2b       	or	r18, r19
    34e2:	24 2b       	or	r18, r20
    34e4:	25 2b       	or	r18, r21
    34e6:	21 f4       	brne	.+8      	; 0x34f0 <__fp_cmp+0x3e>
    34e8:	08 95       	ret
    34ea:	0a 26       	eor	r0, r26
    34ec:	09 f4       	brne	.+2      	; 0x34f0 <__fp_cmp+0x3e>
    34ee:	a1 40       	sbci	r26, 0x01	; 1
    34f0:	a6 95       	lsr	r26
    34f2:	8f ef       	ldi	r24, 0xFF	; 255
    34f4:	81 1d       	adc	r24, r1
    34f6:	81 1d       	adc	r24, r1
    34f8:	08 95       	ret

000034fa <__fp_inf>:
    34fa:	97 f9       	bld	r25, 7
    34fc:	9f 67       	ori	r25, 0x7F	; 127
    34fe:	80 e8       	ldi	r24, 0x80	; 128
    3500:	70 e0       	ldi	r23, 0x00	; 0
    3502:	60 e0       	ldi	r22, 0x00	; 0
    3504:	08 95       	ret

00003506 <__fp_nan>:
    3506:	9f ef       	ldi	r25, 0xFF	; 255
    3508:	80 ec       	ldi	r24, 0xC0	; 192
    350a:	08 95       	ret

0000350c <__fp_pscA>:
    350c:	00 24       	eor	r0, r0
    350e:	0a 94       	dec	r0
    3510:	16 16       	cp	r1, r22
    3512:	17 06       	cpc	r1, r23
    3514:	18 06       	cpc	r1, r24
    3516:	09 06       	cpc	r0, r25
    3518:	08 95       	ret

0000351a <__fp_pscB>:
    351a:	00 24       	eor	r0, r0
    351c:	0a 94       	dec	r0
    351e:	12 16       	cp	r1, r18
    3520:	13 06       	cpc	r1, r19
    3522:	14 06       	cpc	r1, r20
    3524:	05 06       	cpc	r0, r21
    3526:	08 95       	ret
    3528:	0c 94 83 1a 	jmp	0x3506	; 0x3506 <__fp_nan>

0000352c <__fp_rempio2>:
    352c:	0e 94 ec 1a 	call	0x35d8	; 0x35d8 <__fp_splitA>
    3530:	d8 f3       	brcs	.-10     	; 0x3528 <__fp_pscB+0xe>
    3532:	e8 94       	clt
    3534:	e0 e0       	ldi	r30, 0x00	; 0
    3536:	bb 27       	eor	r27, r27
    3538:	9f 57       	subi	r25, 0x7F	; 127
    353a:	f0 f0       	brcs	.+60     	; 0x3578 <__fp_rempio2+0x4c>
    353c:	2a ed       	ldi	r18, 0xDA	; 218
    353e:	3f e0       	ldi	r19, 0x0F	; 15
    3540:	49 ec       	ldi	r20, 0xC9	; 201
    3542:	06 c0       	rjmp	.+12     	; 0x3550 <__fp_rempio2+0x24>
    3544:	ee 0f       	add	r30, r30
    3546:	bb 0f       	add	r27, r27
    3548:	66 1f       	adc	r22, r22
    354a:	77 1f       	adc	r23, r23
    354c:	88 1f       	adc	r24, r24
    354e:	28 f0       	brcs	.+10     	; 0x355a <__fp_rempio2+0x2e>
    3550:	b2 3a       	cpi	r27, 0xA2	; 162
    3552:	62 07       	cpc	r22, r18
    3554:	73 07       	cpc	r23, r19
    3556:	84 07       	cpc	r24, r20
    3558:	28 f0       	brcs	.+10     	; 0x3564 <__fp_rempio2+0x38>
    355a:	b2 5a       	subi	r27, 0xA2	; 162
    355c:	62 0b       	sbc	r22, r18
    355e:	73 0b       	sbc	r23, r19
    3560:	84 0b       	sbc	r24, r20
    3562:	e3 95       	inc	r30
    3564:	9a 95       	dec	r25
    3566:	72 f7       	brpl	.-36     	; 0x3544 <__fp_rempio2+0x18>
    3568:	80 38       	cpi	r24, 0x80	; 128
    356a:	30 f4       	brcc	.+12     	; 0x3578 <__fp_rempio2+0x4c>
    356c:	9a 95       	dec	r25
    356e:	bb 0f       	add	r27, r27
    3570:	66 1f       	adc	r22, r22
    3572:	77 1f       	adc	r23, r23
    3574:	88 1f       	adc	r24, r24
    3576:	d2 f7       	brpl	.-12     	; 0x356c <__fp_rempio2+0x40>
    3578:	90 48       	sbci	r25, 0x80	; 128
    357a:	0c 94 84 1b 	jmp	0x3708	; 0x3708 <__fp_mpack_finite>

0000357e <__fp_round>:
    357e:	09 2e       	mov	r0, r25
    3580:	03 94       	inc	r0
    3582:	00 0c       	add	r0, r0
    3584:	11 f4       	brne	.+4      	; 0x358a <__fp_round+0xc>
    3586:	88 23       	and	r24, r24
    3588:	52 f0       	brmi	.+20     	; 0x359e <__fp_round+0x20>
    358a:	bb 0f       	add	r27, r27
    358c:	40 f4       	brcc	.+16     	; 0x359e <__fp_round+0x20>
    358e:	bf 2b       	or	r27, r31
    3590:	11 f4       	brne	.+4      	; 0x3596 <__fp_round+0x18>
    3592:	60 ff       	sbrs	r22, 0
    3594:	04 c0       	rjmp	.+8      	; 0x359e <__fp_round+0x20>
    3596:	6f 5f       	subi	r22, 0xFF	; 255
    3598:	7f 4f       	sbci	r23, 0xFF	; 255
    359a:	8f 4f       	sbci	r24, 0xFF	; 255
    359c:	9f 4f       	sbci	r25, 0xFF	; 255
    359e:	08 95       	ret

000035a0 <__fp_sinus>:
    35a0:	ef 93       	push	r30
    35a2:	e0 ff       	sbrs	r30, 0
    35a4:	07 c0       	rjmp	.+14     	; 0x35b4 <__fp_sinus+0x14>
    35a6:	a2 ea       	ldi	r26, 0xA2	; 162
    35a8:	2a ed       	ldi	r18, 0xDA	; 218
    35aa:	3f e0       	ldi	r19, 0x0F	; 15
    35ac:	49 ec       	ldi	r20, 0xC9	; 201
    35ae:	5f eb       	ldi	r21, 0xBF	; 191
    35b0:	0e 94 15 19 	call	0x322a	; 0x322a <__addsf3x>
    35b4:	0e 94 bf 1a 	call	0x357e	; 0x357e <__fp_round>
    35b8:	0f 90       	pop	r0
    35ba:	03 94       	inc	r0
    35bc:	01 fc       	sbrc	r0, 1
    35be:	90 58       	subi	r25, 0x80	; 128
    35c0:	e4 e7       	ldi	r30, 0x74	; 116
    35c2:	f0 e0       	ldi	r31, 0x00	; 0
    35c4:	0c 94 90 1b 	jmp	0x3720	; 0x3720 <__fp_powsodd>

000035c8 <__fp_split3>:
    35c8:	57 fd       	sbrc	r21, 7
    35ca:	90 58       	subi	r25, 0x80	; 128
    35cc:	44 0f       	add	r20, r20
    35ce:	55 1f       	adc	r21, r21
    35d0:	59 f0       	breq	.+22     	; 0x35e8 <__fp_splitA+0x10>
    35d2:	5f 3f       	cpi	r21, 0xFF	; 255
    35d4:	71 f0       	breq	.+28     	; 0x35f2 <__fp_splitA+0x1a>
    35d6:	47 95       	ror	r20

000035d8 <__fp_splitA>:
    35d8:	88 0f       	add	r24, r24
    35da:	97 fb       	bst	r25, 7
    35dc:	99 1f       	adc	r25, r25
    35de:	61 f0       	breq	.+24     	; 0x35f8 <__fp_splitA+0x20>
    35e0:	9f 3f       	cpi	r25, 0xFF	; 255
    35e2:	79 f0       	breq	.+30     	; 0x3602 <__fp_splitA+0x2a>
    35e4:	87 95       	ror	r24
    35e6:	08 95       	ret
    35e8:	12 16       	cp	r1, r18
    35ea:	13 06       	cpc	r1, r19
    35ec:	14 06       	cpc	r1, r20
    35ee:	55 1f       	adc	r21, r21
    35f0:	f2 cf       	rjmp	.-28     	; 0x35d6 <__fp_split3+0xe>
    35f2:	46 95       	lsr	r20
    35f4:	f1 df       	rcall	.-30     	; 0x35d8 <__fp_splitA>
    35f6:	08 c0       	rjmp	.+16     	; 0x3608 <__fp_splitA+0x30>
    35f8:	16 16       	cp	r1, r22
    35fa:	17 06       	cpc	r1, r23
    35fc:	18 06       	cpc	r1, r24
    35fe:	99 1f       	adc	r25, r25
    3600:	f1 cf       	rjmp	.-30     	; 0x35e4 <__fp_splitA+0xc>
    3602:	86 95       	lsr	r24
    3604:	71 05       	cpc	r23, r1
    3606:	61 05       	cpc	r22, r1
    3608:	08 94       	sec
    360a:	08 95       	ret

0000360c <__fp_zero>:
    360c:	e8 94       	clt

0000360e <__fp_szero>:
    360e:	bb 27       	eor	r27, r27
    3610:	66 27       	eor	r22, r22
    3612:	77 27       	eor	r23, r23
    3614:	cb 01       	movw	r24, r22
    3616:	97 f9       	bld	r25, 7
    3618:	08 95       	ret

0000361a <__mulsf3>:
    361a:	0e 94 20 1b 	call	0x3640	; 0x3640 <__mulsf3x>
    361e:	0c 94 bf 1a 	jmp	0x357e	; 0x357e <__fp_round>
    3622:	0e 94 86 1a 	call	0x350c	; 0x350c <__fp_pscA>
    3626:	38 f0       	brcs	.+14     	; 0x3636 <__mulsf3+0x1c>
    3628:	0e 94 8d 1a 	call	0x351a	; 0x351a <__fp_pscB>
    362c:	20 f0       	brcs	.+8      	; 0x3636 <__mulsf3+0x1c>
    362e:	95 23       	and	r25, r21
    3630:	11 f0       	breq	.+4      	; 0x3636 <__mulsf3+0x1c>
    3632:	0c 94 7d 1a 	jmp	0x34fa	; 0x34fa <__fp_inf>
    3636:	0c 94 83 1a 	jmp	0x3506	; 0x3506 <__fp_nan>
    363a:	11 24       	eor	r1, r1
    363c:	0c 94 07 1b 	jmp	0x360e	; 0x360e <__fp_szero>

00003640 <__mulsf3x>:
    3640:	0e 94 e4 1a 	call	0x35c8	; 0x35c8 <__fp_split3>
    3644:	70 f3       	brcs	.-36     	; 0x3622 <__mulsf3+0x8>

00003646 <__mulsf3_pse>:
    3646:	95 9f       	mul	r25, r21
    3648:	c1 f3       	breq	.-16     	; 0x363a <__mulsf3+0x20>
    364a:	95 0f       	add	r25, r21
    364c:	50 e0       	ldi	r21, 0x00	; 0
    364e:	55 1f       	adc	r21, r21
    3650:	62 9f       	mul	r22, r18
    3652:	f0 01       	movw	r30, r0
    3654:	72 9f       	mul	r23, r18
    3656:	bb 27       	eor	r27, r27
    3658:	f0 0d       	add	r31, r0
    365a:	b1 1d       	adc	r27, r1
    365c:	63 9f       	mul	r22, r19
    365e:	aa 27       	eor	r26, r26
    3660:	f0 0d       	add	r31, r0
    3662:	b1 1d       	adc	r27, r1
    3664:	aa 1f       	adc	r26, r26
    3666:	64 9f       	mul	r22, r20
    3668:	66 27       	eor	r22, r22
    366a:	b0 0d       	add	r27, r0
    366c:	a1 1d       	adc	r26, r1
    366e:	66 1f       	adc	r22, r22
    3670:	82 9f       	mul	r24, r18
    3672:	22 27       	eor	r18, r18
    3674:	b0 0d       	add	r27, r0
    3676:	a1 1d       	adc	r26, r1
    3678:	62 1f       	adc	r22, r18
    367a:	73 9f       	mul	r23, r19
    367c:	b0 0d       	add	r27, r0
    367e:	a1 1d       	adc	r26, r1
    3680:	62 1f       	adc	r22, r18
    3682:	83 9f       	mul	r24, r19
    3684:	a0 0d       	add	r26, r0
    3686:	61 1d       	adc	r22, r1
    3688:	22 1f       	adc	r18, r18
    368a:	74 9f       	mul	r23, r20
    368c:	33 27       	eor	r19, r19
    368e:	a0 0d       	add	r26, r0
    3690:	61 1d       	adc	r22, r1
    3692:	23 1f       	adc	r18, r19
    3694:	84 9f       	mul	r24, r20
    3696:	60 0d       	add	r22, r0
    3698:	21 1d       	adc	r18, r1
    369a:	82 2f       	mov	r24, r18
    369c:	76 2f       	mov	r23, r22
    369e:	6a 2f       	mov	r22, r26
    36a0:	11 24       	eor	r1, r1
    36a2:	9f 57       	subi	r25, 0x7F	; 127
    36a4:	50 40       	sbci	r21, 0x00	; 0
    36a6:	9a f0       	brmi	.+38     	; 0x36ce <__mulsf3_pse+0x88>
    36a8:	f1 f0       	breq	.+60     	; 0x36e6 <__mulsf3_pse+0xa0>
    36aa:	88 23       	and	r24, r24
    36ac:	4a f0       	brmi	.+18     	; 0x36c0 <__mulsf3_pse+0x7a>
    36ae:	ee 0f       	add	r30, r30
    36b0:	ff 1f       	adc	r31, r31
    36b2:	bb 1f       	adc	r27, r27
    36b4:	66 1f       	adc	r22, r22
    36b6:	77 1f       	adc	r23, r23
    36b8:	88 1f       	adc	r24, r24
    36ba:	91 50       	subi	r25, 0x01	; 1
    36bc:	50 40       	sbci	r21, 0x00	; 0
    36be:	a9 f7       	brne	.-22     	; 0x36aa <__mulsf3_pse+0x64>
    36c0:	9e 3f       	cpi	r25, 0xFE	; 254
    36c2:	51 05       	cpc	r21, r1
    36c4:	80 f0       	brcs	.+32     	; 0x36e6 <__mulsf3_pse+0xa0>
    36c6:	0c 94 7d 1a 	jmp	0x34fa	; 0x34fa <__fp_inf>
    36ca:	0c 94 07 1b 	jmp	0x360e	; 0x360e <__fp_szero>
    36ce:	5f 3f       	cpi	r21, 0xFF	; 255
    36d0:	e4 f3       	brlt	.-8      	; 0x36ca <__mulsf3_pse+0x84>
    36d2:	98 3e       	cpi	r25, 0xE8	; 232
    36d4:	d4 f3       	brlt	.-12     	; 0x36ca <__mulsf3_pse+0x84>
    36d6:	86 95       	lsr	r24
    36d8:	77 95       	ror	r23
    36da:	67 95       	ror	r22
    36dc:	b7 95       	ror	r27
    36de:	f7 95       	ror	r31
    36e0:	e7 95       	ror	r30
    36e2:	9f 5f       	subi	r25, 0xFF	; 255
    36e4:	c1 f7       	brne	.-16     	; 0x36d6 <__mulsf3_pse+0x90>
    36e6:	fe 2b       	or	r31, r30
    36e8:	88 0f       	add	r24, r24
    36ea:	91 1d       	adc	r25, r1
    36ec:	96 95       	lsr	r25
    36ee:	87 95       	ror	r24
    36f0:	97 f9       	bld	r25, 7
    36f2:	08 95       	ret

000036f4 <sin>:
    36f4:	9f 93       	push	r25
    36f6:	0e 94 96 1a 	call	0x352c	; 0x352c <__fp_rempio2>
    36fa:	0f 90       	pop	r0
    36fc:	07 fc       	sbrc	r0, 7
    36fe:	ee 5f       	subi	r30, 0xFE	; 254
    3700:	0c 94 d0 1a 	jmp	0x35a0	; 0x35a0 <__fp_sinus>

00003704 <__fp_mpack>:
    3704:	9f 3f       	cpi	r25, 0xFF	; 255
    3706:	31 f0       	breq	.+12     	; 0x3714 <__fp_mpack_finite+0xc>

00003708 <__fp_mpack_finite>:
    3708:	91 50       	subi	r25, 0x01	; 1
    370a:	20 f4       	brcc	.+8      	; 0x3714 <__fp_mpack_finite+0xc>
    370c:	87 95       	ror	r24
    370e:	77 95       	ror	r23
    3710:	67 95       	ror	r22
    3712:	b7 95       	ror	r27
    3714:	88 0f       	add	r24, r24
    3716:	91 1d       	adc	r25, r1
    3718:	96 95       	lsr	r25
    371a:	87 95       	ror	r24
    371c:	97 f9       	bld	r25, 7
    371e:	08 95       	ret

00003720 <__fp_powsodd>:
    3720:	9f 93       	push	r25
    3722:	8f 93       	push	r24
    3724:	7f 93       	push	r23
    3726:	6f 93       	push	r22
    3728:	ff 93       	push	r31
    372a:	ef 93       	push	r30
    372c:	9b 01       	movw	r18, r22
    372e:	ac 01       	movw	r20, r24
    3730:	0e 94 0d 1b 	call	0x361a	; 0x361a <__mulsf3>
    3734:	ef 91       	pop	r30
    3736:	ff 91       	pop	r31
    3738:	0e 94 a4 1b 	call	0x3748	; 0x3748 <__fp_powser>
    373c:	2f 91       	pop	r18
    373e:	3f 91       	pop	r19
    3740:	4f 91       	pop	r20
    3742:	5f 91       	pop	r21
    3744:	0c 94 0d 1b 	jmp	0x361a	; 0x361a <__mulsf3>

00003748 <__fp_powser>:
    3748:	df 93       	push	r29
    374a:	cf 93       	push	r28
    374c:	1f 93       	push	r17
    374e:	0f 93       	push	r16
    3750:	ff 92       	push	r15
    3752:	ef 92       	push	r14
    3754:	df 92       	push	r13
    3756:	7b 01       	movw	r14, r22
    3758:	8c 01       	movw	r16, r24
    375a:	68 94       	set
    375c:	06 c0       	rjmp	.+12     	; 0x376a <__fp_powser+0x22>
    375e:	da 2e       	mov	r13, r26
    3760:	ef 01       	movw	r28, r30
    3762:	0e 94 20 1b 	call	0x3640	; 0x3640 <__mulsf3x>
    3766:	fe 01       	movw	r30, r28
    3768:	e8 94       	clt
    376a:	a5 91       	lpm	r26, Z+
    376c:	25 91       	lpm	r18, Z+
    376e:	35 91       	lpm	r19, Z+
    3770:	45 91       	lpm	r20, Z+
    3772:	55 91       	lpm	r21, Z+
    3774:	a6 f3       	brts	.-24     	; 0x375e <__fp_powser+0x16>
    3776:	ef 01       	movw	r28, r30
    3778:	0e 94 15 19 	call	0x322a	; 0x322a <__addsf3x>
    377c:	fe 01       	movw	r30, r28
    377e:	97 01       	movw	r18, r14
    3780:	a8 01       	movw	r20, r16
    3782:	da 94       	dec	r13
    3784:	69 f7       	brne	.-38     	; 0x3760 <__fp_powser+0x18>
    3786:	df 90       	pop	r13
    3788:	ef 90       	pop	r14
    378a:	ff 90       	pop	r15
    378c:	0f 91       	pop	r16
    378e:	1f 91       	pop	r17
    3790:	cf 91       	pop	r28
    3792:	df 91       	pop	r29
    3794:	08 95       	ret

00003796 <__mulsi3>:
    3796:	db 01       	movw	r26, r22
    3798:	8f 93       	push	r24
    379a:	9f 93       	push	r25
    379c:	0e 94 22 1c 	call	0x3844	; 0x3844 <__muluhisi3>
    37a0:	bf 91       	pop	r27
    37a2:	af 91       	pop	r26
    37a4:	a2 9f       	mul	r26, r18
    37a6:	80 0d       	add	r24, r0
    37a8:	91 1d       	adc	r25, r1
    37aa:	a3 9f       	mul	r26, r19
    37ac:	90 0d       	add	r25, r0
    37ae:	b2 9f       	mul	r27, r18
    37b0:	90 0d       	add	r25, r0
    37b2:	11 24       	eor	r1, r1
    37b4:	08 95       	ret

000037b6 <__udivmodsi4>:
    37b6:	a1 e2       	ldi	r26, 0x21	; 33
    37b8:	1a 2e       	mov	r1, r26
    37ba:	aa 1b       	sub	r26, r26
    37bc:	bb 1b       	sub	r27, r27
    37be:	fd 01       	movw	r30, r26
    37c0:	0d c0       	rjmp	.+26     	; 0x37dc <__udivmodsi4_ep>

000037c2 <__udivmodsi4_loop>:
    37c2:	aa 1f       	adc	r26, r26
    37c4:	bb 1f       	adc	r27, r27
    37c6:	ee 1f       	adc	r30, r30
    37c8:	ff 1f       	adc	r31, r31
    37ca:	a2 17       	cp	r26, r18
    37cc:	b3 07       	cpc	r27, r19
    37ce:	e4 07       	cpc	r30, r20
    37d0:	f5 07       	cpc	r31, r21
    37d2:	20 f0       	brcs	.+8      	; 0x37dc <__udivmodsi4_ep>
    37d4:	a2 1b       	sub	r26, r18
    37d6:	b3 0b       	sbc	r27, r19
    37d8:	e4 0b       	sbc	r30, r20
    37da:	f5 0b       	sbc	r31, r21

000037dc <__udivmodsi4_ep>:
    37dc:	66 1f       	adc	r22, r22
    37de:	77 1f       	adc	r23, r23
    37e0:	88 1f       	adc	r24, r24
    37e2:	99 1f       	adc	r25, r25
    37e4:	1a 94       	dec	r1
    37e6:	69 f7       	brne	.-38     	; 0x37c2 <__udivmodsi4_loop>
    37e8:	60 95       	com	r22
    37ea:	70 95       	com	r23
    37ec:	80 95       	com	r24
    37ee:	90 95       	com	r25
    37f0:	9b 01       	movw	r18, r22
    37f2:	ac 01       	movw	r20, r24
    37f4:	bd 01       	movw	r22, r26
    37f6:	cf 01       	movw	r24, r30
    37f8:	08 95       	ret

000037fa <__divmodsi4>:
    37fa:	05 2e       	mov	r0, r21
    37fc:	97 fb       	bst	r25, 7
    37fe:	1e f4       	brtc	.+6      	; 0x3806 <__divmodsi4+0xc>
    3800:	00 94       	com	r0
    3802:	0e 94 14 1c 	call	0x3828	; 0x3828 <__negsi2>
    3806:	57 fd       	sbrc	r21, 7
    3808:	07 d0       	rcall	.+14     	; 0x3818 <__divmodsi4_neg2>
    380a:	0e 94 db 1b 	call	0x37b6	; 0x37b6 <__udivmodsi4>
    380e:	07 fc       	sbrc	r0, 7
    3810:	03 d0       	rcall	.+6      	; 0x3818 <__divmodsi4_neg2>
    3812:	4e f4       	brtc	.+18     	; 0x3826 <__divmodsi4_exit>
    3814:	0c 94 14 1c 	jmp	0x3828	; 0x3828 <__negsi2>

00003818 <__divmodsi4_neg2>:
    3818:	50 95       	com	r21
    381a:	40 95       	com	r20
    381c:	30 95       	com	r19
    381e:	21 95       	neg	r18
    3820:	3f 4f       	sbci	r19, 0xFF	; 255
    3822:	4f 4f       	sbci	r20, 0xFF	; 255
    3824:	5f 4f       	sbci	r21, 0xFF	; 255

00003826 <__divmodsi4_exit>:
    3826:	08 95       	ret

00003828 <__negsi2>:
    3828:	90 95       	com	r25
    382a:	80 95       	com	r24
    382c:	70 95       	com	r23
    382e:	61 95       	neg	r22
    3830:	7f 4f       	sbci	r23, 0xFF	; 255
    3832:	8f 4f       	sbci	r24, 0xFF	; 255
    3834:	9f 4f       	sbci	r25, 0xFF	; 255
    3836:	08 95       	ret

00003838 <__tablejump2__>:
    3838:	ee 0f       	add	r30, r30
    383a:	ff 1f       	adc	r31, r31
    383c:	05 90       	lpm	r0, Z+
    383e:	f4 91       	lpm	r31, Z
    3840:	e0 2d       	mov	r30, r0
    3842:	09 94       	ijmp

00003844 <__muluhisi3>:
    3844:	0e 94 35 1c 	call	0x386a	; 0x386a <__umulhisi3>
    3848:	a5 9f       	mul	r26, r21
    384a:	90 0d       	add	r25, r0
    384c:	b4 9f       	mul	r27, r20
    384e:	90 0d       	add	r25, r0
    3850:	a4 9f       	mul	r26, r20
    3852:	80 0d       	add	r24, r0
    3854:	91 1d       	adc	r25, r1
    3856:	11 24       	eor	r1, r1
    3858:	08 95       	ret

0000385a <__mulshisi3>:
    385a:	b7 ff       	sbrs	r27, 7
    385c:	0c 94 22 1c 	jmp	0x3844	; 0x3844 <__muluhisi3>

00003860 <__mulohisi3>:
    3860:	0e 94 22 1c 	call	0x3844	; 0x3844 <__muluhisi3>
    3864:	82 1b       	sub	r24, r18
    3866:	93 0b       	sbc	r25, r19
    3868:	08 95       	ret

0000386a <__umulhisi3>:
    386a:	a2 9f       	mul	r26, r18
    386c:	b0 01       	movw	r22, r0
    386e:	b3 9f       	mul	r27, r19
    3870:	c0 01       	movw	r24, r0
    3872:	a3 9f       	mul	r26, r19
    3874:	70 0d       	add	r23, r0
    3876:	81 1d       	adc	r24, r1
    3878:	11 24       	eor	r1, r1
    387a:	91 1d       	adc	r25, r1
    387c:	b2 9f       	mul	r27, r18
    387e:	70 0d       	add	r23, r0
    3880:	81 1d       	adc	r24, r1
    3882:	11 24       	eor	r1, r1
    3884:	91 1d       	adc	r25, r1
    3886:	08 95       	ret

00003888 <do_rand>:
    3888:	8f 92       	push	r8
    388a:	9f 92       	push	r9
    388c:	af 92       	push	r10
    388e:	bf 92       	push	r11
    3890:	cf 92       	push	r12
    3892:	df 92       	push	r13
    3894:	ef 92       	push	r14
    3896:	ff 92       	push	r15
    3898:	cf 93       	push	r28
    389a:	df 93       	push	r29
    389c:	ec 01       	movw	r28, r24
    389e:	68 81       	ld	r22, Y
    38a0:	79 81       	ldd	r23, Y+1	; 0x01
    38a2:	8a 81       	ldd	r24, Y+2	; 0x02
    38a4:	9b 81       	ldd	r25, Y+3	; 0x03
    38a6:	61 15       	cp	r22, r1
    38a8:	71 05       	cpc	r23, r1
    38aa:	81 05       	cpc	r24, r1
    38ac:	91 05       	cpc	r25, r1
    38ae:	21 f4       	brne	.+8      	; 0x38b8 <do_rand+0x30>
    38b0:	64 e2       	ldi	r22, 0x24	; 36
    38b2:	79 ed       	ldi	r23, 0xD9	; 217
    38b4:	8b e5       	ldi	r24, 0x5B	; 91
    38b6:	97 e0       	ldi	r25, 0x07	; 7
    38b8:	2d e1       	ldi	r18, 0x1D	; 29
    38ba:	33 ef       	ldi	r19, 0xF3	; 243
    38bc:	41 e0       	ldi	r20, 0x01	; 1
    38be:	50 e0       	ldi	r21, 0x00	; 0
    38c0:	0e 94 fd 1b 	call	0x37fa	; 0x37fa <__divmodsi4>
    38c4:	49 01       	movw	r8, r18
    38c6:	5a 01       	movw	r10, r20
    38c8:	9b 01       	movw	r18, r22
    38ca:	ac 01       	movw	r20, r24
    38cc:	a7 ea       	ldi	r26, 0xA7	; 167
    38ce:	b1 e4       	ldi	r27, 0x41	; 65
    38d0:	0e 94 22 1c 	call	0x3844	; 0x3844 <__muluhisi3>
    38d4:	6b 01       	movw	r12, r22
    38d6:	7c 01       	movw	r14, r24
    38d8:	ac ee       	ldi	r26, 0xEC	; 236
    38da:	b4 ef       	ldi	r27, 0xF4	; 244
    38dc:	a5 01       	movw	r20, r10
    38de:	94 01       	movw	r18, r8
    38e0:	0e 94 30 1c 	call	0x3860	; 0x3860 <__mulohisi3>
    38e4:	dc 01       	movw	r26, r24
    38e6:	cb 01       	movw	r24, r22
    38e8:	8c 0d       	add	r24, r12
    38ea:	9d 1d       	adc	r25, r13
    38ec:	ae 1d       	adc	r26, r14
    38ee:	bf 1d       	adc	r27, r15
    38f0:	b7 ff       	sbrs	r27, 7
    38f2:	03 c0       	rjmp	.+6      	; 0x38fa <do_rand+0x72>
    38f4:	01 97       	sbiw	r24, 0x01	; 1
    38f6:	a1 09       	sbc	r26, r1
    38f8:	b0 48       	sbci	r27, 0x80	; 128
    38fa:	88 83       	st	Y, r24
    38fc:	99 83       	std	Y+1, r25	; 0x01
    38fe:	aa 83       	std	Y+2, r26	; 0x02
    3900:	bb 83       	std	Y+3, r27	; 0x03
    3902:	9f 77       	andi	r25, 0x7F	; 127
    3904:	df 91       	pop	r29
    3906:	cf 91       	pop	r28
    3908:	ff 90       	pop	r15
    390a:	ef 90       	pop	r14
    390c:	df 90       	pop	r13
    390e:	cf 90       	pop	r12
    3910:	bf 90       	pop	r11
    3912:	af 90       	pop	r10
    3914:	9f 90       	pop	r9
    3916:	8f 90       	pop	r8
    3918:	08 95       	ret

0000391a <rand_r>:
    391a:	0e 94 44 1c 	call	0x3888	; 0x3888 <do_rand>
    391e:	08 95       	ret

00003920 <rand>:
    3920:	80 e6       	ldi	r24, 0x60	; 96
    3922:	90 e0       	ldi	r25, 0x00	; 0
    3924:	0e 94 44 1c 	call	0x3888	; 0x3888 <do_rand>
    3928:	08 95       	ret

0000392a <srand>:
    392a:	a0 e0       	ldi	r26, 0x00	; 0
    392c:	b0 e0       	ldi	r27, 0x00	; 0
    392e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
    3932:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    3936:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
    393a:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
    393e:	08 95       	ret

00003940 <_exit>:
    3940:	f8 94       	cli

00003942 <__stop_program>:
    3942:	ff cf       	rjmp	.-2      	; 0x3942 <__stop_program>
